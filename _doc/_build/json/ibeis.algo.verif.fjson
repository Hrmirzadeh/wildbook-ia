{"parents": [{"link": "../ibeis/", "title": "ibeis package"}, {"link": "../ibeis.algo/", "title": "ibeis.algo package"}], "prev": {"link": "../ibeis.algo.smk/", "title": "ibeis.algo.smk package"}, "next": {"link": "../ibeis.algo.verif.torch/", "title": "ibeis.algo.verif.torch package"}, "title": "ibeis.algo.verif package", "meta": {}, "body": "<div class=\"section\" id=\"ibeis-algo-verif-package\">\n<h1>ibeis.algo.verif package<a class=\"headerlink\" href=\"#ibeis-algo-verif-package\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"subpackages\">\n<h2>Subpackages<a class=\"headerlink\" href=\"#subpackages\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"toctree-wrapper compound\">\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"../ibeis.algo.verif.torch/\">ibeis.algo.verif.torch package</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.verif.torch/#submodules\">Submodules</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.verif.torch/#ibeis-algo-verif-torch-fit-harness-module\">ibeis.algo.verif.torch.fit_harness module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.verif.torch/#module-ibeis.algo.verif.torch.gpu_util\">ibeis.algo.verif.torch.gpu_util module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.verif.torch/#module-ibeis.algo.verif.torch.lr_schedule\">ibeis.algo.verif.torch.lr_schedule module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.verif.torch/#module-ibeis.algo.verif.torch.models\">ibeis.algo.verif.torch.models module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.verif.torch/#module-ibeis.algo.verif.torch.netmath\">ibeis.algo.verif.torch.netmath module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.verif.torch/#module-ibeis.algo.verif.torch.old_harness\">ibeis.algo.verif.torch.old_harness module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.verif.torch/#module-ibeis.algo.verif.torch.siamese\">ibeis.algo.verif.torch.siamese module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.verif.torch/#module-ibeis.algo.verif.torch.train_main\">ibeis.algo.verif.torch.train_main module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.verif.torch/#module-ibeis.algo.verif.torch\">Module contents</a></li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"section\" id=\"submodules\">\n<h2>Submodules<a class=\"headerlink\" href=\"#submodules\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.clf_helpers\">\n<span id=\"ibeis-algo-verif-clf-helpers-module\"></span><h2>ibeis.algo.verif.clf_helpers module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.clf_helpers\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This module is a work in progress, as such concepts are subject to change.</p>\n<dl class=\"docutils\">\n<dt>MAIN IDEA:</dt>\n<dd><cite>MultiTaskSamples</cite> serves as a structure to contain and manipulate a set of\nsamples with potentially many different types of labels and features.</dd>\n</dl>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfProblem\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.clf_helpers.</code><code class=\"descname\">ClfProblem</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfProblem\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfProblem\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfProblem.learn_deploy_classifiers\">\n<code class=\"descname\">learn_deploy_classifiers</code><span class=\"sig-paren\">(</span><em>task_keys=None</em>, <em>clf_key=None</em>, <em>data_key=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfProblem.learn_deploy_classifiers\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfProblem.learn_deploy_classifiers\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Learns on data without any train/validation split</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfProblem.learn_evaluation_classifiers\">\n<code class=\"descname\">learn_evaluation_classifiers</code><span class=\"sig-paren\">(</span><em>task_keys=None</em>, <em>clf_keys=None</em>, <em>data_keys=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfProblem.learn_evaluation_classifiers\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfProblem.learn_evaluation_classifiers\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Evaluates by learning classifiers using cross validation.\nDo not use this to learn production classifiers.</p>\n<p>python -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db PZ_PB_RF_TRAIN \u2013show</p>\n<p>Example:</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m clf_helpers learn_evaluation_classifiers</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.clf_helpers</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">IrisProblem</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">eval_clf_keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Logit&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;RF&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">eval_task_keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;iris&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">eval_data_keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;learn(all)&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">learn_evaluation_classifiers</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">task_combo_res</span><span class=\"p\">[</span><span class=\"s1\">&#39;iris&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;Logit&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;learn(all)&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">print_report</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">task_combo_res</span><span class=\"p\">[</span><span class=\"s1\">&#39;iris&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;RF&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;learn(all)&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">print_report</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfProblem.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfProblem.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfProblem.set_pandas_options\">\n<code class=\"descname\">set_pandas_options</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfProblem.set_pandas_options\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfProblem.set_pandas_options\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfProblem.set_pandas_options_low\">\n<code class=\"descname\">set_pandas_options_low</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfProblem.set_pandas_options_low\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfProblem.set_pandas_options_low\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfProblem.set_pandas_options_normal\">\n<code class=\"descname\">set_pandas_options_normal</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfProblem.set_pandas_options_normal\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfProblem.set_pandas_options_normal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.clf_helpers.</code><code class=\"descname\">ClfResult</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<p>Handles evaluation statistics for a multiclass classifier trained on a\nspecific dataset with specific labels.</p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.augment_if_needed\">\n<code class=\"descname\">augment_if_needed</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.augment_if_needed\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.augment_if_needed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds in dummy values for missing classes</p>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.combine_results\">\n<em class=\"property\">classmethod </em><code class=\"descname\">combine_results</code><span class=\"sig-paren\">(</span><em>res_list</em>, <em>labels=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.combine_results\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.combine_results\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Combine results from cross validation runs into a single result\nrepresenting the performance of the entire dataset</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.compress\">\n<code class=\"descname\">compress</code><span class=\"sig-paren\">(</span><em>flags</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.compress\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.compress\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.confusions\">\n<code class=\"descname\">confusions</code><span class=\"sig-paren\">(</span><em>class_name</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.confusions\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.confusions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.confusions_ovr\">\n<code class=\"descname\">confusions_ovr</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.confusions_ovr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.confusions_ovr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.extended_clf_report\">\n<code class=\"descname\">extended_clf_report</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.extended_clf_report\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.extended_clf_report\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.get_pos_threshes\">\n<code class=\"descname\">get_pos_threshes</code><span class=\"sig-paren\">(</span><em>metric='fpr'</em>, <em>value=0.0001</em>, <em>maximize=False</em>, <em>warmup=200</em>, <em>priors=None</em>, <em>min_thresh=0.5</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.get_pos_threshes\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.get_pos_threshes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Finds a threshold that achieves the desired <cite>value</cite> for the desired\nmetric, while maximizing or minimizing the threshold.</p>\n<p>For positive classification you want to minimize the threshold.\nPriors can be passed in to augment probabilities depending on support.\nBy default a class prior is 1 for threshold minimization and 0 for\nmaximization.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.get_thresholds\">\n<code class=\"descname\">get_thresholds</code><span class=\"sig-paren\">(</span><em>metric='mcc'</em>, <em>value='maximize'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.get_thresholds\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.get_thresholds\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>get_metric = \u2018thresholds\u2019\nat_metric = metric = \u2018mcc\u2019\nat_value = value = \u2018maximize\u2019</p>\n<p>a = []\nb = []\nfor x in np.linspace(0, 1, 1000):</p>\n<blockquote>\n<div>a += [cfms.get_metric_at_metric(\u2018thresholds\u2019, \u2018fpr\u2019, x, subindex=True)]\nb += [cfms.get_thresh_at_metric(\u2018fpr\u2019, x)]</div></blockquote>\n<p>a = np.array(a)\nb = np.array(b)\nd = (a - b)\nprint((d.min(), d.max()))</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.hardness_analysis\">\n<code class=\"descname\">hardness_analysis</code><span class=\"sig-paren\">(</span><em>samples</em>, <em>infr=None</em>, <em>method='argmax'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.hardness_analysis\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.hardness_analysis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>samples = pblm.samples</p>\n<p># TODO MWE with sklearn data</p>\n<blockquote>\n<div><p># ClfResult.make_single(ClfResult, clf, X_df, test_idx, labels,\n# data_key, feat_dims=None):</p>\n<p>import sklearn.datasets\niris = sklearn.datasets.load_iris()</p>\n<p># TODO: make this setup simpler\npblm = ClfProblem()\ntask_key, clf_key, data_key = \u2018iris\u2019, \u2018RF\u2019, \u2018learn(all)\u2019\nX_df = pd.DataFrame(iris.data, columns=iris.feature_names)\nsamples = MultiTaskSamples(X_df.index)\nsamples.apply_indicators({\u2018iris\u2019: {name: iris.target == idx</p>\n<blockquote>\n<div>for idx, name in enumerate(iris.target_names)}})</div></blockquote>\n<p>samples.X_dict = {\u2018learn(all)\u2019: X_df}</p>\n<p>pblm.samples = samples\npblm.xval_kw[\u2018type\u2019] = \u2018StratifiedKFold\u2019\nclf_list, res_list = pblm._train_evaluation_clf(</p>\n<blockquote>\n<div>task_key, data_key, clf_key)</div></blockquote>\n<p>labels = pblm.samples.subtasks[task_key]\nres = ClfResult.combine_results(res_list, labels)</p>\n</div></blockquote>\n<p>res.get_thresholds(\u2018mcc\u2019, \u2018maximize\u2019)</p>\n<p>predict_method = \u2018argmax\u2019</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.index\">\n<code class=\"descname\">index</code><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.index\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.ishow_roc\">\n<code class=\"descname\">ishow_roc</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.ishow_roc\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.ishow_roc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.make_single\">\n<em class=\"property\">classmethod </em><code class=\"descname\">make_single</code><span class=\"sig-paren\">(</span><em>clf</em>, <em>X_df</em>, <em>test_idx</em>, <em>labels</em>, <em>data_key</em>, <em>feat_dims=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.make_single\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.make_single\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Make a result for a single cross validiation subset</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.missing_classes\">\n<code class=\"descname\">missing_classes</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.missing_classes\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.missing_classes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.print_report\">\n<code class=\"descname\">print_report</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.print_report\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.print_report\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.report_auto_thresholds\">\n<code class=\"descname\">report_auto_thresholds</code><span class=\"sig-paren\">(</span><em>threshes</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.report_auto_thresholds\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.report_auto_thresholds\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.report_thresholds\">\n<code class=\"descname\">report_thresholds</code><span class=\"sig-paren\">(</span><em>warmup=200</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.report_thresholds\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.report_thresholds\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.roc_score\">\n<code class=\"descname\">roc_score</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.roc_score\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.roc_score\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.roc_scores_ovr\">\n<code class=\"descname\">roc_scores_ovr</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.roc_scores_ovr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.roc_scores_ovr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.roc_scores_ovr_hat\">\n<code class=\"descname\">roc_scores_ovr_hat</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.roc_scores_ovr_hat\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.roc_scores_ovr_hat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.ClfResult.show_roc\">\n<code class=\"descname\">show_roc</code><span class=\"sig-paren\">(</span><em>class_name</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#ClfResult.show_roc\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.ClfResult.show_roc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.clf_helpers.IrisProblem\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.clf_helpers.</code><code class=\"descname\">IrisProblem</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#IrisProblem\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.IrisProblem\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.verif.clf_helpers.ClfProblem\" title=\"ibeis.algo.verif.clf_helpers.ClfProblem\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.verif.clf_helpers.ClfProblem</span></code></a></p>\n<p>Simple demo using the abstract clf problem to work on the iris dataset.</p>\n<blockquote>\n<div><dl class=\"docutils\">\n<dt>Example:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.clf_helpers</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">IrisProblem</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">samples</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</div></blockquote>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.IrisProblem.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.IrisProblem.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.IrisProblem.setup\">\n<code class=\"descname\">setup</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#IrisProblem.setup\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.IrisProblem.setup\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.clf_helpers.</code><code class=\"descname\">MultiClassLabels</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiClassLabels\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<p>Used by samples to encode a single set of mutually exclusive labels.  These\ncan either be binary or multiclass.</p>\n<blockquote>\n<div>import pandas as pd\npd.options.display.max_rows = 10\n# pd.options.display.max_rows = 20\npd.options.display.max_columns = 40\npd.options.display.width = 160</div></blockquote>\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels.from_indicators\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_indicators</code><span class=\"sig-paren\">(</span><em>indicator</em>, <em>index=None</em>, <em>task_name=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiClassLabels.from_indicators\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels.from_indicators\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels.gen_one_vs_rest_labels\">\n<code class=\"descname\">gen_one_vs_rest_labels</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiClassLabels.gen_one_vs_rest_labels\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels.gen_one_vs_rest_labels\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.clf_helpers</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indicator</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">odict</span><span class=\"p\">([</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>        <span class=\"p\">(</span><span class=\"s1\">&#39;state1&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>        <span class=\"p\">(</span><span class=\"s1\">&#39;state2&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>        <span class=\"p\">(</span><span class=\"s1\">&#39;state3&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">MultiClassLabels</span><span class=\"o\">.</span><span class=\"n\">from_indicators</span><span class=\"p\">(</span><span class=\"n\">indicator</span><span class=\"p\">,</span> <span class=\"n\">task_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;task1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sublabels</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">gen_one_vs_rest_labels</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sublabel</span> <span class=\"o\">=</span> <span class=\"n\">sublabels</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels.has_support\">\n<code class=\"descname\">has_support</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiClassLabels.has_support\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels.has_support\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels.lookup_class_idx\">\n<code class=\"descname\">lookup_class_idx</code><span class=\"sig-paren\">(</span><em>class_name</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiClassLabels.lookup_class_idx\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels.lookup_class_idx\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels.make_histogram\">\n<code class=\"descname\">make_histogram</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiClassLabels.make_histogram\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels.make_histogram\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels.one_vs_rest_task_names\">\n<code class=\"descname\">one_vs_rest_task_names</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiClassLabels.one_vs_rest_task_names\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels.one_vs_rest_task_names\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels.print_info\">\n<code class=\"descname\">print_info</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiClassLabels.print_info\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels.print_info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels.target_type\">\n<code class=\"descname\">target_type</code><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels.target_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels.y_bin\">\n<code class=\"descname\">y_bin</code><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels.y_bin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiClassLabels.y_enc\">\n<code class=\"descname\">y_enc</code><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiClassLabels.y_enc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.clf_helpers.</code><code class=\"descname\">MultiTaskSamples</code><span class=\"sig-paren\">(</span><em>index</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<p>Handles samples (i.e. feature-label pairs) with a combination of\nnon-mutually exclusive subclassification labels</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.clf_helpers MultiTaskSamples</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.clf_helpers</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">samples</span> <span class=\"o\">=</span> <span class=\"n\">MultiTaskSamples</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tasks_to_indicators</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">odict</span><span class=\"p\">([</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">(</span><span class=\"s1\">&#39;task1&#39;</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">odict</span><span class=\"p\">([</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>        <span class=\"p\">(</span><span class=\"s1\">&#39;state1&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>        <span class=\"p\">(</span><span class=\"s1\">&#39;state2&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>        <span class=\"p\">(</span><span class=\"s1\">&#39;state3&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">])),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">(</span><span class=\"s1\">&#39;task2&#39;</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">odict</span><span class=\"p\">([</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>        <span class=\"p\">(</span><span class=\"s1\">&#39;state4&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>        <span class=\"p\">(</span><span class=\"s1\">&#39;state5&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">]))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">apply_indicators</span><span class=\"p\">(</span><span class=\"n\">tasks_to_indicators</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.apply_encoded_labels\">\n<code class=\"descname\">apply_encoded_labels</code><span class=\"sig-paren\">(</span><em>y_enc</em>, <em>class_names</em>, <em>task_name</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.apply_encoded_labels\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.apply_encoded_labels\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds labels for a specific task. Alternative to <cite>apply_indicators</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>y_enc</strong> (<em>list</em>) \u2013 integer label indicating the class for each sample</li>\n<li><strong>class_names</strong> (<em>list</em>) \u2013 list of strings indicating the class-domain</li>\n<li><strong>task_name</strong> (<em>str</em>) \u2013 key for denoting this specific task</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.apply_indicators\">\n<code class=\"descname\">apply_indicators</code><span class=\"sig-paren\">(</span><em>tasks_to_indicators</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.apply_indicators\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.apply_indicators\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds labels for a specific task</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>tasks_to_indicators</strong> (<em>dict</em>) \u2013 <dl class=\"docutils\">\n<dt>takes the form:</dt>\n<dd><dl class=\"first last docutils\">\n<dt>{</dt>\n<dd><dl class=\"first docutils\">\n<dt><a href=\"#id1\"><span class=\"problematic\" id=\"id2\">`</span></a>my_task_name1\u2019 {</dt>\n<dd>\u2019class1\u2019: [list of bools indicating class membership]\n\u2026\n\u2018classN\u2019: [list of bools indicating class membership]</dd>\n</dl>\n<p class=\"last\"><a href=\"#id3\"><span class=\"problematic\" id=\"id4\">`</span></a>my_task_nameN\u2019: \u2026</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p>}</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.class_idx_basis_1d\">\n<code class=\"descname\">class_idx_basis_1d</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.class_idx_basis_1d\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.class_idx_basis_1d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>1d-index version of class_name_basis</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.class_idx_basis_2d\">\n<code class=\"descname\">class_idx_basis_2d</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.class_idx_basis_2d\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.class_idx_basis_2d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>2d-index version of class_name_basis</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.class_name_basis\">\n<code class=\"descname\">class_name_basis</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.class_name_basis\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.class_name_basis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>corresponds with indexes returned from encoded1d</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.encoded_1d\">\n<code class=\"descname\">encoded_1d</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.encoded_1d\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.encoded_1d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a unique label for each combination of samples</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.encoded_2d\">\n<code class=\"descname\">encoded_2d</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.encoded_2d\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.encoded_2d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.group_ids\">\n<code class=\"descname\">group_ids</code><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.group_ids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.items\">\n<code class=\"descname\">items</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.items\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.items\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.make_histogram\">\n<code class=\"descname\">make_histogram</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.make_histogram\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.make_histogram\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>label histogram</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.print_info\">\n<code class=\"descname\">print_info</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.print_info\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.print_info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.stratified_kfold_indices\">\n<code class=\"descname\">stratified_kfold_indices</code><span class=\"sig-paren\">(</span><em>**xval_kw</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.stratified_kfold_indices\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.stratified_kfold_indices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>TODO: check xval label frequency</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.subsplit_indices\">\n<code class=\"descname\">subsplit_indices</code><span class=\"sig-paren\">(</span><em>subset_idx</em>, <em>**xval_kw</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.subsplit_indices\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.subsplit_indices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>split an existing set</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples.supported_tasks\">\n<code class=\"descname\">supported_tasks</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#MultiTaskSamples.supported_tasks\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples.supported_tasks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.clf_helpers.XValConfig\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.clf_helpers.</code><code class=\"descname\">XValConfig</code><span class=\"sig-paren\">(</span><em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/clf_helpers/#XValConfig\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.clf_helpers.XValConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dtool.base.Config</span></code></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.deploy\">\n<span id=\"ibeis-algo-verif-deploy-module\"></span><h2>ibeis.algo.verif.deploy module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.deploy\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.deploy.</code><code class=\"descname\">Deployer</code><span class=\"sig-paren\">(</span><em>dpath='.'</em>, <em>pblm=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/deploy/#Deployer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>Transforms a OneVsOne problem into a deployable model.\nRegisters and loads published models.</p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.deploy\">\n<code class=\"descname\">deploy</code><span class=\"sig-paren\">(</span><em>task_key=None</em>, <em>publish=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/deploy/#Deployer.deploy\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.deploy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Trains and saves a classifier for deployment</p>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>A deployment consists of the following information</dt>\n<dd><ul class=\"first last simple\">\n<li>The classifier itself</li>\n<li><dl class=\"first docutils\">\n<dt>Information needed to construct the input to the classifier</dt>\n<dd><ul class=\"first last\">\n<li>TODO: can this be encoded as an sklearn pipeline?</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Metadata concerning what data the classifier was trained with</li>\n<li>PUBLISH TO /media/hdd/PUBLIC/models/pairclf</li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">sample_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;random&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"n\">with_simple</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">task_key</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">primary_task_key</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"n\">Deployer</span><span class=\"p\">(</span><span class=\"n\">dpath</span><span class=\"o\">=</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">,</span> <span class=\"n\">pblm</span><span class=\"o\">=</span><span class=\"n\">pblm</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">deploy_info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"docutils\">\n<dt>Ignore:</dt>\n<dd>pblm.evaluate_classifiers(with_simple=False)\nres = pblm.task_combo_res[pblm.primary_task_key][\u2018RF\u2019][\u2018learn(sum,glob)\u2019]</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.ensure\">\n<code class=\"descname\">ensure</code><span class=\"sig-paren\">(</span><em>task_key</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/deploy/#Deployer.ensure\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.ensure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.find_latest_local\">\n<code class=\"descname\">find_latest_local</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/deploy/#Deployer.find_latest_local\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.find_latest_local\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"n\">Deployer</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">find_pretrained</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">find_latest_local</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.find_latest_remote\">\n<code class=\"descname\">find_latest_remote</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/deploy/#Deployer.find_latest_remote\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.find_latest_remote\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Used to update the published dict</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.vsone find_latest_remote</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"n\">Deployer</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">task_clf_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">find_latest_remote</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.find_pretrained\">\n<code class=\"descname\">find_pretrained</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/deploy/#Deployer.find_pretrained\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.find_pretrained\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.fname_fmtstr\">\n<code class=\"descname\">fname_fmtstr</code><em class=\"property\"> = 'vsone.{species}.{task_key}.{clf_key}.{n_dims}.{hashid}'</em><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.fname_fmtstr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.fname_parts\">\n<code class=\"descname\">fname_parts</code><em class=\"property\"> = ['vsone', '{species}', '{task_key}', '{clf_key}', '{n_dims}', '{hashid}']</em><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.fname_parts\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.load_published\">\n<code class=\"descname\">load_published</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>species</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/deploy/#Deployer.load_published\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.load_published\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.meta_suffix\">\n<code class=\"descname\">meta_suffix</code><em class=\"property\"> = '.meta.json'</em><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.meta_suffix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.publish_info\">\n<code class=\"descname\">publish_info</code><em class=\"property\"> = {'path': '/media/hdd/PUBLIC/models/pairclf', 'remote': 'cthulhu.dyn.wildme.io'}</em><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.publish_info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.published\">\n<code class=\"descname\">published</code><em class=\"property\"> = {'giraffe_reticulated': {'match_state': 'vsone.giraffe_reticulated.match_state.RF.131.kqbaqnrdyxpjrzjd.ggr2.cPkl'}, 'zebra_grevys': {'match_state': 'vsone.zebra_grevys.match_state.RF.131.djvqkmyzrjgaudok.ggr2.cPkl'}, 'zebra_plains': {'match_state': 'vsone.zebra_plains.match_state.RF.131.eurizlstehqjvlsu.cPkl'}}</em><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.published\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.deploy.Deployer.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.deploy.Deployer.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.oldvsone\">\n<span id=\"ibeis-algo-verif-oldvsone-module\"></span><h2>ibeis.algo.verif.oldvsone module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.oldvsone\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.oldvsone.demo_single_pairwise_feature_vector\">\n<code class=\"descclassname\">ibeis.algo.verif.oldvsone.</code><code class=\"descname\">demo_single_pairwise_feature_vector</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/oldvsone/#demo_single_pairwise_feature_vector\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.oldvsone.demo_single_pairwise_feature_vector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.vsone demo_single_pairwise_feature_vector</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">match</span> <span class=\"o\">=</span> <span class=\"n\">demo_single_pairwise_feature_vector</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.pairfeat\">\n<span id=\"ibeis-algo-verif-pairfeat-module\"></span><h2>ibeis.algo.verif.pairfeat module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.pairfeat\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.pairfeat.MatchConfig\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.pairfeat.</code><code class=\"descname\">MatchConfig</code><span class=\"sig-paren\">(</span><em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/pairfeat/#MatchConfig\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.pairfeat.MatchConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dtool.base.Config</span></code></p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.pairfeat.PairFeatureConfig\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.pairfeat.</code><code class=\"descname\">PairFeatureConfig</code><span class=\"sig-paren\">(</span><em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/pairfeat/#PairFeatureConfig\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.pairfeat.PairFeatureConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dtool.base.Config</span></code></p>\n<p>Config for building pairwise feature dimensions</p>\n<p>I.E. Config to distil unordered feature correspondences into a fixed length\nvector.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.pairfeat.PairwiseFeatureExtractor\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.pairfeat.</code><code class=\"descname\">PairwiseFeatureExtractor</code><span class=\"sig-paren\">(</span><em>ibs=None</em>, <em>config={}</em>, <em>use_cache=True</em>, <em>verbose=1</em>, <em>match_config=None</em>, <em>pairfeat_cfg=None</em>, <em>global_keys=None</em>, <em>need_lnbnn=None</em>, <em>feat_dims=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/pairfeat/#PairwiseFeatureExtractor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.pairfeat.PairwiseFeatureExtractor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>ibs</strong> (<em>ibeis.IBEISController</em>) \u2013 image analysis api</li>\n<li><strong>match_config</strong> (<em>dict</em>) \u2013 config for building feature correspondences</li>\n<li><strong>pairfeat_cfg</strong> (<em>dict</em>) \u2013 config for making the pairwise feat vec</li>\n<li><strong>global_keys</strong> (<em>list</em>) \u2013 global keys to use</li>\n<li><strong>need_lnbnn</strong> (<em>bool</em>) \u2013 use LNBNN for enrichment</li>\n<li><strong>feat_dims</strong> (<em>list</em>) \u2013 subset of feature dimensions (from pruning)\nif None, then all dimensions are used</li>\n<li><strong>use_cache</strong> (<em>bool</em>) \u2013 turns on disk based caching (default = True)</li>\n<li><strong>verbose</strong> (<em>int</em>) \u2013 verbosity flag (default = 1)</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.pairfeat PairwiseFeatureExtractor</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.pairfeat</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">extr</span> <span class=\"o\">=</span> <span class=\"n\">PairwiseFeatureExtractor</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edges</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">extr</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">edges</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">featinfo</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">AnnotPairFeatInfo</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">featinfo</span><span class=\"o\">.</span><span class=\"n\">get_infostr</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.pairfeat.PairwiseFeatureExtractor.transform\">\n<code class=\"descname\">transform</code><span class=\"sig-paren\">(</span><em>edges</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/pairfeat/#PairwiseFeatureExtractor.transform\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.pairfeat.PairwiseFeatureExtractor.transform\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts an annotation edge into their corresponding feature.\nBy default this is a caching operation.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.pairfeat.VsOneFeatConfig\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.pairfeat.</code><code class=\"descname\">VsOneFeatConfig</code><span class=\"sig-paren\">(</span><em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/pairfeat/#VsOneFeatConfig\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.pairfeat.VsOneFeatConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dtool.base.Config</span></code></p>\n<p>keypoint params</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.pairfeat.VsOneMatchConfig\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.pairfeat.</code><code class=\"descname\">VsOneMatchConfig</code><span class=\"sig-paren\">(</span><em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/pairfeat/#VsOneMatchConfig\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.pairfeat.VsOneMatchConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dtool.base.Config</span></code></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.ranker\">\n<span id=\"ibeis-algo-verif-ranker-module\"></span><h2>ibeis.algo.verif.ranker module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.ranker\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>TODO: rewrite the hotspotter lnbnn algo to be a generator</p>\n<p>Wrapper around LNBNN hotspotter algorithm</p>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.ranker.Ranker\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.ranker.</code><code class=\"descname\">Ranker</code><span class=\"sig-paren\">(</span><em>ibs=None</em>, <em>config={}</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/ranker/#Ranker\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.ranker.Ranker\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.ranker.Ranker.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>daids</em>, <em>dnids=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/ranker/#Ranker.fit\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.ranker.Ranker.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.ranker.Ranker.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>qaids</em>, <em>qnids=None</em>, <em>prog_hook=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/ranker/#Ranker.predict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.ranker.Ranker.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.sklearn_utils\">\n<span id=\"ibeis-algo-verif-sklearn-utils-module\"></span><h2>ibeis.algo.verif.sklearn_utils module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.sklearn_utils\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.PrefitEstimatorEnsemble\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.sklearn_utils.</code><code class=\"descname\">PrefitEstimatorEnsemble</code><span class=\"sig-paren\">(</span><em>clf_list</em>, <em>voting='soft'</em>, <em>weights=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#PrefitEstimatorEnsemble\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.PrefitEstimatorEnsemble\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>hacks around limitations of sklearn.ensemble.VotingClassifier</p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.PrefitEstimatorEnsemble.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>X</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#PrefitEstimatorEnsemble.predict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.PrefitEstimatorEnsemble.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict class labels for X.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>X</strong> (<em>{array-like</em><em>, </em><em>sparse matrix}</em><em>, </em><em>shape =</em><em> [</em><em>n_samples</em><em>, </em><em>n_features</em><em>]</em>) \u2013 Training vectors, where n_samples is the number of samples and\nn_features is the number of features.</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><strong>maj</strong> \u2013 Predicted class labels.</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">array-like, shape = [n_samples]</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.PrefitEstimatorEnsemble.predict_proba\">\n<code class=\"descname\">predict_proba</code><span class=\"sig-paren\">(</span><em>X</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#PrefitEstimatorEnsemble.predict_proba\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.PrefitEstimatorEnsemble.predict_proba\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict class probabilities for X in \u2018soft\u2019 voting</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.StratifiedGroupKFold\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.sklearn_utils.</code><code class=\"descname\">StratifiedGroupKFold</code><span class=\"sig-paren\">(</span><em>n_splits=3</em>, <em>shuffle=False</em>, <em>random_state=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#StratifiedGroupKFold\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.StratifiedGroupKFold\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">sklearn.model_selection._split._BaseKFold</span></code></p>\n<p>Stratified K-Folds cross-validator with Grouping</p>\n<p>Provides train/test indices to split data in train/test sets.</p>\n<p>This cross-validation object is a variation of GroupKFold that returns\nstratified folds. The folds are made by preserving the percentage of\nsamples for each class.</p>\n<p>Read more in the <span class=\"xref std std-ref\">User Guide</span>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>n_splits</strong> (<em>int</em><em>, </em><em>default=3</em>) \u2013 Number of folds. Must be at least 2.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.StratifiedGroupKFold.split\">\n<code class=\"descname\">split</code><span class=\"sig-paren\">(</span><em>X</em>, <em>y</em>, <em>groups=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#StratifiedGroupKFold.split\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.StratifiedGroupKFold.split\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generate indices to split data into training and test set.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.classification_report2\">\n<code class=\"descclassname\">ibeis.algo.verif.sklearn_utils.</code><code class=\"descname\">classification_report2</code><span class=\"sig-paren\">(</span><em>y_true</em>, <em>y_pred</em>, <em>target_names=None</em>, <em>sample_weight=None</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#classification_report2\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.classification_report2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p class=\"rubric\">References</p>\n<p><a class=\"reference external\" href=\"https://csem.flinders.edu.au/research/techreps/SIE07001.pdf\">https://csem.flinders.edu.au/research/techreps/SIE07001.pdf</a>\n<a class=\"reference external\" href=\"https://www.mathworks.com/matlabcentral/fileexchange/5648-bm-cm\">https://www.mathworks.com/matlabcentral/fileexchange/5648-bm-cm</a>-?requestedDomain=www.mathworks.com\nJurman, Riccadonna, Furlanello, (2012). A Comparison of MCC and CEN</p>\n<blockquote>\n<div>Error Measures in MultiClass Prediction</div></blockquote>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.sklearn_utils</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y_true</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">target_names</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sample_weight</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">report</span> <span class=\"o\">=</span> <span class=\"n\">classification_report2</span><span class=\"p\">(</span><span class=\"n\">y_true</span><span class=\"p\">,</span> <span class=\"n\">y_pred</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"docutils\">\n<dt>Ignore:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rng</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">RandomState</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p_classes</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"o\">.</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">05</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">05</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p_classes</span> <span class=\"o\">=</span> <span class=\"n\">p_classes</span> <span class=\"o\">/</span> <span class=\"n\">p_classes</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p_wrong</span>   <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"o\">.</span><span class=\"mi\">03</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">01</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">02</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y_true</span> <span class=\"o\">=</span> <span class=\"n\">testdata_ytrue</span><span class=\"p\">(</span><span class=\"n\">p_classes</span><span class=\"p\">,</span> <span class=\"n\">p_wrong</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">rng</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">17</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">p_wrong</span> <span class=\"o\">+=</span> <span class=\"o\">.</span><span class=\"mi\">05</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"n\">testdata_ypred</span><span class=\"p\">(</span><span class=\"n\">y_true</span><span class=\"p\">,</span> <span class=\"n\">p_wrong</span><span class=\"p\">,</span> <span class=\"n\">rng</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">report</span> <span class=\"o\">=</span> <span class=\"n\">classification_report2</span><span class=\"p\">(</span><span class=\"n\">y_true</span><span class=\"p\">,</span> <span class=\"n\">y_pred</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"s1\">&#39;hack&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">rs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">report</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">qtensure</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">rs</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">drop</span><span class=\"p\">([</span><span class=\"s1\">&#39;raw&#39;</span><span class=\"p\">],</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">subtract</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">&#39;target&#39;</span><span class=\"p\">],</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sqrd_error</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">((</span><span class=\"n\">delta</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Error&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">sqrd_error</span><span class=\"o\">.</span><span class=\"n\">sort_values</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ys</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">(</span><span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s1\">&#39;list&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">multi_plot</span><span class=\"p\">(</span><span class=\"n\">ydata_list</span><span class=\"o\">=</span><span class=\"n\">ys</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.predict_from_probs\">\n<code class=\"descclassname\">ibeis.algo.verif.sklearn_utils.</code><code class=\"descname\">predict_from_probs</code><span class=\"sig-paren\">(</span><em>probs</em>, <em>method='argmax'</em>, <em>target_names=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#predict_from_probs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.predict_from_probs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predictions are returned as indices into columns or target_names</p>\n<dl class=\"docutils\">\n<dt>Doctest:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.sklearn_utils</span> <span class=\"k\">import</span> <span class=\"o\">*</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rng</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">RandomState</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">probs</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pred1</span> <span class=\"o\">=</span> <span class=\"n\">predict_from_probs</span><span class=\"p\">(</span><span class=\"n\">probs</span><span class=\"p\">,</span> <span class=\"s1\">&#39;argmax&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pred2</span> <span class=\"o\">=</span> <span class=\"n\">predict_from_probs</span><span class=\"p\">(</span><span class=\"n\">probs</span><span class=\"p\">,</span> <span class=\"s1\">&#39;argmax&#39;</span><span class=\"p\">,</span> <span class=\"n\">target_names</span><span class=\"o\">=</span><span class=\"n\">probs</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">threshes</span> <span class=\"o\">=</span> <span class=\"n\">probs</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pred3</span> <span class=\"o\">=</span> <span class=\"n\">predict_from_probs</span><span class=\"p\">(</span><span class=\"n\">probs</span><span class=\"p\">,</span> <span class=\"n\">threshes</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                           <span class=\"n\">target_names</span><span class=\"o\">=</span><span class=\"n\">probs</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.predict_proba_df\">\n<code class=\"descclassname\">ibeis.algo.verif.sklearn_utils.</code><code class=\"descname\">predict_proba_df</code><span class=\"sig-paren\">(</span><em>clf</em>, <em>X_df</em>, <em>class_names=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#predict_proba_df\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.predict_proba_df\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calls sklearn classifier predict_proba but then puts results in a dataframe\nusing the same index as X_df and incorporating all possible class_names\ngiven</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.predict_with_thresh\">\n<code class=\"descclassname\">ibeis.algo.verif.sklearn_utils.</code><code class=\"descname\">predict_with_thresh</code><span class=\"sig-paren\">(</span><em>probs</em>, <em>threshes</em>, <em>target_names=None</em>, <em>force=False</em>, <em>multi=True</em>, <em>return_flags=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#predict_with_thresh\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.predict_with_thresh\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>if force is true, everything will make a prediction, even if nothing passes\nthe thresholds. In that case it will use argmax.</p>\n<p>if more than one thing passes the thresold we take the highest one if\nmulti=True, and return nan otherwise.</p>\n<dl class=\"docutils\">\n<dt>Doctest:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.sklearn_utils</span> <span class=\"k\">import</span> <span class=\"o\">*</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">probs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">[</span><span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">[</span><span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">[</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.6</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">[</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">[</span><span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">],])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">threshes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pred_enc</span> <span class=\"o\">=</span> <span class=\"n\">predict_with_thresh</span><span class=\"p\">(</span><span class=\"n\">probs</span><span class=\"p\">,</span> <span class=\"n\">threshes</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">predict_with_thresh</span><span class=\"p\">(</span><span class=\"n\">probs</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">predict_with_thresh</span><span class=\"p\">(</span><span class=\"n\">probs</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">isnan</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">isnan</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.temp\">\n<code class=\"descclassname\">ibeis.algo.verif.sklearn_utils.</code><code class=\"descname\">temp</code><span class=\"sig-paren\">(</span><em>samples</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#temp\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.temp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.testdata_ypred\">\n<code class=\"descclassname\">ibeis.algo.verif.sklearn_utils.</code><code class=\"descname\">testdata_ypred</code><span class=\"sig-paren\">(</span><em>y_true</em>, <em>p_wrong</em>, <em>rng</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#testdata_ypred\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.testdata_ypred\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.testdata_ytrue\">\n<code class=\"descclassname\">ibeis.algo.verif.sklearn_utils.</code><code class=\"descname\">testdata_ytrue</code><span class=\"sig-paren\">(</span><em>p_classes</em>, <em>p_wrong</em>, <em>size</em>, <em>rng</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#testdata_ytrue\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.testdata_ytrue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.sklearn_utils.voting_ensemble\">\n<code class=\"descclassname\">ibeis.algo.verif.sklearn_utils.</code><code class=\"descname\">voting_ensemble</code><span class=\"sig-paren\">(</span><em>clf_list</em>, <em>voting='hard'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/sklearn_utils/#voting_ensemble\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.sklearn_utils.voting_ensemble\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>hack to construct a VotingClassifier from pretrained classifiers\nTODO: contribute similar functionality to sklearn</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.verifier\">\n<span id=\"ibeis-algo-verif-verifier-module\"></span><h2>ibeis.algo.verif.verifier module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.verifier\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.verifier.BaseVerifier\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.verifier.</code><code class=\"descname\">BaseVerifier</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/verifier/#BaseVerifier\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.BaseVerifier\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.verifier.BaseVerifier.easiness\">\n<code class=\"descname\">easiness</code><span class=\"sig-paren\">(</span><em>edges</em>, <em>real</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/verifier/#BaseVerifier.easiness\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.BaseVerifier.easiness\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets the probability of the class each edge is labeled as.  Indicates\nhow easy it is to classify this example.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.verifier.BaseVerifier.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>edges</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/verifier/#BaseVerifier.fit\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.BaseVerifier.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The vsone.OneVsOneProblem currently handles fitting a model based on\nedges. The actual fit call is in clf_helpers.py</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.verifier.BaseVerifier.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>edges</em>, <em>method='argmax'</em>, <em>encoded=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/verifier/#BaseVerifier.predict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.BaseVerifier.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.verifier.BaseVerifier.predict_proba_df\">\n<code class=\"descname\">predict_proba_df</code><span class=\"sig-paren\">(</span><em>edges</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/verifier/#BaseVerifier.predict_proba_df\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.BaseVerifier.predict_proba_df\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.verifier.BaseVerifier.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.BaseVerifier.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.verifier.IntraVerifier\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.verifier.</code><code class=\"descname\">IntraVerifier</code><span class=\"sig-paren\">(</span><em>pblm</em>, <em>task_key</em>, <em>clf_key</em>, <em>data_key</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/verifier/#IntraVerifier\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.IntraVerifier\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.verif.verifier.BaseVerifier\" title=\"ibeis.algo.verif.verifier.BaseVerifier\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.verif.verifier.BaseVerifier</span></code></a></p>\n<p>Predicts cross-validated intra-training sample probs.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Requires the original OneVsOneProblem object.\nThis classifier is for intra-dataset evaulation and is not meant to be\npushlished for use on external datasets.</p>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.verifier.IntraVerifier.predict_proba_df\">\n<code class=\"descname\">predict_proba_df</code><span class=\"sig-paren\">(</span><em>want_edges</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/verifier/#IntraVerifier.predict_proba_df\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.IntraVerifier.predict_proba_df\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>Predicts task probabilities in one of two ways:</dt>\n<dd><ol class=\"first last arabic simple\">\n<li>if the edge was in the training set then its cross-validated\nprobability is returned.</li>\n<li>if the edge was not in the training set, then the average\nprediction over all cross validated classifiers are used.</li>\n</ol>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.verifier.IntraVerifier.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.IntraVerifier.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.verifier.Verifier\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.verifier.</code><code class=\"descname\">Verifier</code><span class=\"sig-paren\">(</span><em>ibs=None</em>, <em>deploy_info=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/verifier/#Verifier\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.Verifier\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.verif.verifier.BaseVerifier\" title=\"ibeis.algo.verif.verifier.BaseVerifier\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.verif.verifier.BaseVerifier</span></code></a></p>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>deploy_info should be a dict with the following keys:</dt>\n<dd><p class=\"first\">clf: sklearn classifier\nmetadata: another dict with key:</p>\n<blockquote class=\"last\">\n<div>class_names - classes that clf predicts\ntask_key - str\nclf_key - str\ndata_info - tuple of (feat_extract_config, feat_dims)  # TODO: make feat dims part of feat_extract_config defaulted to None\ndata_info - tuple of (feat_extract_config, feat_dims)</div></blockquote>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">speceis</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;zebra_plains&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">task_key</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;match_state&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verif</span> <span class=\"o\">=</span> <span class=\"n\">Deployer</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">_load_published</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species</span><span class=\"p\">,</span> <span class=\"n\">task_key</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.verifier.Verifier.predict_proba_df\">\n<code class=\"descname\">predict_proba_df</code><span class=\"sig-paren\">(</span><em>edges</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/verifier/#Verifier.predict_proba_df\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.Verifier.predict_proba_df\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.verifier.Verifier.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.verifier.Verifier.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.vsone\">\n<span id=\"ibeis-algo-verif-vsone-module\"></span><h2>ibeis.algo.verif.vsone module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.vsone\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><p class=\"first\"># Test how well out-of-the-box vsone classifiers to:\npython -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db DETECT_SEATURTLES</p>\n<p class=\"last\"># Train a classifier for deployment\n# Will output to the current working directory\npython -m ibeis.algo.verif.vsone deploy \u2013db GZ_Master1</p>\n</dd>\n</dl>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.vsone.</code><code class=\"descname\">AnnotPairSamples</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>aid_pairs</em>, <em>infr=None</em>, <em>apply=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.verif.clf_helpers.MultiTaskSamples\" title=\"ibeis.algo.verif.clf_helpers.MultiTaskSamples\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.verif.clf_helpers.MultiTaskSamples</span></code></a>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ubelt.util_mixins.NiceRepr</span></code></p>\n<p>Manages the different ways to assign samples (i.e. feat-label pairs) to\n1-v-1 classification</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.vsone AnnotPairSamples</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">load_samples</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">samples</span> <span class=\"o\">=</span> <span class=\"n\">AnnotPairSamples</span><span class=\"p\">(</span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">raw_simple_scores</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">samples</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">print_info</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">sample_hashid</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">encode_index</span> <span class=\"o\">=</span> <span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">subtasks</span><span class=\"p\">[</span><span class=\"s1\">&#39;match_state&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">encoded_df</span><span class=\"o\">.</span><span class=\"n\">index</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indica_index</span> <span class=\"o\">=</span> <span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">subtasks</span><span class=\"p\">[</span><span class=\"s1\">&#39;match_state&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">indicator_df</span><span class=\"o\">.</span><span class=\"n\">index</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">index</span> <span class=\"o\">==</span> <span class=\"n\">encode_index</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">index</span> <span class=\"o\">==</span> <span class=\"n\">indica_index</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.apply_multi_task_binary_label\">\n<code class=\"descname\">apply_multi_task_binary_label</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.apply_multi_task_binary_label\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.apply_multi_task_binary_label\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.apply_multi_task_multi_label\">\n<code class=\"descname\">apply_multi_task_multi_label</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.apply_multi_task_multi_label\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.apply_multi_task_multi_label\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.apply_single_task_multi_label\">\n<code class=\"descname\">apply_single_task_multi_label</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.apply_single_task_multi_label\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.apply_single_task_multi_label\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.compress\">\n<code class=\"descname\">compress</code><span class=\"sig-paren\">(</span><em>flags</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.compress\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.compress\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.edge_set_hashid\">\n<code class=\"descname\">edge_set_hashid</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.edge_set_hashid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.edge_set_hashid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Faster than using ut.combine_uuids, because we condense and don\u2019t\nbother casting back to UUIDS, and we just directly hash.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.group_ids\">\n<code class=\"descname\">group_ids</code><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.group_ids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Prevents samples with the same group-id from appearing in the same\ncross validation fold. For us this means any pair within the same\nname or between the same names will have the same groupid.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.is_comparable\">\n<code class=\"descname\">is_comparable</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.is_comparable\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.is_comparable\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.is_photobomb\">\n<code class=\"descname\">is_photobomb</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.is_photobomb\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.is_photobomb\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.is_same\">\n<code class=\"descname\">is_same</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.is_same\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.is_same\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.print_featinfo\">\n<code class=\"descname\">print_featinfo</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.print_featinfo\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.print_featinfo\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.sample_hashid\">\n<code class=\"descname\">sample_hashid</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.sample_hashid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.sample_hashid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.set_feats\">\n<code class=\"descname\">set_feats</code><span class=\"sig-paren\">(</span><em>X_dict</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.set_feats\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.set_feats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.set_simple_scores\">\n<code class=\"descname\">set_simple_scores</code><span class=\"sig-paren\">(</span><em>simple_scores</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.set_simple_scores\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.set_simple_scores\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.task_label_hashid\">\n<code class=\"descname\">task_label_hashid</code><span class=\"sig-paren\">(</span><em>task_key</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.task_label_hashid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.task_label_hashid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.AnnotPairSamples.task_sample_hashid\">\n<code class=\"descname\">task_sample_hashid</code><span class=\"sig-paren\">(</span><em>task_key</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#AnnotPairSamples.task_sample_hashid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.AnnotPairSamples.task_sample_hashid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.vsone.</code><code class=\"descname\">OneVsOneProblem</code><span class=\"sig-paren\">(</span><em>infr=None</em>, <em>verbose=None</em>, <em>**params</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.verif.clf_helpers.ClfProblem\" title=\"ibeis.algo.verif.clf_helpers.ClfProblem\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.verif.clf_helpers.ClfProblem</span></code></a></p>\n<p>Keeps information about the one-vs-one pairwise classification problem</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><p class=\"first\">python -m ibeis.algo.verif.vsone evaluate_classifiers\npython -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db PZ_PB_RF_TRAIN\npython -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db PZ_PB_RF_TRAIN \u2013profile\npython -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db PZ_MTEST \u2013show\npython -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db PZ_Master1 \u2013show\npython -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db GZ_Master1 \u2013show\npython -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db RotanTurtles \u2013show</p>\n<p class=\"last\">python -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db testdb1 \u2013show -a default</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">hyper_params</span><span class=\"p\">[</span><span class=\"s1\">&#39;xval_kw&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;n_splits&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">xval_kw</span><span class=\"o\">.</span><span class=\"n\">n_splits</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">xval_kw</span><span class=\"o\">.</span><span class=\"n\">n_splits</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">hyper_params</span><span class=\"p\">[</span><span class=\"s1\">&#39;xval_kw&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;n_splits&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">load_samples</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">load_features</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.appname\">\n<code class=\"descname\">appname</code><em class=\"property\"> = 'vsone_rf_train'</em><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.appname\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.auto_decisions_at_threshold\">\n<code class=\"descname\">auto_decisions_at_threshold</code><span class=\"sig-paren\">(</span><em>primary_task</em>, <em>task_probs</em>, <em>task_thresh</em>, <em>task_keys</em>, <em>clf_key</em>, <em>data_key</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.auto_decisions_at_threshold\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.auto_decisions_at_threshold\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.build_feature_subsets\">\n<code class=\"descname\">build_feature_subsets</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.build_feature_subsets\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.build_feature_subsets\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Try to identify a useful subset of features to reduce problem\ndimensionality</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><p class=\"first\">python -m ibeis.algo.verif.vsone build_feature_subsets \u2013db GZ_Master1\npython -m ibeis.algo.verif.vsone build_feature_subsets \u2013db PZ_PB_RF_TRAIN</p>\n<p class=\"last\">python -m ibeis Chap4._setup_pblm \u2013db GZ_Master1 \u2013eval\npython -m ibeis Chap4._setup_pblm \u2013db PZ_Master1 \u2013eval</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">load_samples</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">load_features</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">build_feature_subsets</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">print_featinfo</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.deploy\">\n<code class=\"descname\">deploy</code><span class=\"sig-paren\">(</span><em>dpath='.'</em>, <em>task_key=None</em>, <em>publish=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.deploy\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.deploy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Trains and saves a classifier for deployment</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>dpath</strong> (<em>str</em>) \u2013 where to save the deployable model</li>\n<li><strong>task_key</strong> (<em>str</em>) \u2013 task to train for (default match_state)</li>\n<li><strong>publish</strong> (<em>bool</em>) \u2013 if True will try to rsync the model and metadata to\nthe publication server.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                  <span class=\"n\">sample_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;random&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">task_key</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argval</span><span class=\"p\">(</span><span class=\"s1\">&#39;--task&#39;</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;match_state&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">publish</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--publish&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">(</span><span class=\"n\">task_key</span><span class=\"o\">=</span><span class=\"n\">task_key</span><span class=\"p\">,</span> <span class=\"n\">publish</span><span class=\"o\">=</span><span class=\"n\">publish</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>A deployment consists of the following information</dt>\n<dd><ul class=\"first last simple\">\n<li>The classifier itself</li>\n<li><dl class=\"first docutils\">\n<dt>Information needed to construct the input to the classifier</dt>\n<dd><ul class=\"first last\">\n<li>TODO: can this be encoded as an sklearn pipeline?</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Metadata concerning what data the classifier was trained with</li>\n<li>PUBLISH TO /media/hdd/PUBLIC/models/pairclf</li>\n</ul>\n</dd>\n<dt>Ignore:</dt>\n<dd>pblm.evaluate_classifiers(with_simple=False)\nres = pblm.task_combo_res[pblm.primary_task_key][\u2018RF\u2019][\u2018learn(sum,glob)\u2019]</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.deploy_all\">\n<code class=\"descname\">deploy_all</code><span class=\"sig-paren\">(</span><em>dpath='.'</em>, <em>publish=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.deploy_all\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.deploy_all\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.ensure_deploy_classifiers\">\n<code class=\"descname\">ensure_deploy_classifiers</code><span class=\"sig-paren\">(</span><em>dpath='.'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.ensure_deploy_classifiers\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.ensure_deploy_classifiers\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.evaluate_classifiers\">\n<code class=\"descname\">evaluate_classifiers</code><span class=\"sig-paren\">(</span><em>with_simple=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.evaluate_classifiers\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.evaluate_classifiers\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.vsone evaluate_classifiers\npython -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db PZ_MTEST\npython -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db GZ_Master1\npython -m ibeis.algo.verif.vsone evaluate_classifiers \u2013db GIRM_Master1</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                  <span class=\"n\">sample_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;random&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#pblm.default_clf_key = &#39;Logit&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">default_clf_key</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;RF&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">evaluate_classifiers</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.evaluate_simple_scores\">\n<code class=\"descname\">evaluate_simple_scores</code><span class=\"sig-paren\">(</span><em>task_keys=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.evaluate_simple_scores\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.evaluate_simple_scores\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">set_pandas_options</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">load_samples</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">load_features</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">evaluate_simple_scores</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.extra_report\">\n<code class=\"descname\">extra_report</code><span class=\"sig-paren\">(</span><em>task_probs</em>, <em>is_auto</em>, <em>want_samples</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.extra_report\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.extra_report\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.feature_importance\">\n<code class=\"descname\">feature_importance</code><span class=\"sig-paren\">(</span><em>task_key=None</em>, <em>clf_key=None</em>, <em>data_key=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.feature_importance\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.feature_importance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.vsone report_importance \u2013show\npython -m ibeis.algo.verif.vsone report_importance \u2013show \u2013db PZ_PB_RF_TRAIN</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"s1\">&#39;GZ_Master1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_key</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">default_data_key</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">clf_key</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">default_clf_key</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">task_key</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">primary_task_key</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">setup_evaluation</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">featinfo</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">feature_info</span><span class=\"p\">(</span><span class=\"n\">task_key</span><span class=\"p\">,</span> <span class=\"n\">clf_key</span><span class=\"p\">,</span> <span class=\"n\">data_key</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">importances</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">wordcloud</span><span class=\"p\">(</span><span class=\"n\">featinfo</span><span class=\"o\">.</span><span class=\"n\">importances</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.from_aids\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_aids</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>aids</em>, <em>verbose=None</em>, <em>**params</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.from_aids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.from_aids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs a OneVsOneProblem from a subset of aids.\nUse <cite>pblm.load_samples</cite> to sample a set of pairs</p>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.from_empty\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_empty</code><span class=\"sig-paren\">(</span><em>defaultdb=None</em>, <em>**params</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.from_empty\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.from_empty\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">defaultdb</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;GIRM_Master1&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.from_labeled_aidpairs\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_labeled_aidpairs</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>labeled_aid_pairs</em>, <em>class_names</em>, <em>task_name</em>, <em>**params</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.from_labeled_aidpairs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.from_labeled_aidpairs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Build a OneVsOneProblem directly from a set of aid pairs.\nIt is not necessary to call <cite>pblm.load_samples</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>ibs</strong> (<a class=\"reference internal\" href=\"../ibeis.control/#ibeis.control.IBEISControl.IBEISController\" title=\"ibeis.control.IBEISControl.IBEISController\"><em>IBEISController</em></a>) \u2013 </li>\n<li><strong>labeled_aid_pairs</strong> (<em>list</em>) \u2013 tuples of (aid1, aid2, int_label)</li>\n<li><strong>class_names</strong> (<em>list</em>) \u2013 list of names corresponding to integer labels</li>\n<li><strong>task_name</strong> (<em>str</em>) \u2013 identifier for the task (e.g. custom_match_state)</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.load_features\">\n<code class=\"descname\">load_features</code><span class=\"sig-paren\">(</span><em>use_cache=True</em>, <em>with_simple=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.load_features\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.load_features\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.vsone load_features \u2013profile</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#pblm = OneVsOneProblem.from_empty(&#39;GZ_Master1&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_PB_RF_TRAIN&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">load_samples</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">load_features</span><span class=\"p\">(</span><span class=\"n\">with_simple</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.load_samples\">\n<code class=\"descname\">load_samples</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.load_samples\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.load_samples\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.vsone load_samples \u2013profile</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#pblm = OneVsOneProblem.from_empty(&#39;PZ_MTEST&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#pblm = OneVsOneProblem.from_empty(&#39;PZ_PB_RF_TRAIN&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_Master1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">load_samples</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">samples</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">samples</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">print_info</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.load_simple_scores\">\n<code class=\"descname\">load_simple_scores</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.load_simple_scores\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.load_simple_scores\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.make_graph_based_bootstrap_pairs\">\n<code class=\"descname\">make_graph_based_bootstrap_pairs</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.make_graph_based_bootstrap_pairs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.make_graph_based_bootstrap_pairs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sampling method for when you want to bootstrap VAMP after several\nreviews.</p>\n<p>Sample pairs for VAMP training using manually reviewed edges and mines\nother (random) pairs as needed.</p>\n<dl class=\"docutils\">\n<dt>We first sample a base set via:</dt>\n<dd><ol class=\"first arabic simple\">\n<li>take all manually reviewed positive edges (not in an inconsistent PCC)</li>\n<li>take all manually reviewed negative edges (not touching an inconsistent PCC)</li>\n</ol>\n<p class=\"last\">(3) take all manually reviewed incomparable edges.\nNote: it is important to ignore any PCC currently in an\ninconsistent state.</p>\n</dd>\n</dl>\n<p>We can then generate additional positive samples by sampling\nautomatically reviewed positive edges within PCCs.</p>\n<p>We can do the same for negatives.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.make_lnbnn_training_pairs\">\n<code class=\"descname\">make_lnbnn_training_pairs</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.make_lnbnn_training_pairs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.make_lnbnn_training_pairs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.make_randomized_training_pairs\">\n<code class=\"descname\">make_randomized_training_pairs</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.make_randomized_training_pairs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.make_randomized_training_pairs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Randomized sample that does not require LNBNN</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.make_training_pairs\">\n<code class=\"descname\">make_training_pairs</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.make_training_pairs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.make_training_pairs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.vsone make_training_pairs \u2013db PZ_Master1</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">make_training_pairs</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.prune_features\">\n<code class=\"descname\">prune_features</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.prune_features\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.prune_features\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p class=\"rubric\">References</p>\n<p><a class=\"reference external\" href=\"http://blog.datadive.net/selecting-good-features-part-iii-random-forests/\">http://blog.datadive.net/selecting-good-features-part-iii-random-forests/</a>\n<a class=\"reference external\" href=\"http://alexperrier.github.io/jekyll/update/2015/08/27/feature-importance-random-forests-gini-accuracy.html\">http://alexperrier.github.io/jekyll/update/2015/08/27/feature-importance-random-forests-gini-accuracy.html</a>\n<a class=\"reference external\" href=\"https://arxiv.org/abs/1407.7502\">https://arxiv.org/abs/1407.7502</a>\n<a class=\"reference external\" href=\"https://github.com/glouppe/phd-thesis\">https://github.com/glouppe/phd-thesis</a></p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_PB_RF_TRAIN&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_Master1&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"docutils\">\n<dt>Ignore:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;GZ_Master1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">setup_evaluation</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.qt_review_hardcases\">\n<code class=\"descname\">qt_review_hardcases</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.qt_review_hardcases\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.qt_review_hardcases\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_Master1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#pblm = OneVsOneProblem.from_empty(&#39;GIRM_Master1&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#pblm = OneVsOneProblem.from_empty(&#39;PZ_PB_RF_TRAIN&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">evaluate_classifiers</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">win</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">qt_review_hardcases</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"docutils\">\n<dt>Ignore:</dt>\n<dd><div class=\"first highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.scripts.postdoc</span> <span class=\"k\">import</span> <span class=\"o\">*</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"n\">VerifierExpt</span><span class=\"p\">(</span><span class=\"s1\">&#39;RotanTurtles&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"n\">VerifierExpt</span><span class=\"p\">(</span><span class=\"s1\">&#39;humpbacks_fb&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_precollect</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">aids</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aids_pool</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">vsone</span><span class=\"o\">.</span><span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_aids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">infr</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">&#39;algo.hardcase&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">&#39;autoreview.enabled&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">&#39;redun.enabled&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">&#39;ranking.enabled&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">win</span> <span class=\"o\">=</span> <span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">qt_review_loop</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">eval_data_keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">default_data_key</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">eval_clf_keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">default_clf_key</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">evaluate_classifiers</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd>\n<dt>Ignore:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># TEST to ensure we can priorizite reviewed edges without inference</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">networkx</span> <span class=\"k\">as</span> <span class=\"nn\">nx</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.graph</span> <span class=\"k\">import</span> <span class=\"n\">demo</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">num_pccs</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">p_incon</span><span class=\"o\">=.</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">size_std</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span> <span class=\"o\">=</span> <span class=\"n\">demo</span><span class=\"o\">.</span><span class=\"n\">demodata_infr</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">&#39;redun.pos&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">&#39;redun.neg&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">apply_nondynamic_update</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edges</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">prob_match</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dzip</span><span class=\"p\">(</span><span class=\"n\">edges</span><span class=\"p\">,</span> <span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">dummy_matcher</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">edges</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">set_edge_attrs</span><span class=\"p\">(</span><span class=\"s1\">&#39;prob_match&#39;</span><span class=\"p\">,</span> <span class=\"n\">prob_match</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">&#39;redun.enabled&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">prioritize</span><span class=\"p\">(</span><span class=\"s1\">&#39;prob_match&#39;</span><span class=\"p\">,</span> <span class=\"n\">edges</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">order</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">order</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">order</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.report_classifier_importance2\">\n<code class=\"descname\">report_classifier_importance2</code><span class=\"sig-paren\">(</span><em>clf</em>, <em>data_key=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.report_classifier_importance2\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.report_classifier_importance2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.report_evaluation\">\n<code class=\"descname\">report_evaluation</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.report_evaluation\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.report_evaluation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.vsone report_evaluation \u2013db PZ_MTEST</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                  <span class=\"n\">sample_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;random&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">eval_clf_keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;MLP&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Logit&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;RF&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">eval_data_keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;learn(sum,glob)&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">setup_evaluation</span><span class=\"p\">(</span><span class=\"n\">with_simple</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">report_evaluation</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.report_importance\">\n<code class=\"descname\">report_importance</code><span class=\"sig-paren\">(</span><em>task_key</em>, <em>clf_key</em>, <em>data_key</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.report_importance\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.report_importance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.report_simple_scores\">\n<code class=\"descname\">report_simple_scores</code><span class=\"sig-paren\">(</span><em>task_key=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.report_simple_scores\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.report_simple_scores\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.setup\">\n<code class=\"descname\">setup</code><span class=\"sig-paren\">(</span><em>with_simple=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.setup\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.setup\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.setup_evaluation\">\n<code class=\"descname\">setup_evaluation</code><span class=\"sig-paren\">(</span><em>with_simple=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.setup_evaluation\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.setup_evaluation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.vsone.OneVsOneProblem.task_evaluation_report\">\n<code class=\"descname\">task_evaluation_report</code><span class=\"sig-paren\">(</span><em>task_key</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#OneVsOneProblem.task_evaluation_report\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.OneVsOneProblem.task_evaluation_report\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>clf_keys = [pblm.default_clf_key]</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.vsone.PairSampleConfig\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.vsone.</code><code class=\"descname\">PairSampleConfig</code><span class=\"sig-paren\">(</span><em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/vsone/#PairSampleConfig\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.vsone.PairSampleConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dtool.base.Config</span></code></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif\">\n<span id=\"module-contents\"></span><h2>Module contents<a class=\"headerlink\" href=\"#module-ibeis.algo.verif\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"ibeis.algo.verif.IMPORT_TUPLES\">\n<code class=\"descclassname\">ibeis.algo.verif.</code><code class=\"descname\">IMPORT_TUPLES</code><em class=\"property\"> = [('clf_helpers', None), ('sklearn_utils', None), ('vsone', None), ('deploy', None), ('verifier', None), ('pairfeat', None)]</em><a class=\"headerlink\" href=\"#ibeis.algo.verif.IMPORT_TUPLES\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>cd /home/joncrall/code/ibeis/ibeis/algo/verif\nmakeinit.py \u2013modname=ibeis.algo.verif</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Type:</th><td class=\"field-body\">Regen Command</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.reassign_submodule_attributes\">\n<code class=\"descclassname\">ibeis.algo.verif.</code><code class=\"descname\">reassign_submodule_attributes</code><span class=\"sig-paren\">(</span><em>verbose=1</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/#reassign_submodule_attributes\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.reassign_submodule_attributes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Updates attributes in the __init__ modules with updated attributes\nin the submodules.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.reload_subs\">\n<code class=\"descclassname\">ibeis.algo.verif.</code><code class=\"descname\">reload_subs</code><span class=\"sig-paren\">(</span><em>verbose=1</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/#reload_subs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.reload_subs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reloads ibeis.algo.verif and submodules</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.rrrr\">\n<code class=\"descclassname\">ibeis.algo.verif.</code><code class=\"descname\">rrrr</code><span class=\"sig-paren\">(</span><em>verbose=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.rrrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reloads ibeis.algo.verif and submodules</p>\n</dd></dl>\n\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ibeis.algo.verif.torch", "ibeis.algo.verif.torch package", "N", "next"], ["ibeis.algo.smk", "ibeis.algo.smk package", "P", "previous"]], "sourcename": "ibeis.algo.verif.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">ibeis.algo.verif package</a><ul>\n<li><a class=\"reference internal\" href=\"#subpackages\">Subpackages</a></li>\n<li><a class=\"reference internal\" href=\"#submodules\">Submodules</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.clf_helpers\">ibeis.algo.verif.clf_helpers module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.deploy\">ibeis.algo.verif.deploy module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.oldvsone\">ibeis.algo.verif.oldvsone module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.pairfeat\">ibeis.algo.verif.pairfeat module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.ranker\">ibeis.algo.verif.ranker module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.sklearn_utils\">ibeis.algo.verif.sklearn_utils module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.verifier\">ibeis.algo.verif.verifier module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.vsone\">ibeis.algo.verif.vsone module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif\">Module contents</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "ibeis.algo.verif", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}