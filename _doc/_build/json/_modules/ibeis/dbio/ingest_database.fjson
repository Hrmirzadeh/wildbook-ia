{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}], "title": "ibeis.dbio.ingest_database", "body": "<h1>Source code for ibeis.dbio.ingest_database</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module lists known raw databases and how to ingest them.</span>\n\n<span class=\"sd\">Specify arguments and run the following command to ingest a database</span>\n\n<span class=\"sd\">python -m ibeis --tf ingest_rawdata --db seaturtles  --imgdir &quot;~/turtles/Turtles from Jill&quot; --ingest-type=named_folders --species=turtles</span>\n<span class=\"sd\">python -m ibeis --tf ingest_rawdata --db PZ_OlPej2016 --imgdir /raid/raw/OlPejPZ_June_2016 --ingest-type=named_folders --species=zebra_plains</span>\n\n<span class=\"sd\"># --- GET DATA ---</span>\n<span class=\"sd\">rsync -avhzP &lt;user&gt;@&lt;host&gt;:&lt;remotedir&gt;  &lt;path-to-raw-imgs&gt;</span>\n<span class=\"sd\"># --- RUN INGEST SCRIPT ---</span>\n<span class=\"sd\">python -m ibeis --tf ingest_rawdata --db &lt;new-ibeis-db-name&gt; --imgdir &lt;path-to-raw-imgs&gt; --ingest-type=named_folders --species=&lt;optional&gt; --fmtkey=&lt;optional&gt;</span>\n\n\n\n<span class=\"sd\">Example:</span>\n<span class=\"sd\">    &gt;&gt;&gt; # The scripts in this file essentiall do this:</span>\n<span class=\"sd\">    &gt;&gt;&gt; dbdir = &lt;your new database directory&gt;</span>\n<span class=\"sd\">    &gt;&gt;&gt; gpath_list = &lt;path to your images&gt;</span>\n<span class=\"sd\">    &gt;&gt;&gt; ibs = ibeis.opendb(dbdir=dbdir, allow_newdir=True)</span>\n<span class=\"sd\">    &gt;&gt;&gt; gid_list_ = ibs.add_images(gpath_list, auto_localize=False)  # NOQA</span>\n<span class=\"sd\">    &gt;&gt;&gt; # use whole images as annotations</span>\n<span class=\"sd\">    &gt;&gt;&gt; aid_list = ibs.use_images_as_annotations(gid_list_, adjust_percent=0)</span>\n<span class=\"sd\">    &gt;&gt;&gt; # Extra stuff</span>\n<span class=\"sd\">    &gt;&gt;&gt; name_list = &lt;names that correspond to your annots&gt;</span>\n<span class=\"sd\">    &gt;&gt;&gt; ibs.set_annot_names(aid_list, name_list)</span>\n<span class=\"sd\">    &gt;&gt;&gt; occur_text_list = &lt;occurrence that images belongs to&gt;</span>\n<span class=\"sd\">    &gt;&gt;&gt; ibs.set_image_imagesettext(gid_list_, occur_text_list)</span>\n<span class=\"sd\">    &gt;&gt;&gt; ibs.append_annot_case_tags(aid_list, &lt;annotation tags&gt;)</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">six.moves</span> <span class=\"k\">import</span> <span class=\"nb\">zip</span><span class=\"p\">,</span> <span class=\"nb\">map</span><span class=\"p\">,</span> <span class=\"nb\">range</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"k\">import</span> <span class=\"n\">relpath</span><span class=\"p\">,</span> <span class=\"n\">dirname</span><span class=\"p\">,</span> <span class=\"n\">exists</span><span class=\"p\">,</span> <span class=\"n\">join</span><span class=\"p\">,</span> <span class=\"n\">realpath</span><span class=\"p\">,</span> <span class=\"n\">basename</span><span class=\"p\">,</span> <span class=\"n\">abspath</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.other</span> <span class=\"k\">import</span> <span class=\"n\">ibsfuncs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">constants</span> <span class=\"k\">as</span> <span class=\"n\">const</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">import</span> <span class=\"nn\">vtool</span> <span class=\"k\">as</span> <span class=\"nn\">vt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">parse</span>\n\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">New Lynx</span>\n\n<span class=\"sd\">python -m ibeis --tf ingest_rawdata --db lynx2  --imgdir &quot;/media/raid/raw/WildME-WWF-lynx-Sept-2016/CARPETAS CATALOGO INDIVIDUOS&quot; --ingest-type=named_folders --species=lynx --dry</span>\n\n<span class=\"sd\">&quot;&quot;&quot;</span>\n\n\n<div class=\"viewcode-block\" id=\"Ingestable\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.Ingestable\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Ingestable</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Temporary structure representing how to ingest a databases</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"n\">img_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">postingest_func</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">zipfile</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">images_as_annots</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dbname</span>          <span class=\"o\">=</span> <span class=\"n\">dbname</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">img_dir</span>         <span class=\"o\">=</span> <span class=\"n\">img_dir</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ingest_type</span>     <span class=\"o\">=</span> <span class=\"n\">ingest_type</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fmtkey</span>          <span class=\"o\">=</span> <span class=\"n\">fmtkey</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zipfile</span>         <span class=\"o\">=</span> <span class=\"n\">zipfile</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adjust_percent</span>  <span class=\"o\">=</span> <span class=\"n\">adjust_percent</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">postingest_func</span> <span class=\"o\">=</span> <span class=\"n\">postingest_func</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">species</span>         <span class=\"o\">=</span> <span class=\"n\">species</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">images_as_annots</span> <span class=\"o\">=</span> <span class=\"n\">images_as_annots</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ensure_feasibility</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Ingestable.ensure_feasibility\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.Ingestable.ensure_feasibility\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">ensure_feasibility</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">rawdir</span>  <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">get_rawdir</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">img_dir</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Try to find data either the raw or work dir</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">img_dir</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">db_to_dbdir</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"n\">extra_workdirs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">rawdir</span><span class=\"p\">],</span> <span class=\"n\">allow_newdir</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Cannot find img_dir for dbname=</span><span class=\"si\">%r</span><span class=\"s1\">, img_dir=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">img_dir</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">img_dir</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">msg</span>\n        <span class=\"c1\">#from os.path import isabs</span>\n        <span class=\"c1\">#if not isabs(self.img_dir):</span>\n        <span class=\"c1\">#    self.img_dir = join(dbdir, self.img_dir)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">img_dir</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">truepath</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">img_dir</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">img_dir</span><span class=\"p\">),</span> <span class=\"n\">msg</span></div></div>\n        <span class=\"c1\">#if self.ingest_type == &#39;named_folders&#39;:</span>\n        <span class=\"c1\">#    assert self.fmtkey == &#39;name&#39;</span>\n\n\n<div class=\"viewcode-block\" id=\"Ingestable2\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.Ingestable2\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Ingestable2</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dbdir</span><span class=\"p\">,</span> <span class=\"n\">imgpath_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">imgdir_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">zipfile_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">postingest_func</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">ingest_config</span><span class=\"o\">=</span><span class=\"p\">{},</span>\n                 <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dbdir</span> <span class=\"o\">=</span> <span class=\"n\">dbdir</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zipfile_list</span> <span class=\"o\">=</span> <span class=\"n\">zipfile_list</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">imgdir_list</span> <span class=\"o\">=</span> <span class=\"n\">imgdir_list</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">imgpath_list</span> <span class=\"o\">=</span> <span class=\"n\">imgpath_list</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">postingest_func</span> <span class=\"o\">=</span> <span class=\"n\">postingest_func</span>\n\n        <span class=\"kn\">import</span> <span class=\"nn\">dtool</span>\n        <span class=\"c1\"># valid_species = None</span>\n        <span class=\"n\">valid_species</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;____&#39;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">class</span> <span class=\"nc\">IngestConfig</span><span class=\"p\">(</span><span class=\"n\">dtool</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">):</span>\n            <span class=\"n\">_param_info_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ParamInfo</span><span class=\"p\">(</span>\n                    <span class=\"s1\">&#39;images_as_annots&#39;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">),</span>\n                <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ParamInfo</span><span class=\"p\">(</span>\n                    <span class=\"s1\">&#39;ingest_type&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;unknown&#39;</span><span class=\"p\">,</span> <span class=\"n\">valid_values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;unknown&#39;</span><span class=\"p\">,</span>\n                                                            <span class=\"s1\">&#39;named_folders&#39;</span><span class=\"p\">,</span>\n                                                            <span class=\"s1\">&#39;named_images&#39;</span><span class=\"p\">]),</span>\n                <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ParamInfo</span><span class=\"p\">(</span>\n                    <span class=\"s1\">&#39;species&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;____&#39;</span><span class=\"p\">,</span>\n                    <span class=\"n\">hideif</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">cfg</span><span class=\"p\">:</span> <span class=\"ow\">not</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s1\">&#39;images_as_annots&#39;</span><span class=\"p\">],</span>\n                    <span class=\"n\">valid_values</span><span class=\"o\">=</span><span class=\"n\">valid_species</span><span class=\"p\">,</span>\n                <span class=\"p\">),</span>\n                <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ParamInfo</span><span class=\"p\">(</span>\n                    <span class=\"s1\">&#39;adjust_percent&#39;</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span>\n                    <span class=\"n\">hideif</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">cfg</span><span class=\"p\">:</span> <span class=\"ow\">not</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s1\">&#39;images_as_annots&#39;</span><span class=\"p\">]),</span>\n            <span class=\"p\">]</span>\n        <span class=\"n\">updatekw</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n        <span class=\"n\">updatekw</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">ingest_config</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ingest_config</span> <span class=\"o\">=</span> <span class=\"n\">IngestConfig</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">updatekw</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Ingestable2.execute\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.Ingestable2.execute\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">execute</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ingest_rawdata] Ingestable&#39;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">))</span>\n        <span class=\"k\">assert</span> <span class=\"n\">ibs</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n\n        <span class=\"n\">unzipped_file_base_dir</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_dbdir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;unzipped_files&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">extract_from_zipfiles</span><span class=\"p\">(</span><span class=\"n\">zipfile_list</span><span class=\"p\">):</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">unzipped_file_base_dir</span><span class=\"p\">)</span>\n            <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">zipfile</span> <span class=\"ow\">in</span> <span class=\"n\">zipfile_list</span><span class=\"p\">:</span>\n                <span class=\"n\">img_dir</span> <span class=\"o\">=</span> <span class=\"n\">unzipped_file_base_dir</span>\n                <span class=\"n\">unziped_file_relpath</span> <span class=\"o\">=</span> <span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">relpath</span><span class=\"p\">(</span><span class=\"n\">relpath</span><span class=\"p\">(</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"n\">zipfile</span><span class=\"p\">),</span>\n                                                               <span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"n\">img_dir</span><span class=\"p\">))))</span>\n                <span class=\"n\">unzipped_file_dir</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">unzipped_file_base_dir</span><span class=\"p\">,</span> <span class=\"n\">unziped_file_relpath</span><span class=\"p\">)</span>\n                <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">unzipped_file_dir</span><span class=\"p\">)</span>\n                <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">unzip_file</span><span class=\"p\">(</span><span class=\"n\">zipfile</span><span class=\"p\">,</span> <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"n\">unzipped_file_dir</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"n\">gpaths</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">list_images</span><span class=\"p\">(</span><span class=\"n\">unzipped_file_dir</span><span class=\"p\">,</span> <span class=\"n\">fullpath</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n                <span class=\"n\">gpath_list</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">gpaths</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">gpath_list</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">list_images</span><span class=\"p\">(</span><span class=\"n\">img_dir</span><span class=\"p\">):</span>\n            <span class=\"sd\">&quot;&quot;&quot; lists images that are not in an internal cache &quot;&quot;&quot;</span>\n            <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n            <span class=\"n\">ignore_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;_hsdb&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;.hs_internals&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;_ibeis_cache&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;_ibsdb&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">list_images</span><span class=\"p\">(</span><span class=\"n\">img_dir</span><span class=\"p\">,</span> <span class=\"n\">fullpath</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                        <span class=\"n\">ignore_list</span><span class=\"o\">=</span><span class=\"n\">ignore_list</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">gpath_list</span>\n\n        <span class=\"c1\"># FIXME ensure python3 works with this</span>\n        <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">imgpath_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">gpath_list</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">imgpath_list</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">imgdir_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">img_dir</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">imgdir_list</span><span class=\"p\">:</span>\n                <span class=\"n\">gpath_list</span> <span class=\"o\">+=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensure_unicode_strlist</span><span class=\"p\">(</span><span class=\"n\">list_images</span><span class=\"p\">(</span><span class=\"n\">img_dir</span><span class=\"p\">))</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zipfile_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">gpath_list</span> <span class=\"o\">+=</span> <span class=\"n\">extract_from_zipfiles</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zipfile_list</span><span class=\"p\">)</span>\n\n        <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensure_unicode_strlist</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Parse structure for image names</span>\n        <span class=\"n\">ingest_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ingest_config</span><span class=\"o\">.</span><span class=\"n\">ingest_type</span>\n        <span class=\"k\">if</span> <span class=\"n\">ingest_type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;named_folders&#39;</span><span class=\"p\">:</span>\n            <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"n\">get_name_texts_from_parent_folder</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">,</span> <span class=\"n\">img_dir</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">elif</span> <span class=\"n\">ingest_type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;named_images&#39;</span><span class=\"p\">:</span>\n            <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"n\">get_name_texts_from_gnames</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">,</span> <span class=\"n\">img_dir</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">ingest_type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;unknown&#39;</span><span class=\"p\">:</span>\n            <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">))]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span><span class=\"p\">(</span><span class=\"s1\">&#39;unknwon ingest_type=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ingest_type</span><span class=\"p\">,))</span>\n\n        <span class=\"c1\"># Add Images</span>\n        <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">gpath</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/&#39;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">gpath</span> <span class=\"ow\">in</span> <span class=\"n\">gpath_list</span><span class=\"p\">]</span>\n        <span class=\"n\">gid_list_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_images</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># &lt;DEBUG&gt;</span>\n        <span class=\"c1\">#print(&#39;added: &#39; + ut.indentjoin(map(str, zip(gid_list_, gpath_list))))</span>\n        <span class=\"n\">unique_gids</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;[ingest] Length gid list: </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;[ingest] Length unique gid list: </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">unique_gids</span><span class=\"p\">))</span>\n        <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">gid</span> <span class=\"ow\">in</span> <span class=\"n\">gid_list_</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">gid</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ingest] big fat warning&#39;</span><span class=\"p\">)</span>\n        <span class=\"c1\"># &lt;/DEBUG&gt;</span>\n        <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_Nones</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">)</span>\n        <span class=\"n\">unique_gids</span><span class=\"p\">,</span> <span class=\"n\">unique_names</span><span class=\"p\">,</span> <span class=\"n\">unique_notes</span> <span class=\"o\">=</span> <span class=\"n\">resolve_name_conflicts</span><span class=\"p\">(</span>\n            <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">name_list</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Add ANNOTATIONs with names and notes</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ingest_config</span><span class=\"o\">.</span><span class=\"n\">images_as_annots</span><span class=\"p\">:</span>\n            <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">use_images_as_annotations</span><span class=\"p\">(</span><span class=\"n\">unique_gids</span><span class=\"p\">,</span>\n                                                     <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ingest_config</span><span class=\"o\">.</span><span class=\"n\">adjust_percent</span><span class=\"p\">)</span>\n            <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_names</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">unique_names</span><span class=\"p\">)</span>\n            <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_notes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">unique_notes</span><span class=\"p\">)</span>\n            <span class=\"n\">species_text</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ingest_config</span><span class=\"o\">.</span><span class=\"n\">species</span>\n            <span class=\"k\">if</span> <span class=\"n\">species_text</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_species</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">species_text</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">))</span>\n\n        <span class=\"n\">localize</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">localize</span><span class=\"p\">:</span>\n            <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">localize_images</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">postingest_func</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">postingest_func</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">gid_list</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_rawdata\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_rawdata\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">ingest_rawdata</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">ingestable</span><span class=\"p\">,</span> <span class=\"n\">localize</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Ingests rawdata into an ibeis database.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (ibeis.IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        ingestable (Ingestable):</span>\n<span class=\"sd\">        localize (bool): (default = False)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: aid_list -  list of annotation rowids</span>\n\n<span class=\"sd\">    Notes:</span>\n<span class=\"sd\">        if ingest_type == &#39;named_folders&#39;:</span>\n<span class=\"sd\">            Converts folder structure where folders = name, to ibsdb</span>\n<span class=\"sd\">        if ingest_type == &#39;named_images&#39;:</span>\n<span class=\"sd\">            Converts imgname structure where imgnames = name_id.ext, to ibsdb</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python ibeis/dbio/ingest_database.py --db seals_drop2</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --exec-ingest_rawdata</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --exec-ingest_rawdata --db snow-leopards --imgdir /raid/raw_rsync/snow-leopards</span>\n\n<span class=\"sd\">        python -m ibeis --tf ingest_rawdata --db wd_peter2 --imgdir /raid/raw_rsync/african-dogs --ingest-type=named_folders --species=wild_dog --fmtkey=&#39;African Wild Dog: {name}&#39; --force-delete</span>\n<span class=\"sd\">        python -m ibeis --tf ingest_rawdata --db &lt;newdbname&gt;  --imgdir &lt;path-to-images&gt; --ingest-type=named_folders --species=humpback</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # SCRIPT</span>\n<span class=\"sd\">        &gt;&gt;&gt; # General ingest script</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.dbio.ingest_database import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; dbname = ut.get_argval(&#39;--db&#39;, str, None)  # &#39;snow-leopards&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; force_delete = ut.get_argflag((&#39;--force_delete&#39;, &#39;--force-delete&#39;))</span>\n<span class=\"sd\">        &gt;&gt;&gt; img_dir = ut.get_argval(&#39;--imgdir&#39;, type_=str, default=None)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ingest_type = ut.get_argval(&#39;--ingest-type&#39;, type_=str, default=&#39;unknown&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; fmtkey = ut.get_argval(&#39;--fmtkey&#39;, type_=str, default=None)</span>\n<span class=\"sd\">        &gt;&gt;&gt; species = ut.get_argval(&#39;--species&#39;, type_=str, default=None)</span>\n<span class=\"sd\">        &gt;&gt;&gt; images_as_annots = ut.get_argval(&#39;--images-as-annots&#39;, type_=bool, default=None)</span>\n<span class=\"sd\">        &gt;&gt;&gt; if images_as_annots is None:</span>\n<span class=\"sd\">        &gt;&gt;&gt;     images_as_annots = ingest_type != &#39;unknown&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert img_dir is not None, &#39;specify img dir&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert dbname is not None, &#39;specify dbname&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; ingestable = Ingestable(</span>\n<span class=\"sd\">        &gt;&gt;&gt;     dbname, img_dir=img_dir, ingest_type=ingest_type,</span>\n<span class=\"sd\">        &gt;&gt;&gt;     fmtkey=fmtkey, species=species, images_as_annots=images_as_annots,</span>\n<span class=\"sd\">        &gt;&gt;&gt;     adjust_percent=0.00)</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control import IBEISControl</span>\n<span class=\"sd\">        &gt;&gt;&gt; dbdir = ibeis.sysres.db_to_dbdir(dbname, allow_newdir=True)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.ensuredir(dbdir, verbose=True)</span>\n<span class=\"sd\">        &gt;&gt;&gt; if force_delete:</span>\n<span class=\"sd\">        &gt;&gt;&gt;     ibsfuncs.delete_ibeis_database(dbdir)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = IBEISControl.request_IBEISController(dbdir)</span>\n<span class=\"sd\">        &gt;&gt;&gt; localize = False</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = ingest_rawdata(ibs, ingestable, localize)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = (&#39;gid_list = %s&#39; % (str(gid_list),))</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ingest_rawdata] Ingestable&#39;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ingestable</span><span class=\"p\">))</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">zipfile</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">zipfile_fpath</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">truepath</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">get_workdir</span><span class=\"p\">(),</span> <span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">zipfile</span><span class=\"p\">))</span>\n        <span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">img_dir</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">unarchive_file</span><span class=\"p\">(</span><span class=\"n\">zipfile_fpath</span><span class=\"p\">)</span>\n\n    <span class=\"n\">img_dir</span>         <span class=\"o\">=</span> <span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">img_dir</span><span class=\"p\">)</span>\n    <span class=\"n\">ingest_type</span>     <span class=\"o\">=</span> <span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">ingest_type</span>\n    <span class=\"n\">fmtkey</span>          <span class=\"o\">=</span> <span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">fmtkey</span>\n    <span class=\"n\">adjust_percent</span>  <span class=\"o\">=</span> <span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">adjust_percent</span>\n    <span class=\"n\">species_text</span>    <span class=\"o\">=</span> <span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">species</span>\n    <span class=\"n\">postingest_func</span> <span class=\"o\">=</span> <span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">postingest_func</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ingest] ingesting rawdata: img_dir=</span><span class=\"si\">%r</span><span class=\"s1\">, injest_type=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">img_dir</span><span class=\"p\">,</span> <span class=\"n\">ingest_type</span><span class=\"p\">))</span>\n    <span class=\"c1\"># Get images in the image directory</span>\n\n    <span class=\"n\">unzipped_file_base_dir</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_dbdir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;unzipped_files&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">extract_zipfile_images</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">ingestable</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n        <span class=\"n\">zipfile_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">img_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;*.zip&#39;</span><span class=\"p\">,</span> <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">zipfile_list</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Found zipfile_list = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">zipfile_list</span><span class=\"p\">,))</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">unzipped_file_base_dir</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">zipfile</span> <span class=\"ow\">in</span> <span class=\"n\">zipfile_list</span><span class=\"p\">:</span>\n                <span class=\"n\">unziped_file_relpath</span> <span class=\"o\">=</span> <span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">relpath</span><span class=\"p\">(</span><span class=\"n\">relpath</span><span class=\"p\">(</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"n\">zipfile</span><span class=\"p\">),</span> <span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">img_dir</span><span class=\"p\">))))</span>\n                <span class=\"n\">unzipped_file_dir</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">unzipped_file_base_dir</span><span class=\"p\">,</span> <span class=\"n\">unziped_file_relpath</span><span class=\"p\">)</span>\n                <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">unzipped_file_dir</span><span class=\"p\">)</span>\n                <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">unzip_file</span><span class=\"p\">(</span><span class=\"n\">zipfile</span><span class=\"p\">,</span> <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"n\">unzipped_file_dir</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"n\">gpaths</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">list_images</span><span class=\"p\">(</span><span class=\"n\">unzipped_file_dir</span><span class=\"p\">,</span> <span class=\"n\">fullpath</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n                <span class=\"n\">gpath_list</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">gpaths</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">gpath_list</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">list_images</span><span class=\"p\">(</span><span class=\"n\">img_dir</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; lists images that are not in an internal cache &quot;&quot;&quot;</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n        <span class=\"n\">ignore_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;_hsdb&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;.hs_internals&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;_ibeis_cache&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;_ibsdb&#39;</span><span class=\"p\">]</span>\n        <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">list_images</span><span class=\"p\">(</span><span class=\"n\">img_dir</span><span class=\"p\">,</span>\n                                    <span class=\"n\">fullpath</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                    <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                    <span class=\"n\">ignore_list</span><span class=\"o\">=</span><span class=\"n\">ignore_list</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">gpath_list</span>\n\n    <span class=\"c1\"># FIXME ensure python3 works with this</span>\n    <span class=\"n\">gpath_list1</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensure_unicode_strlist</span><span class=\"p\">(</span><span class=\"n\">list_images</span><span class=\"p\">(</span><span class=\"n\">img_dir</span><span class=\"p\">))</span>\n    <span class=\"n\">gpath_list2</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensure_unicode_strlist</span><span class=\"p\">(</span><span class=\"n\">extract_zipfile_images</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">ingestable</span><span class=\"p\">))</span>\n    <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"n\">gpath_list1</span> <span class=\"o\">+</span> <span class=\"n\">gpath_list2</span>\n\n    <span class=\"c1\"># Parse structure for image names</span>\n    <span class=\"k\">if</span> <span class=\"n\">ingest_type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;named_folders&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">name_list1</span> <span class=\"o\">=</span> <span class=\"n\">get_name_texts_from_parent_folder</span><span class=\"p\">(</span><span class=\"n\">gpath_list1</span><span class=\"p\">,</span> <span class=\"n\">img_dir</span><span class=\"p\">,</span>\n                                                       <span class=\"n\">fmtkey</span><span class=\"p\">)</span>\n        <span class=\"n\">name_list2</span> <span class=\"o\">=</span> <span class=\"n\">get_name_texts_from_parent_folder</span><span class=\"p\">(</span><span class=\"n\">gpath_list2</span><span class=\"p\">,</span>\n                                                       <span class=\"n\">unzipped_file_base_dir</span><span class=\"p\">,</span>\n                                                       <span class=\"n\">fmtkey</span><span class=\"p\">)</span>\n        <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"n\">name_list1</span> <span class=\"o\">+</span> <span class=\"n\">name_list2</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">elif</span> <span class=\"n\">ingest_type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;named_images&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"n\">get_name_texts_from_gnames</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">,</span> <span class=\"n\">img_dir</span><span class=\"p\">,</span> <span class=\"n\">fmtkey</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">ingest_type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;unknown&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">))]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span><span class=\"p\">(</span><span class=\"s1\">&#39;unknwon ingest_type=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ingest_type</span><span class=\"p\">,))</span>\n\n    <span class=\"c1\"># Find names likely to be the same?</span>\n    <span class=\"n\">RECTIFY_NAMES_HUERISTIC</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"k\">if</span> <span class=\"n\">RECTIFY_NAMES_HUERISTIC</span><span class=\"p\">:</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">name_list</span><span class=\"p\">)))</span>\n        <span class=\"n\">splitchars</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39; &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/&#39;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">multisplit</span><span class=\"p\">(</span><span class=\"n\">str_</span><span class=\"p\">,</span> <span class=\"n\">splitchars</span><span class=\"p\">):</span>\n            <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n            <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">str_</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">char</span> <span class=\"ow\">in</span> <span class=\"n\">splitchars</span><span class=\"p\">:</span>\n                <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">([</span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">char</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">n</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">n</span>\n\n        <span class=\"n\">groupids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">multisplit</span><span class=\"p\">(</span><span class=\"n\">n1</span><span class=\"p\">,</span> <span class=\"n\">splitchars</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">n1</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">]</span>\n        <span class=\"n\">grouped_names</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">group_items</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">groupids</span><span class=\"p\">)</span>\n        <span class=\"n\">fixed_names</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"n\">newkey</span><span class=\"p\">:</span> <span class=\"n\">key</span>\n            <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">grouped_names</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">newkey</span> <span class=\"ow\">in</span> <span class=\"n\">val</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">fixed_names</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">name_list</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Add Images</span>\n\n    <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">gpath</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/&#39;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">gpath</span> <span class=\"ow\">in</span> <span class=\"n\">gpath_list</span><span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--dry&#39;</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Found </span><span class=\"si\">%d</span><span class=\"s1\"> names&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">name_list</span><span class=\"p\">))))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">name_list</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Dry Run&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span>\n\n    <span class=\"n\">gid_list_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_images</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># &lt;DEBUG&gt;</span>\n    <span class=\"c1\">#print(&#39;added: &#39; + ut.indentjoin(map(str, zip(gid_list_, gpath_list))))</span>\n    <span class=\"n\">unique_gids</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;[ingest] Length gid list: </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;[ingest] Length unique gid list: </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">unique_gids</span><span class=\"p\">))</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">gid</span> <span class=\"ow\">in</span> <span class=\"n\">gid_list_</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">gid</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ingest] big fat warning&#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\"># &lt;/DEBUG&gt;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_Nones</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">)</span>\n    <span class=\"n\">unique_gids</span><span class=\"p\">,</span> <span class=\"n\">unique_names</span><span class=\"p\">,</span> <span class=\"n\">unique_notes</span> <span class=\"o\">=</span> <span class=\"n\">resolve_name_conflicts</span><span class=\"p\">(</span>\n        <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">name_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Add ANNOTATIONs with names and notes</span>\n    <span class=\"k\">if</span> <span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">images_as_annots</span><span class=\"p\">:</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">use_images_as_annotations</span><span class=\"p\">(</span><span class=\"n\">unique_gids</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"n\">adjust_percent</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_names</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">unique_names</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_notes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">unique_notes</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">species_text</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_species</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">species_text</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">))</span>\n    <span class=\"k\">if</span> <span class=\"n\">localize</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">localize_images</span><span class=\"p\">()</span>\n\n    <span class=\"n\">TURTLE_HURISTIC</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;turtles&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">img_dir</span>\n    <span class=\"k\">if</span> <span class=\"n\">TURTLE_HURISTIC</span><span class=\"p\">:</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        python -m ibeis --tf ingest_rawdata --db seaturtles  --imgdir &quot;~/turtles/Turtles from Jill&quot; --ingest-type=named_folders --species=turtles</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n        <span class=\"n\">parent_gids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">annot_orig_uris</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_uris_original</span><span class=\"p\">(</span><span class=\"n\">parent_gids</span><span class=\"p\">)</span>\n        <span class=\"k\">def</span> <span class=\"nf\">parse_turtle_uri</span><span class=\"p\">(</span><span class=\"n\">uri</span><span class=\"p\">):</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"k\">import</span> <span class=\"n\">splitext</span><span class=\"p\">,</span> <span class=\"n\">dirname</span><span class=\"p\">,</span> <span class=\"n\">basename</span>\n            <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"n\">uril</span> <span class=\"o\">=</span> <span class=\"n\">uri</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n            <span class=\"k\">def</span> <span class=\"nf\">findany</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">possible</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"nb\">any</span><span class=\"p\">([</span><span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">text</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">possible</span><span class=\"p\">])</span>\n            <span class=\"k\">if</span> <span class=\"n\">findany</span><span class=\"p\">(</span><span class=\"n\">uril</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;right&#39;</span><span class=\"p\">])</span> <span class=\"ow\">or</span> <span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">uril</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;rs&#39;</span><span class=\"p\">):</span>\n                <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;view&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;right&#39;</span>\n            <span class=\"k\">if</span> <span class=\"n\">findany</span><span class=\"p\">(</span><span class=\"n\">uril</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;left&#39;</span><span class=\"p\">])</span> <span class=\"ow\">or</span> <span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">uril</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;ls&#39;</span><span class=\"p\">):</span>\n                <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;view&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;left&#39;</span>\n            <span class=\"k\">if</span> <span class=\"n\">findany</span><span class=\"p\">(</span><span class=\"n\">uril</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;carapace&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;whole&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;carpace&#39;</span><span class=\"p\">])</span> <span class=\"ow\">or</span> <span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">uril</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;wb&#39;</span><span class=\"p\">):</span>\n                <span class=\"c1\">#info[&#39;view&#39;] = &#39;top&#39;</span>\n                <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;view&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;up&#39;</span>\n            <span class=\"n\">occurrence_id</span> <span class=\"o\">=</span> <span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">uri</span><span class=\"p\">))</span>\n            <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;occurrence&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;occurrence&#39;</span> <span class=\"o\">+</span> <span class=\"n\">occurrence_id</span>\n            <span class=\"k\">return</span> <span class=\"n\">info</span>\n        <span class=\"n\">turtle_info_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">parse_turtle_uri</span><span class=\"p\">(</span><span class=\"n\">uri</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">uri</span> <span class=\"ow\">in</span> <span class=\"n\">annot_orig_uris</span><span class=\"p\">]</span>\n        <span class=\"n\">view_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take_column</span><span class=\"p\">(</span><span class=\"n\">turtle_info_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;view&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">occur_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take_column</span><span class=\"p\">(</span><span class=\"n\">turtle_info_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;occurrence&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">turtle_tag_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">occur_text_list</span><span class=\"p\">,</span> <span class=\"n\">view_text_list</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># TODO: mark viewpoints using euler angles / quaternions</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_image_imagesettext</span><span class=\"p\">(</span><span class=\"n\">parent_gids</span><span class=\"p\">,</span> <span class=\"n\">occur_text_list</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">append_annot_case_tags</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">lmap</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"n\">turtle_tag_list</span><span class=\"p\">))</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">postingest_func</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">postingest_func</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Print to show success</span>\n    <span class=\"c1\">#ibs.print_image_table()</span>\n    <span class=\"c1\">#ibs.print_tables()</span>\n    <span class=\"c1\">#ibs.print_annotation_table()</span>\n    <span class=\"c1\">#ibs.print_alr_table()</span>\n    <span class=\"c1\">#ibs.print_lblannot_table()</span>\n    <span class=\"c1\">#ibs.print_image_table()</span>\n    <span class=\"c1\">#return aid_list</span>\n    <span class=\"k\">return</span> <span class=\"n\">gid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"normalize_name\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.normalize_name\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">normalize_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Maps unknonwn names to the standard ____ &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ACCEPTED_UNKNOWN_NAMES</span><span class=\"p\">:</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">INDIVIDUAL_KEY</span>\n    <span class=\"k\">return</span> <span class=\"n\">name</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_name_texts_from_parent_folder\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.get_name_texts_from_parent_folder\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_name_texts_from_parent_folder</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">,</span> <span class=\"n\">img_dir</span><span class=\"p\">,</span> <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Input: gpath_list</span>\n<span class=\"sd\">    Output: names based on the parent folder of each image</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\">#from os.path import commonprefix</span>\n    <span class=\"n\">relgpath_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">relpath</span><span class=\"p\">(</span><span class=\"n\">gpath</span><span class=\"p\">,</span> <span class=\"n\">img_dir</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">gpath</span> <span class=\"ow\">in</span> <span class=\"n\">gpath_list</span><span class=\"p\">]</span>\n    <span class=\"c1\">#_prefix = commonprefix(gpath_list)</span>\n    <span class=\"c1\">#relgpath_list = [relpath(gpath, _prefix) for gpath in gpath_list]</span>\n    <span class=\"n\">_name_list</span>  <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">relgpath</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">relgpath</span> <span class=\"ow\">in</span> <span class=\"n\">relgpath_list</span><span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">fmtkey</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"c1\">#fmtkey = &#39;African Wild Dog: {name}&#39;</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">parse</span>\n        <span class=\"n\">parse_results</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">fmtkey</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">_name_list</span><span class=\"p\">]</span>\n        <span class=\"n\">_name_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">res</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">res</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">name</span>\n                      <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">res</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">_name_list</span><span class=\"p\">,</span> <span class=\"n\">parse_results</span><span class=\"p\">)]</span>\n\n    <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">normalize_name</span><span class=\"p\">,</span> <span class=\"n\">_name_list</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">name_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"FMT_KEYS\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.FMT_KEYS\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">FMT_KEYS</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"n\">name_fmt</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;{name:*}[id:d].</span><span class=\"si\">{ext}</span><span class=\"s1\">&#39;</span>\n    <span class=\"n\">snails_fmt</span>  <span class=\"o\">=</span> <span class=\"s1\">&#39;{name:*dd}{id:dd}.</span><span class=\"si\">{ext}</span><span class=\"s1\">&#39;</span>\n    <span class=\"n\">giraffe1_fmt</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;{name:*}_</span><span class=\"si\">{id:d}</span><span class=\"s1\">.</span><span class=\"si\">{ext}</span><span class=\"s1\">&#39;</span>\n    <span class=\"n\">seal2_fmt</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;{name:Phsd*}{id:[A-Z]}.</span><span class=\"si\">{ext}</span><span class=\"s1\">&#39;</span>\n    <span class=\"n\">elephant_fmt</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;{prefix?}</span><span class=\"si\">{name}</span><span class=\"s1\">_</span><span class=\"si\">{view}</span><span class=\"s1\">_{id?}.</span><span class=\"si\">{ext}</span><span class=\"s1\">&#39;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_name_texts_from_gnames\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.get_name_texts_from_gnames\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_name_texts_from_gnames</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">,</span> <span class=\"n\">img_dir</span><span class=\"p\">,</span> <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"s1\">&#39;{name:*}[aid:d].</span><span class=\"si\">{ext}</span><span class=\"s1\">&#39;</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        gpath_list (list): list of image paths</span>\n<span class=\"sd\">        img_dir (str): path to image directory</span>\n<span class=\"sd\">        fmtkey (str): pattern string to parse names from (default = &#39;{name:*}[aid:d].{ext}&#39;)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: name_list - based on the parent folder of each image</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --test-get_name_texts_from_gnames</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.dbio.ingest_database import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; gpath_list = [&#39;e_f0273_f.jpg&#39;, &#39;f0001_f.jpg&#39;, &#39;f0259_l_3.jpg&#39;, &#39;f0259_f_1.jpg&#39;,  &#39;f0259_f (1).jpg&#39;, &#39;f0058_u16_f.jpg&#39;]</span>\n<span class=\"sd\">        &gt;&gt;&gt; img_dir = &#39;&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; fmtkey = FMT_KEYS.elephant_fmt</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_name_texts_from_gnames(gpath_list, img_dir, fmtkey)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># These define regexes that attempt to parse the insane and contradicting</span>\n    <span class=\"c1\"># naming schemes of the image sets that we get.</span>\n    <span class=\"n\">INGEST_FORMATS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"n\">FMT_KEYS</span><span class=\"o\">.</span><span class=\"n\">name_fmt</span><span class=\"p\">:</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">named_field_regex</span><span class=\"p\">([</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s1\">&#39;[a-zA-Z]+&#39;</span><span class=\"p\">),</span>  <span class=\"c1\"># all alpha characters</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span>   <span class=\"sa\">r</span><span class=\"s1\">&#39;\\d*&#39;</span><span class=\"p\">),</span>        <span class=\"c1\"># first numbers (if existant)</span>\n            <span class=\"p\">(</span> <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"sa\">r</span><span class=\"s1\">&#39;\\.&#39;</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;ext&#39;</span><span class=\"p\">,</span>  <span class=\"sa\">r</span><span class=\"s1\">&#39;\\w+&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">]),</span>\n\n        <span class=\"n\">FMT_KEYS</span><span class=\"o\">.</span><span class=\"n\">snails_fmt</span><span class=\"p\">:</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">named_field_regex</span><span class=\"p\">([</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s1\">&#39;[a-zA-Z]+\\d\\d&#39;</span><span class=\"p\">),</span>  <span class=\"c1\"># species and 2 numbers</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span>   <span class=\"sa\">r</span><span class=\"s1\">&#39;\\d\\d&#39;</span><span class=\"p\">),</span>  <span class=\"c1\"># 2 more numbers</span>\n            <span class=\"p\">(</span> <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"sa\">r</span><span class=\"s1\">&#39;\\.&#39;</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;ext&#39;</span><span class=\"p\">,</span>  <span class=\"sa\">r</span><span class=\"s1\">&#39;\\w+&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">]),</span>\n\n        <span class=\"n\">FMT_KEYS</span><span class=\"o\">.</span><span class=\"n\">giraffe1_fmt</span><span class=\"p\">:</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">named_field_regex</span><span class=\"p\">([</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span>  <span class=\"sa\">r</span><span class=\"s1\">&#39;G\\d+&#39;</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;under&#39;</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s1\">&#39;_&#39;</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span>    <span class=\"sa\">r</span><span class=\"s1\">&#39;\\d+&#39;</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span> <span class=\"kc\">None</span><span class=\"p\">,</span>   <span class=\"sa\">r</span><span class=\"s1\">&#39;\\.&#39;</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;ext&#39;</span><span class=\"p\">,</span>   <span class=\"sa\">r</span><span class=\"s1\">&#39;\\w+&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">]),</span>\n\n        <span class=\"n\">FMT_KEYS</span><span class=\"o\">.</span><span class=\"n\">seal2_fmt</span><span class=\"p\">:</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">named_field_regex</span><span class=\"p\">([</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span>  <span class=\"sa\">r</span><span class=\"s1\">&#39;Phs\\d+&#39;</span><span class=\"p\">),</span>  <span class=\"c1\"># Phs and then numbers</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span>    <span class=\"sa\">r</span><span class=\"s1\">&#39;[A-Z]+&#39;</span><span class=\"p\">),</span>  <span class=\"c1\"># 1 or more letters</span>\n            <span class=\"p\">(</span> <span class=\"kc\">None</span><span class=\"p\">,</span>   <span class=\"sa\">r</span><span class=\"s1\">&#39;\\.&#39;</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;ext&#39;</span><span class=\"p\">,</span>   <span class=\"sa\">r</span><span class=\"s1\">&#39;\\w+&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">]),</span>\n\n        <span class=\"c1\"># this one defines multiple possible regex types. yay standards</span>\n        <span class=\"n\">FMT_KEYS</span><span class=\"o\">.</span><span class=\"n\">elephant_fmt</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">named_field_regex</span><span class=\"p\">([</span>\n                <span class=\"p\">(</span><span class=\"s1\">&#39;prefix&#39;</span><span class=\"p\">,</span>  <span class=\"sa\">r</span><span class=\"s1\">&#39;(e_)?&#39;</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s1\">&#39;[a-zA-Z0-9]+&#39;</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span><span class=\"s1\">&#39;view&#39;</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s1\">&#39;_[rflo]&#39;</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span>    <span class=\"sa\">r</span><span class=\"s1\">&#39;([ _][^.]+)?&#39;</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span> <span class=\"kc\">None</span><span class=\"p\">,</span>   <span class=\"sa\">r</span><span class=\"s1\">&#39;\\.&#39;</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span><span class=\"s1\">&#39;ext&#39;</span><span class=\"p\">,</span>   <span class=\"sa\">r</span><span class=\"s1\">&#39;\\w+&#39;</span><span class=\"p\">),</span>\n            <span class=\"p\">]),</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">named_field_regex</span><span class=\"p\">([</span>\n                <span class=\"p\">(</span><span class=\"s1\">&#39;prefix&#39;</span><span class=\"p\">,</span>  <span class=\"sa\">r</span><span class=\"s1\">&#39;(e_)?&#39;</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s1\">&#39;[a-zA-Z0-9]+&#39;</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span>    <span class=\"sa\">r</span><span class=\"s1\">&#39;([ _][^.]+)?&#39;</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span><span class=\"s1\">&#39;view&#39;</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s1\">&#39;_[rflo]&#39;</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span> <span class=\"kc\">None</span><span class=\"p\">,</span>   <span class=\"sa\">r</span><span class=\"s1\">&#39;\\.&#39;</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span><span class=\"s1\">&#39;ext&#39;</span><span class=\"p\">,</span>   <span class=\"sa\">r</span><span class=\"s1\">&#39;\\w+&#39;</span><span class=\"p\">),</span>\n            <span class=\"p\">])],</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">regex_list</span> <span class=\"o\">=</span> <span class=\"n\">INGEST_FORMATS</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">fmtkey</span><span class=\"p\">,</span> <span class=\"n\">fmtkey</span><span class=\"p\">)</span>\n    <span class=\"n\">gname_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">fpaths_to_fnames</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parse_format</span><span class=\"p\">(</span><span class=\"n\">regex_list</span><span class=\"p\">,</span> <span class=\"n\">gname</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">regex_list</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">regex_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">regex_list</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">regex</span> <span class=\"ow\">in</span> <span class=\"n\">regex_list</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">regex_parse</span><span class=\"p\">(</span><span class=\"n\">regex</span><span class=\"p\">,</span> <span class=\"n\">gname</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">result</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">result</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"n\">parsed_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">parse_format</span><span class=\"p\">(</span><span class=\"n\">regex_list</span><span class=\"p\">,</span> <span class=\"n\">gname</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">gname</span> <span class=\"ow\">in</span> <span class=\"n\">gname_list</span><span class=\"p\">]</span>\n\n    <span class=\"n\">anyfailed</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"k\">for</span> <span class=\"n\">gpath</span><span class=\"p\">,</span> <span class=\"n\">parsed</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">,</span> <span class=\"n\">parsed_list</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">parsed</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;FAILED TO PARSE: </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">gpath</span><span class=\"p\">)</span>\n            <span class=\"n\">anyfailed</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"k\">if</span> <span class=\"n\">anyfailed</span><span class=\"p\">:</span>\n        <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;FAILED REGEX: </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">regex_list</span><span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n    <span class=\"n\">_name_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">parsed</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">parsed</span> <span class=\"ow\">in</span> <span class=\"n\">parsed_list</span><span class=\"p\">]</span>\n    <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">normalize_name</span><span class=\"p\">,</span> <span class=\"n\">_name_list</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">name_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"resolve_name_conflicts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.resolve_name_conflicts\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">resolve_name_conflicts</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">name_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; &quot;&quot;&quot;</span>\n    <span class=\"c1\"># Build conflict map (values are lists of members)</span>\n    <span class=\"n\">conflict_gid_to_names</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">build_conflict_dict</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">name_list</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Check to see which gid has more than one name</span>\n    <span class=\"n\">unique_gids</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">unique_ordered</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">unique_names</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">unique_notes</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">gid</span> <span class=\"ow\">in</span> <span class=\"n\">unique_gids</span><span class=\"p\">:</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">unique_ordered</span><span class=\"p\">(</span><span class=\"n\">conflict_gid_to_names</span><span class=\"p\">[</span><span class=\"n\">gid</span><span class=\"p\">])</span>\n        <span class=\"n\">unique_name</span> <span class=\"o\">=</span> <span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">unique_note</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s1\">&#39;____&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">:</span>\n                <span class=\"n\">names</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"s1\">&#39;____&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">unique_name</span> <span class=\"o\">=</span> <span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">unique_name</span> <span class=\"o\">=</span> <span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"n\">unique_note</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;aliases([&#39;</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;, &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]))</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;])&#39;</span>\n        <span class=\"n\">unique_names</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">unique_name</span><span class=\"p\">)</span>\n        <span class=\"n\">unique_notes</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">unique_note</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">unique_gids</span><span class=\"p\">,</span> <span class=\"n\">unique_names</span><span class=\"p\">,</span> <span class=\"n\">unique_notes</span></div>\n\n\n<span class=\"c1\">#</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># ## &lt;STANDARD DATABASES&gt; ###</span>\n\n<span class=\"n\">STANDARD_INGEST_FUNCS</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">__standard</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;  Decorates a function as a standard ingestable database &quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__registerdb</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n        <span class=\"n\">STANDARD_INGEST_FUNCS</span><span class=\"p\">[</span><span class=\"n\">dbname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">func</span>\n        <span class=\"k\">return</span> <span class=\"n\">func</span>\n    <span class=\"k\">return</span> <span class=\"n\">__registerdb</span>\n\n\n<div class=\"viewcode-block\" id=\"ingest_testdb1\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_testdb1\">[docs]</a><span class=\"nd\">@__standard</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ingest_testdb1</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    ingest_testdb1</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.dbio.ingest_database import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import utool as ut</span>\n<span class=\"sd\">        &gt;&gt;&gt; from vtool.tests import grabdata</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; grabdata.ensure_testdata()</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DELETE TESTDB1</span>\n<span class=\"sd\">        &gt;&gt;&gt; TESTDB1 = ut.unixjoin(ibeis.sysres.get_workdir(), &#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.delete(TESTDB1, ignore_errors=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ingest_testdb1(dbname)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">vtool.tests</span> <span class=\"k\">import</span> <span class=\"n\">grabdata</span>   <span class=\"c1\"># TODO: remove and use utool appdir</span>\n    <span class=\"k\">def</span> <span class=\"nf\">postingest_tesdb1_func</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">constants</span> <span class=\"k\">as</span> <span class=\"n\">const</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;postingest_tesdb1_func&#39;</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Adjust data as we see fit</span>\n\n        <span class=\"c1\"># gid_list = np.array(ibs.images()._rowids)</span>\n        <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_gids</span><span class=\"p\">())</span>\n        <span class=\"c1\"># Set image unixtimes</span>\n        <span class=\"n\">unixtimes_even</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">100</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n        <span class=\"n\">unixtimes_odd</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">9001</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n        <span class=\"n\">unixtime_list</span> <span class=\"o\">=</span> <span class=\"n\">unixtimes_even</span> <span class=\"o\">+</span> <span class=\"n\">unixtimes_odd</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_image_unixtime</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">unixtime_list</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Unname first aid in every name</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n        <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">nid</span> <span class=\"k\">if</span> <span class=\"n\">nid</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">nid</span> <span class=\"ow\">in</span> <span class=\"n\">nid_list</span><span class=\"p\">]</span>\n        <span class=\"n\">unique_flag</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flag_unique_items</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">unique_nids</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">,</span> <span class=\"n\">unique_flag</span><span class=\"p\">)</span>\n        <span class=\"n\">none_nids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">nid</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"k\">for</span> <span class=\"n\">nid</span> <span class=\"ow\">in</span> <span class=\"n\">nid_list</span><span class=\"p\">]</span>\n        <span class=\"n\">flagged_nids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">nid</span> <span class=\"k\">for</span> <span class=\"n\">nid</span> <span class=\"ow\">in</span> <span class=\"n\">unique_nids</span> <span class=\"k\">if</span> <span class=\"n\">nid_list</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"n\">nid</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">plural_flag</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">nid</span> <span class=\"ow\">in</span> <span class=\"n\">flagged_nids</span> <span class=\"k\">for</span> <span class=\"n\">nid</span> <span class=\"ow\">in</span> <span class=\"n\">nid_list</span><span class=\"p\">]</span>\n        <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">all</span><span class=\"p\">,</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">plural_flag</span><span class=\"p\">,</span> <span class=\"n\">unique_flag</span><span class=\"p\">,</span> <span class=\"n\">none_nids</span><span class=\"p\">)))</span>\n        <span class=\"n\">flagged_aids</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">VERYVERBOSE</span><span class=\"p\">:</span>\n            <span class=\"k\">def</span> <span class=\"nf\">print2</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[post_testdb1] &#39;</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;, &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">))</span>\n            <span class=\"n\">print2</span><span class=\"p\">(</span><span class=\"s1\">&#39;aid_list=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n            <span class=\"n\">print2</span><span class=\"p\">(</span><span class=\"s1\">&#39;nid_list=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">nid_list</span><span class=\"p\">)</span>\n            <span class=\"n\">print2</span><span class=\"p\">(</span><span class=\"s1\">&#39;unique_flag=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">unique_flag</span><span class=\"p\">)</span>\n            <span class=\"n\">print2</span><span class=\"p\">(</span><span class=\"s1\">&#39;plural_flag=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">plural_flag</span><span class=\"p\">)</span>\n            <span class=\"n\">print2</span><span class=\"p\">(</span><span class=\"s1\">&#39;unique_nids=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">unique_nids</span><span class=\"p\">)</span>\n            <span class=\"n\">print2</span><span class=\"p\">(</span><span class=\"s1\">&#39;none_nids=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">none_nids</span><span class=\"p\">)</span>\n            <span class=\"n\">print2</span><span class=\"p\">(</span><span class=\"s1\">&#39;flag_list=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n            <span class=\"n\">print2</span><span class=\"p\">(</span><span class=\"s1\">&#39;flagged_nids=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">flagged_nids</span><span class=\"p\">)</span>\n            <span class=\"n\">print2</span><span class=\"p\">(</span><span class=\"s1\">&#39;flagged_aids=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">flagged_aids</span><span class=\"p\">)</span>\n            <span class=\"c1\"># print2(&#39;new_nids=%r&#39; % new_nids)</span>\n        <span class=\"c1\"># Unname, some annotations for testing</span>\n        <span class=\"n\">unname_aids</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_annot_nids</span><span class=\"p\">(</span><span class=\"n\">unname_aids</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Add all annotations with names as exemplars</span>\n        <span class=\"c1\">#from ibeis.control.IBEISControl import IBEISController</span>\n        <span class=\"c1\">#assert isinstance(ibs, IBEISController)</span>\n        <span class=\"n\">unflagged_aids</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_dirty_items</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n        <span class=\"n\">exemplar_flags</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">unflagged_aids</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_exemplar_flags</span><span class=\"p\">(</span><span class=\"n\">unflagged_aids</span><span class=\"p\">,</span> <span class=\"n\">exemplar_flags</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Set some test species labels</span>\n        <span class=\"n\">species_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_species_texts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">ix</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">):</span>\n            <span class=\"n\">species_text_list</span><span class=\"p\">[</span><span class=\"n\">ix</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_SPECIES</span><span class=\"o\">.</span><span class=\"n\">ZEB_PLAIN</span>\n        <span class=\"c1\"># These are actually plains zebras.</span>\n        <span class=\"k\">for</span> <span class=\"n\">ix</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">):</span>\n            <span class=\"n\">species_text_list</span><span class=\"p\">[</span><span class=\"n\">ix</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_SPECIES</span><span class=\"o\">.</span><span class=\"n\">ZEB_GREVY</span>\n        <span class=\"k\">for</span> <span class=\"n\">ix</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">):</span>\n            <span class=\"n\">species_text_list</span><span class=\"p\">[</span><span class=\"n\">ix</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_SPECIES</span><span class=\"o\">.</span><span class=\"n\">BEAR_POLAR</span>\n\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_species</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">species_text_list</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_viewpoint_code</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;left&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_viewpoint_code</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;left&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_viewpoint_code</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_notes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;this is actually a plains zebra&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_notes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;aid 1 and 2 are correct matches&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_notes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;very simple image to debug feature detector&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_notes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;standard test image&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_reviewed</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">[::</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">[::</span><span class=\"mi\">2</span><span class=\"p\">]))</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_multiple</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">[::</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">[::</span><span class=\"mi\">2</span><span class=\"p\">]))</span>\n\n        <span class=\"c1\"># Set some randomish gps flags that are within nnp</span>\n        <span class=\"n\">unixtime_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_unixtime</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">valid_lat_min</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">1.4446</span>\n        <span class=\"n\">valid_lat_max</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">1.3271</span>\n        <span class=\"n\">valid_lon_min</span> <span class=\"o\">=</span> <span class=\"mf\">36.7619</span>\n        <span class=\"n\">valid_lon_max</span> <span class=\"o\">=</span> <span class=\"mf\">36.9622</span>\n        <span class=\"n\">valid_lat_range</span> <span class=\"o\">=</span> <span class=\"n\">valid_lat_max</span> <span class=\"o\">-</span> <span class=\"n\">valid_lat_min</span>\n        <span class=\"n\">valid_lon_range</span> <span class=\"o\">=</span> <span class=\"n\">valid_lon_max</span> <span class=\"o\">-</span> <span class=\"n\">valid_lon_min</span>\n        <span class=\"n\">randstate</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">RandomState</span><span class=\"p\">(</span><span class=\"n\">unixtime_list</span><span class=\"p\">)</span>\n        <span class=\"n\">new_gps_list</span> <span class=\"o\">=</span> <span class=\"n\">randstate</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"n\">new_gps_list</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">new_gps_list</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">valid_lat_range</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">valid_lat_min</span>\n        <span class=\"n\">new_gps_list</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">new_gps_list</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">valid_lon_range</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">valid_lon_min</span>\n        <span class=\"n\">new_gps_list</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"p\">:]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_image_gps</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">new_gps_list</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># TODO: add a nan timestamp</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">append_annot_case_tags</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;error:bbox&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">append_annot_case_tags</span><span class=\"p\">([</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;quality:washedout&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">append_annot_case_tags</span><span class=\"p\">([</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;lighting&#39;</span><span class=\"p\">])</span>\n\n        <span class=\"n\">aidgroups</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">group_annots_by_name</span><span class=\"p\">(</span>\n            <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">filter_annots_general</span><span class=\"p\">(</span><span class=\"n\">min_pername</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">aid1_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take_column</span><span class=\"p\">(</span><span class=\"n\">aidgroups</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">aid2_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take_column</span><span class=\"p\">(</span><span class=\"n\">aidgroups</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">annotmatch_rowids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_annotmatch_undirected</span><span class=\"p\">(</span><span class=\"n\">aid1_list</span><span class=\"p\">,</span> <span class=\"n\">aid2_list</span><span class=\"p\">)</span>\n\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annotmatch_evidence_decision</span><span class=\"p\">(</span><span class=\"n\">annotmatch_rowids</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">]</span> <span class=\"o\">*</span>\n                                             <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">annotmatch_rowids</span><span class=\"p\">))</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annotmatch_prop</span><span class=\"p\">(</span><span class=\"s1\">&#39;photobomb&#39;</span><span class=\"p\">,</span> <span class=\"n\">annotmatch_rowids</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">]</span> <span class=\"o\">*</span>\n                                <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">annotmatch_rowids</span><span class=\"p\">))</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">aids</span> <span class=\"ow\">in</span> <span class=\"n\">aidgroups</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n    <span class=\"k\">return</span> <span class=\"n\">Ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;named_images&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"n\">FMT_KEYS</span><span class=\"o\">.</span><span class=\"n\">name_fmt</span><span class=\"p\">,</span>\n                      <span class=\"n\">img_dir</span><span class=\"o\">=</span><span class=\"n\">grabdata</span><span class=\"o\">.</span><span class=\"n\">get_testdata_dir</span><span class=\"p\">(),</span>\n                      <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"mf\">0.00</span><span class=\"p\">,</span>\n                      <span class=\"n\">images_as_annots</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                      <span class=\"n\">postingest_func</span><span class=\"o\">=</span><span class=\"n\">postingest_tesdb1_func</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_humpbacks\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_humpbacks\">[docs]</a><span class=\"nd\">@__standard</span><span class=\"p\">(</span><span class=\"s1\">&#39;humpbacks&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ingest_humpbacks</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"c1\"># The original humpbacks data is ROI cropped images in the</span>\n    <span class=\"c1\"># named folder format</span>\n    <span class=\"k\">return</span> <span class=\"n\">Ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;named_folders&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"mf\">0.00</span><span class=\"p\">,</span>\n                      <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"s1\">&#39;whale_humpback&#39;</span><span class=\"p\">,</span>\n                      <span class=\"c1\"># this zipfile is only on Zach&#39;s machine</span>\n                      <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_polar_bears\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_polar_bears\">[docs]</a><span class=\"nd\">@__standard</span><span class=\"p\">(</span><span class=\"s1\">&#39;polar_bears&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ingest_polar_bears</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">Ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;named_folders&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"mf\">0.00</span><span class=\"p\">,</span>\n                      <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_wilddog_peter\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_wilddog_peter\">[docs]</a><span class=\"nd\">@__standard</span><span class=\"p\">(</span><span class=\"s1\">&#39;wd_peter_blinston&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ingest_wilddog_peter</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --exec-injest_main --db wd_peter_blinston</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">Ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;unknown&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">img_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;/raid/raw_rsync/african-dogs&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">,</span>\n                      <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">Species</span><span class=\"o\">.</span><span class=\"n\">WILDDOG</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_lynx\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_lynx\">[docs]</a><span class=\"nd\">@__standard</span><span class=\"p\">(</span><span class=\"s1\">&#39;lynx&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ingest_lynx</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --exec-injest_main --db lynx</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">Ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;named_folders&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">img_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;/raid/raw_rsync/iberian-lynx/CARPETAS CATALOGO INDIVIDUOS/&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">,</span>\n                      <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"s1\">&#39;lynx&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_whale_sharks\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_whale_sharks\">[docs]</a><span class=\"nd\">@__standard</span><span class=\"p\">(</span><span class=\"s1\">&#39;WS_ALL&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ingest_whale_sharks</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --exec-injest_main --db WS_ALL</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">Ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;named_folders&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">img_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;named-left-sharkimages&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">,</span>\n                      <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"s1\">&#39;whale_shark&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_snails_drop1\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_snails_drop1\">[docs]</a><span class=\"nd\">@__standard</span><span class=\"p\">(</span><span class=\"s1\">&#39;snails_drop1&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ingest_snails_drop1</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">Ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span>\n                      <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;named_images&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"n\">FMT_KEYS</span><span class=\"o\">.</span><span class=\"n\">snails_fmt</span><span class=\"p\">,</span>\n                      <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"s1\">&#39;snail&#39;</span><span class=\"p\">,</span>\n                      <span class=\"c1\">#img_dir=&#39;/raid/raw/snails_drop1_59MB&#39;,</span>\n                      <span class=\"n\">adjust_percent</span><span class=\"o\">=.</span><span class=\"mi\">20</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_seals_drop2\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_seals_drop2\">[docs]</a><span class=\"nd\">@__standard</span><span class=\"p\">(</span><span class=\"s1\">&#39;seals_drop2&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ingest_seals_drop2</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">Ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span>\n                      <span class=\"n\">zipfile</span><span class=\"o\">=</span><span class=\"s1\">&#39;../raw/hiby_Phs_photos.zip&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;named_images&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"n\">FMT_KEYS</span><span class=\"o\">.</span><span class=\"n\">seal2_fmt</span><span class=\"p\">,</span>\n                      <span class=\"c1\">#img_dir=&#39;/raid/raw/snails_drop1_59MB&#39;,</span>\n                      <span class=\"n\">adjust_percent</span><span class=\"o\">=.</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n                      <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"s1\">&#39;seal_saimma_ringed&#39;</span>\n                      <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_JAG_Kieryn\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_JAG_Kieryn\">[docs]</a><span class=\"nd\">@__standard</span><span class=\"p\">(</span><span class=\"s1\">&#39;JAG_Kieryn&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ingest_JAG_Kieryn</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">Ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span>\n                      <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;unknown&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"s1\">&#39;jaguar&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"mf\">0.00</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_Giraffes1\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_Giraffes1\">[docs]</a><span class=\"nd\">@__standard</span><span class=\"p\">(</span><span class=\"s1\">&#39;Giraffes&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ingest_Giraffes1</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">Ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span>\n                      <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;named_images&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"n\">FMT_KEYS</span><span class=\"o\">.</span><span class=\"n\">giraffe1_fmt</span><span class=\"p\">,</span>\n                      <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"s1\">&#39;giraffe_reticulated&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"mf\">0.00</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_Elephants_drop1\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_Elephants_drop1\">[docs]</a><span class=\"nd\">@__standard</span><span class=\"p\">(</span><span class=\"s1\">&#39;Elephants_drop1&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">ingest_Elephants_drop1</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">Ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span>\n                      <span class=\"n\">zipfile</span><span class=\"o\">=</span><span class=\"s1\">&#39;../raw_unprocessed/ID photo front_Elephants_4-29-2015-PeterGranli.zip&#39;</span><span class=\"p\">,</span>  <span class=\"c1\"># NOQA</span>\n                      <span class=\"n\">ingest_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;named_images&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">fmtkey</span><span class=\"o\">=</span><span class=\"n\">FMT_KEYS</span><span class=\"o\">.</span><span class=\"n\">elephant_fmt</span><span class=\"p\">,</span>\n                      <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"s1\">&#39;elephant_savanna&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">adjust_percent</span><span class=\"o\">=</span><span class=\"mf\">0.00</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_standard_ingestable\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.get_standard_ingestable\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_standard_ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">dbname</span> <span class=\"ow\">in</span> <span class=\"n\">STANDARD_INGEST_FUNCS</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">STANDARD_INGEST_FUNCS</span><span class=\"p\">[</span><span class=\"n\">dbname</span><span class=\"p\">](</span><span class=\"n\">dbname</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">AssertionError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Unknown dbname=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,))</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_standard_database\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_standard_database\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">ingest_standard_database</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"n\">force_delete</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    ingest_standard_database</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        dbname (str): database name</span>\n<span class=\"sd\">        force_delete (bool):</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.dbio.ingest_database import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; dbname = &#39;testdb1&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; force_delete = False</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ingest_standard_database(dbname, force_delete)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">IBEISControl</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ingest] Ingest Standard Database: dbname=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,))</span>\n    <span class=\"n\">ingestable</span> <span class=\"o\">=</span> <span class=\"n\">get_standard_ingestable</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">)</span>\n    <span class=\"n\">dbdir</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">db_to_dbdir</span><span class=\"p\">(</span><span class=\"n\">ingestable</span><span class=\"o\">.</span><span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"n\">allow_newdir</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">force_delete</span><span class=\"p\">:</span>\n        <span class=\"n\">ibsfuncs</span><span class=\"o\">.</span><span class=\"n\">delete_ibeis_database</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">IBEISControl</span><span class=\"o\">.</span><span class=\"n\">request_IBEISController</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">)</span>\n    <span class=\"n\">ingest_rawdata</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">ingestable</span><span class=\"p\">)</span></div>\n\n<span class=\"c1\"># ## &lt;/STANDARD DATABASES&gt; ###</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#</span>\n\n\n<div class=\"viewcode-block\" id=\"ingest_oxford_style_db\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_oxford_style_db\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">ingest_oxford_style_db</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Ingest either oxford or paris</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        dbdir (str):</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --exec-ingest_oxford_style_db --show</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.dbio.ingest_database import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; dbdir = &#39;/raid/work/Oxford&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; dryrun = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; ingest_oxford_style_db(dbdir)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.quit_if_noshow()</span>\n<span class=\"sd\">        &gt;&gt;&gt; import plottool as pt</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.show_if_requested()</span>\n\n<span class=\"sd\">    Ignore:</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.dbio.ingest_database import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; dbdir = &#39;/raid/work/Oxford&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; dbdir = &#39;/raid/work/Paris&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt;</span>\n<span class=\"sd\">        #&gt;&gt;&gt; ibeis.dbio.convert_db.ingest_oxford_style_db(dbdir)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Loading Oxford Style Images from: &#39;</span> <span class=\"o\">+</span> <span class=\"n\">dbdir</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_parse_oxsty_gtfname</span><span class=\"p\">(</span><span class=\"n\">gt_fname</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; parse gtfname for: (gt_name, quality_lbl, num) &quot;&quot;&quot;</span>\n        <span class=\"c1\"># num is an id, not a number of annots</span>\n        <span class=\"n\">gt_format</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"si\">{}</span><span class=\"s1\">_</span><span class=\"si\">{:d}</span><span class=\"s1\">_{:D}.txt&#39;</span>\n        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">,</span> <span class=\"n\">quality</span> <span class=\"o\">=</span> <span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">gt_format</span><span class=\"p\">,</span> <span class=\"n\">gt_fname</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">,</span> <span class=\"n\">quality</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ut</span><span class=\"o\">.</span><span class=\"n\">memoize</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_tmpread</span><span class=\"p\">(</span><span class=\"n\">gt_fpath</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">readfrom</span><span class=\"p\">(</span><span class=\"n\">gt_fpath</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_read_oxsty_gtfile</span><span class=\"p\">(</span><span class=\"n\">gt_fpath</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">quality</span><span class=\"p\">,</span> <span class=\"n\">img_dpath</span><span class=\"p\">,</span> <span class=\"n\">ignore_list</span><span class=\"p\">):</span>\n        <span class=\"n\">oxsty_annot_info_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"c1\"># read the individual ground truth file</span>\n        <span class=\"n\">line_list</span> <span class=\"o\">=</span> <span class=\"n\">_tmpread</span><span class=\"p\">(</span><span class=\"n\">gt_fpath</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n        <span class=\"c1\">#line_list = file.read().splitlines()</span>\n        <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">line_list</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">line</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n            <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39; &#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">gname</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;oxc1_&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;.jpg&#39;</span>\n            <span class=\"c1\"># &gt;:( Because PARIS just cant keep paths consistent</span>\n            <span class=\"k\">if</span> <span class=\"n\">gname</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s1\">&#39;paris_&#39;</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"n\">paris_hack</span> <span class=\"o\">=</span> <span class=\"n\">gname</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"n\">gname</span><span class=\"o\">.</span><span class=\"n\">rfind</span><span class=\"p\">(</span><span class=\"s1\">&#39;_&#39;</span><span class=\"p\">)]</span>\n                <span class=\"n\">gname</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">paris_hack</span><span class=\"p\">,</span> <span class=\"n\">gname</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">gname</span> <span class=\"ow\">in</span> <span class=\"n\">ignore_list</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"c1\"># if has bbox</span>\n                <span class=\"c1\">#x1, y1, w, h =  [int(round(float(x))) for x in fields[1:]]</span>\n                <span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">y1</span><span class=\"p\">,</span> <span class=\"n\">x2</span><span class=\"p\">,</span> <span class=\"n\">y2</span> <span class=\"o\">=</span>  <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)))</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]]</span>\n                <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">x2</span> <span class=\"o\">-</span> <span class=\"n\">x1</span>\n                <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">y2</span> <span class=\"o\">-</span> <span class=\"n\">y1</span>\n                <span class=\"n\">bbox</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">y1</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Get annotation width / height</span>\n                <span class=\"n\">gpath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">img_dpath</span><span class=\"p\">,</span> <span class=\"n\">gname</span><span class=\"p\">)</span>\n                <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"n\">gpath</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s1\">&#39;auto&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n                <span class=\"n\">bbox</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">]</span>\n            <span class=\"n\">oxsty_annot_info</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">gname</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"p\">)</span>\n            <span class=\"n\">oxsty_annot_info_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">oxsty_annot_info</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">oxsty_annot_info_list</span>\n\n    <span class=\"n\">gt_dpath</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">existing_subpath</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">,</span>\n                                      <span class=\"p\">[</span><span class=\"s1\">&#39;oxford_style_gt&#39;</span><span class=\"p\">,</span>\n                                       <span class=\"s1\">&#39;gt_files_170407&#39;</span><span class=\"p\">,</span>\n                                       <span class=\"s1\">&#39;oxford_groundtruth&#39;</span><span class=\"p\">])</span>\n\n    <span class=\"n\">img_dpath</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">existing_subpath</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">,</span>\n                                       <span class=\"p\">[</span><span class=\"s1\">&#39;oxbuild_images&#39;</span><span class=\"p\">,</span>\n                                        <span class=\"s1\">&#39;images&#39;</span><span class=\"p\">])</span>\n\n    <span class=\"n\">corrupted_file_fpath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">gt_dpath</span><span class=\"p\">,</span> <span class=\"s1\">&#39;corrupted_files.txt&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">ignore_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"c1\"># Check for corrupted files (Looking at your Paris Buildings Dataset)</span>\n    <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">checkpath</span><span class=\"p\">(</span><span class=\"n\">corrupted_file_fpath</span><span class=\"p\">):</span>\n        <span class=\"n\">ignore_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">read_from</span><span class=\"p\">(</span><span class=\"n\">corrupted_file_fpath</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n\n    <span class=\"n\">gname_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">list_images</span><span class=\"p\">(</span><span class=\"n\">img_dpath</span><span class=\"p\">,</span> <span class=\"n\">ignore_list</span><span class=\"o\">=</span><span class=\"n\">ignore_list</span><span class=\"p\">,</span>\n                                   <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">full</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># just in case utool broke</span>\n    <span class=\"k\">for</span> <span class=\"n\">ignore</span> <span class=\"ow\">in</span> <span class=\"n\">ignore_list</span><span class=\"p\">:</span>\n        <span class=\"k\">assert</span> <span class=\"n\">ignore</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">gname_list</span>\n\n    <span class=\"c1\"># Read the Oxford Style Groundtruth files</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Loading Oxford Style Names and Annots&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">gt_fname_list</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">listdir</span><span class=\"p\">(</span><span class=\"n\">gt_dpath</span><span class=\"p\">)</span>\n    <span class=\"n\">num_gt_files</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gt_fname_list</span><span class=\"p\">)</span>\n    <span class=\"n\">query_annots</span>  <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">gname2_annots_raw</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ddict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n    <span class=\"n\">name_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">([])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39; * num_gt_files = </span><span class=\"si\">%d</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"n\">num_gt_files</span><span class=\"p\">)</span>\n    <span class=\"c1\">#</span>\n    <span class=\"c1\"># Iterate over each groundtruth file</span>\n    <span class=\"k\">for</span> <span class=\"n\">gtx</span><span class=\"p\">,</span> <span class=\"n\">gt_fname</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ProgIter</span><span class=\"p\">(</span><span class=\"n\">gt_fname_list</span><span class=\"p\">,</span>\n                                               <span class=\"s1\">&#39;parsed oxsty gtfile: &#39;</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">gt_fname</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;corrupted_files.txt&#39;</span><span class=\"p\">:</span>\n            <span class=\"k\">continue</span>\n        <span class=\"c1\">#Get name, quality, and num from fname</span>\n        <span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">,</span> <span class=\"n\">quality</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">_parse_oxsty_gtfname</span><span class=\"p\">(</span><span class=\"n\">gt_fname</span><span class=\"p\">)</span>\n        <span class=\"n\">gt_fpath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">gt_dpath</span><span class=\"p\">,</span> <span class=\"n\">gt_fname</span><span class=\"p\">)</span>\n        <span class=\"n\">name_set</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">oxsty_annot_info_sublist</span> <span class=\"o\">=</span> <span class=\"n\">_read_oxsty_gtfile</span><span class=\"p\">(</span>\n            <span class=\"n\">gt_fpath</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">quality</span><span class=\"p\">,</span> <span class=\"n\">img_dpath</span><span class=\"p\">,</span> <span class=\"n\">ignore_list</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">quality</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;query&#39;</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">gname</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">oxsty_annot_info_sublist</span><span class=\"p\">:</span>\n                <span class=\"n\">query_annots</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">gname</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">gname</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">oxsty_annot_info_sublist</span><span class=\"p\">:</span>\n                <span class=\"n\">gname2_annots_raw</span><span class=\"p\">[</span><span class=\"n\">gname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"p\">,</span> <span class=\"n\">quality</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39; * num_query images = </span><span class=\"si\">%d</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">query_annots</span><span class=\"p\">))</span>\n    <span class=\"c1\">#</span>\n    <span class=\"c1\"># Remove duplicates img.jpg : (*1.txt, *2.txt, ...) -&gt; (*.txt)</span>\n    <span class=\"n\">gname2_annots</span>     <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ddict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n    <span class=\"n\">multinamed_gname_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">gname</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">gname2_annots_raw</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n        <span class=\"n\">val_repr</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">))</span>\n        <span class=\"n\">unique_reprs</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">val_repr</span><span class=\"p\">)</span>\n        <span class=\"n\">unique_indexes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">val_repr</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">urep</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">urep</span> <span class=\"ow\">in</span> <span class=\"n\">unique_reprs</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">ux</span> <span class=\"ow\">in</span> <span class=\"n\">unique_indexes</span><span class=\"p\">:</span>\n            <span class=\"n\">gname2_annots</span><span class=\"p\">[</span><span class=\"n\">gname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">[</span><span class=\"n\">ux</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gname2_annots</span><span class=\"p\">[</span><span class=\"n\">gname</span><span class=\"p\">])</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">multinamed_gname_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">gname</span><span class=\"p\">)</span>\n    <span class=\"c1\"># print some statistics</span>\n    <span class=\"n\">query_gname_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"n\">query_annots</span><span class=\"p\">]</span>\n    <span class=\"n\">gname_with_groundtruth_list</span> <span class=\"o\">=</span> <span class=\"n\">gname2_annots</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n    <span class=\"n\">gname_with_groundtruth_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">gname_with_groundtruth_list</span><span class=\"p\">)</span>\n    <span class=\"n\">gname_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">gname_list</span><span class=\"p\">)</span>\n    <span class=\"n\">query_gname_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">query_gname_list</span><span class=\"p\">)</span>\n    <span class=\"n\">gname_without_groundtruth_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">gname_set</span> <span class=\"o\">-</span> <span class=\"n\">gname_with_groundtruth_set</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39; * num_images = </span><span class=\"si\">%d</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gname_list</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39; * images with groundtruth    = </span><span class=\"si\">%d</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gname_with_groundtruth_list</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39; * images without groundtruth = </span><span class=\"si\">%d</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gname_without_groundtruth_list</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39; * images with multi-groundtruth = </span><span class=\"si\">%d</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">multinamed_gname_list</span><span class=\"p\">))</span>\n    <span class=\"c1\">#make sure all queries have ground truth and there are no duplicate queries</span>\n    <span class=\"c1\">#</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">query_gname_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">query_gname_set</span><span class=\"o\">.</span><span class=\"n\">intersection</span><span class=\"p\">(</span><span class=\"n\">gname_with_groundtruth_list</span><span class=\"p\">))</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">query_gname_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">query_gname_list</span><span class=\"p\">))</span>\n    <span class=\"c1\">#=======================================================</span>\n    <span class=\"c1\"># Build IBEIS database</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">,</span> <span class=\"n\">allow_newdir</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;adding to table: &#39;</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Add images to ibeis</span>\n        <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">img_dpath</span><span class=\"p\">,</span> <span class=\"n\">gname</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/&#39;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">gname</span> <span class=\"ow\">in</span> <span class=\"n\">gname_list</span><span class=\"p\">]</span>\n        <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_images</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">,</span> <span class=\"n\">auto_localize</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 1) Add Query Annotations</span>\n        <span class=\"n\">qgname_list</span><span class=\"p\">,</span> <span class=\"n\">qbbox_list</span><span class=\"p\">,</span> <span class=\"n\">qname_list</span><span class=\"p\">,</span> <span class=\"n\">qid_list</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">query_annots</span><span class=\"p\">)</span>\n        <span class=\"c1\"># get image ids of queries</span>\n        <span class=\"n\">qgid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">gid_list</span><span class=\"p\">[</span><span class=\"n\">gname_list</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">gname</span><span class=\"p\">)]</span> <span class=\"k\">for</span> <span class=\"n\">gname</span> <span class=\"ow\">in</span> <span class=\"n\">qgname_list</span><span class=\"p\">]</span>\n        <span class=\"n\">qnote_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;query&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">qgid_list</span><span class=\"p\">)</span>\n        <span class=\"c1\"># 2) Add nonquery database annots</span>\n        <span class=\"n\">dgname_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">gname2_annots</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>  <span class=\"c1\"># NOQA</span>\n        <span class=\"n\">dgid_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">dname_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">dbbox_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">dnote_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">gname</span> <span class=\"ow\">in</span> <span class=\"n\">gname2_annots</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n            <span class=\"n\">gid</span> <span class=\"o\">=</span> <span class=\"n\">gid_list</span><span class=\"p\">[</span><span class=\"n\">gname_list</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">gname</span><span class=\"p\">)]</span>\n            <span class=\"n\">annots</span> <span class=\"o\">=</span> <span class=\"n\">gname2_annots</span><span class=\"p\">[</span><span class=\"n\">gname</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"p\">,</span> <span class=\"n\">quality</span> <span class=\"ow\">in</span> <span class=\"n\">annots</span><span class=\"p\">:</span>\n                <span class=\"n\">dgid_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">gid</span><span class=\"p\">)</span>\n                <span class=\"n\">dbbox_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bbox</span><span class=\"p\">)</span>\n                <span class=\"n\">dname_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n                <span class=\"n\">dnote_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">quality</span><span class=\"p\">)</span>\n        <span class=\"c1\"># 3) Add distractors: TODO: 100k</span>\n        <span class=\"n\">ugid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">gid_list</span><span class=\"p\">[</span><span class=\"n\">gname_list</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">gname</span><span class=\"p\">)]</span>\n                     <span class=\"k\">for</span> <span class=\"n\">gname</span> <span class=\"ow\">in</span> <span class=\"n\">gname_without_groundtruth_list</span><span class=\"p\">]</span>\n        <span class=\"n\">ubbox_list</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_sizes</span><span class=\"p\">(</span><span class=\"n\">ugid_list</span><span class=\"p\">)]</span>\n        <span class=\"n\">unote_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;distractor&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ugid_list</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># TODO Annotation consistency in terms of duplicate bounding boxes</span>\n        <span class=\"n\">qaid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_annots</span><span class=\"p\">(</span><span class=\"n\">qgid_list</span><span class=\"p\">,</span> <span class=\"n\">bbox_list</span><span class=\"o\">=</span><span class=\"n\">qbbox_list</span><span class=\"p\">,</span>\n                                   <span class=\"n\">name_list</span><span class=\"o\">=</span><span class=\"n\">qname_list</span><span class=\"p\">,</span> <span class=\"n\">notes_list</span><span class=\"o\">=</span><span class=\"n\">qnote_list</span><span class=\"p\">)</span>\n        <span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_annots</span><span class=\"p\">(</span><span class=\"n\">dgid_list</span><span class=\"p\">,</span> <span class=\"n\">bbox_list</span><span class=\"o\">=</span><span class=\"n\">dbbox_list</span><span class=\"p\">,</span>\n                                   <span class=\"n\">name_list</span><span class=\"o\">=</span><span class=\"n\">dname_list</span><span class=\"p\">,</span> <span class=\"n\">notes_list</span><span class=\"o\">=</span><span class=\"n\">dnote_list</span><span class=\"p\">)</span>\n        <span class=\"n\">uaid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_annots</span><span class=\"p\">(</span><span class=\"n\">ugid_list</span><span class=\"p\">,</span> <span class=\"n\">bbox_list</span><span class=\"o\">=</span><span class=\"n\">ubbox_list</span><span class=\"p\">,</span> <span class=\"n\">notes_list</span><span class=\"o\">=</span><span class=\"n\">unote_list</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Added </span><span class=\"si\">%d</span><span class=\"s1\"> query annototations&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">qaid_list</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Added </span><span class=\"si\">%d</span><span class=\"s1\"> database annototations&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Added </span><span class=\"si\">%d</span><span class=\"s1\"> distractor annototations&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">uaid_list</span><span class=\"p\">))</span>\n\n    <span class=\"n\">update</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"k\">if</span> <span class=\"n\">update</span><span class=\"p\">:</span>\n        <span class=\"c1\"># TODO: integrate this into normal ingest pipeline</span>\n        <span class=\"s1\">&#39;Oxford&#39;</span>\n        <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">)</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n        <span class=\"n\">notes_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_notes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;ok&#39;</span><span class=\"p\">:</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">QUAL_OK</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;good&#39;</span><span class=\"p\">:</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">QUAL_GOOD</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;junk&#39;</span><span class=\"p\">:</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">QUAL_JUNK</span><span class=\"p\">,</span>\n            <span class=\"c1\">#&#39;distractor&#39;: ibs.const.QUAL_JUNK</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">qual_text_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">note</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">QUAL_UNKNOWN</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">note</span> <span class=\"ow\">in</span> <span class=\"n\">notes_list</span><span class=\"p\">]</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_quality_texts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">qual_text_list</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">_overwrite_all_annot_species_to</span><span class=\"p\">(</span><span class=\"s1\">&#39;building&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">tags_list</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">note</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">note</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;query&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;distractor&#39;</span><span class=\"p\">]</span> <span class=\"k\">else</span> <span class=\"p\">[]</span> <span class=\"k\">for</span> <span class=\"n\">note</span> <span class=\"ow\">in</span> <span class=\"n\">notes_list</span><span class=\"p\">]</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">tag_funcs</span>\n        <span class=\"n\">tag_funcs</span><span class=\"o\">.</span><span class=\"n\">append_annot_case_tags</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">tags_list</span><span class=\"p\">)</span>\n        <span class=\"c1\">#ibs._set</span>\n        <span class=\"c1\"># tags_ = ibs.get_annot_case_tags(aid_list)</span>\n        <span class=\"c1\"># pass</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        python -m ibeis --tf filter_annots_general --db Oxford --has_any=[query]</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        dbname = &#39;Oxford&#39;</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n        <span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;gt_fname&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;quality&#39;</span><span class=\"p\">]</span>\n        <span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">gt_fname</span><span class=\"p\">,)</span> <span class=\"o\">+</span> <span class=\"n\">_parse_oxsty_gtfname</span><span class=\"p\">(</span><span class=\"n\">gt_fname</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">gt_fname</span> <span class=\"ow\">in</span> <span class=\"n\">gt_fname_list</span><span class=\"p\">]</span>\n        <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"n\">columns</span><span class=\"p\">)</span>\n        <span class=\"n\">query_df</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">&#39;quality&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;query&#39;</span><span class=\"p\">]</span>\n        <span class=\"c1\">#query_df = query_df.assign(bbox=None)</span>\n\n        <span class=\"n\">query_annot_rows</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">query_df</span><span class=\"o\">.</span><span class=\"n\">iterrows</span><span class=\"p\">():</span>\n            <span class=\"n\">gt_fname</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">,</span> <span class=\"n\">quality</span> <span class=\"o\">=</span> <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_values</span>\n            <span class=\"k\">if</span> <span class=\"n\">gt_fname</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;corrupted_files.txt&#39;</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n            <span class=\"c1\">#Get name, quality, and num from fname</span>\n            <span class=\"n\">gt_fpath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">gt_dpath</span><span class=\"p\">,</span> <span class=\"n\">gt_fname</span><span class=\"p\">)</span>\n            <span class=\"n\">oxsty_annot_info_sublist</span> <span class=\"o\">=</span> <span class=\"n\">_read_oxsty_gtfile</span><span class=\"p\">(</span>\n                <span class=\"n\">gt_fpath</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">quality</span><span class=\"p\">,</span> <span class=\"n\">img_dpath</span><span class=\"p\">,</span> <span class=\"n\">ignore_list</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">gname</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">oxsty_annot_info_sublist</span><span class=\"p\">:</span>\n                <span class=\"n\">query_annot_rows</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">gname</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">))</span>\n\n        <span class=\"n\">query_df2</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">query_annot_rows</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;gname&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bbox&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num&#39;</span><span class=\"p\">])</span>\n\n        <span class=\"c1\"># Fix query bounding boxes</span>\n        <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">)</span>\n        <span class=\"n\">qaids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">filter_annots_general</span><span class=\"p\">(</span><span class=\"n\">has_any</span><span class=\"o\">=</span><span class=\"s1\">&#39;query&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">qannots</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">annots</span><span class=\"p\">(</span><span class=\"n\">qaids</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Ensure query_df2 are aligned with database qannots</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n        <span class=\"n\">qannot_basename</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_uris_original</span><span class=\"p\">(</span><span class=\"n\">qannots</span><span class=\"o\">.</span><span class=\"n\">gids</span><span class=\"p\">)]</span>\n        <span class=\"n\">imgname_to_idx</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">make_index_lookup</span><span class=\"p\">(</span><span class=\"n\">qannot_basename</span><span class=\"p\">)</span>\n        <span class=\"n\">sortx1</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">imgname_to_idx</span><span class=\"p\">,</span> <span class=\"n\">query_df2</span><span class=\"p\">[</span><span class=\"s1\">&#39;gname&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">)</span>\n        <span class=\"n\">query_df3</span> <span class=\"o\">=</span> <span class=\"n\">query_df2</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argsort</span><span class=\"p\">(</span><span class=\"n\">sortx1</span><span class=\"p\">))</span>\n\n        <span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">qannots</span><span class=\"o\">.</span><span class=\"n\">names</span> <span class=\"o\">==</span> <span class=\"n\">query_df3</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Sort by name</span>\n        <span class=\"n\">unique_names</span><span class=\"p\">,</span> <span class=\"n\">groupxs</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">group_indices</span><span class=\"p\">(</span><span class=\"n\">qannots</span><span class=\"o\">.</span><span class=\"n\">names</span><span class=\"p\">)</span>\n        <span class=\"n\">sortx2</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">groupxs</span><span class=\"p\">)</span>\n        <span class=\"n\">qannots4</span> <span class=\"o\">=</span> <span class=\"n\">qannots</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">sortx2</span><span class=\"p\">)</span>\n        <span class=\"n\">query_df4</span> <span class=\"o\">=</span> <span class=\"n\">query_df3</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">sortx2</span><span class=\"p\">)</span>\n\n        <span class=\"n\">old_bboxes</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">qannots4</span><span class=\"o\">.</span><span class=\"n\">bboxes</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">)</span>\n        <span class=\"n\">new_bboxes</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">query_df4</span><span class=\"p\">[</span><span class=\"s1\">&#39;bbox&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">(),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">)</span>\n        <span class=\"n\">new_ar</span> <span class=\"o\">=</span> <span class=\"n\">new_bboxes</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">new_bboxes</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n        <span class=\"n\">old_ar</span> <span class=\"o\">=</span> <span class=\"n\">old_bboxes</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">old_bboxes</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">new_ar</span> <span class=\"o\">==</span> <span class=\"n\">old_ar</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">new_ar</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">old_ar</span><span class=\"p\">)</span>\n\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_bboxes</span><span class=\"p\">(</span><span class=\"n\">qannots4</span><span class=\"o\">.</span><span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">new_bboxes</span><span class=\"p\">)</span>\n\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">images</span><span class=\"p\">(</span><span class=\"n\">qannots4</span><span class=\"o\">.</span><span class=\"n\">gids</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">append_to_imageset</span><span class=\"p\">(</span><span class=\"s1\">&#39;Queries&#39;</span><span class=\"p\">)</span></div>\n\n\n<span class=\"c1\"># def ingest_pascal_voc_style_db(dbdir, dryrun=False):</span>\n<span class=\"c1\">#     pass</span>\n\n\n<div class=\"viewcode-block\" id=\"ingest_coco_style_db\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_coco_style_db\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">ingest_coco_style_db</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Ingest a PASCAL VOC formatted datbase</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        dbdir (str):</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --exec-ingest_coco_style_db --show</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.dbio.ingest_database import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; dbdir = &#39;/Datasets/coco&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; dryrun = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; ingest_coco_style_db(dbdir)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.quit_if_noshow()</span>\n<span class=\"sd\">        &gt;&gt;&gt; import plottool as pt</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.show_if_requested()</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">simplejson</span> <span class=\"k\">as</span> <span class=\"nn\">json</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Loading PASCAL VOC Style Images from: &#39;</span> <span class=\"o\">+</span> <span class=\"n\">dbdir</span><span class=\"p\">)</span>\n\n    <span class=\"n\">annot_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annotations&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">annot_path</span><span class=\"p\">)</span>\n\n    <span class=\"n\">dataset_name_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;test2014&#39;</span><span class=\"p\">,</span>  <span class=\"c1\"># THIS SHOULD BE FIRST</span>\n        <span class=\"s1\">&#39;test2015&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;train2014&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;val2014&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"n\">test2014_seen_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">([])</span>\n    <span class=\"n\">cat_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"n\">lic_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"n\">image_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"k\">for</span> <span class=\"n\">dataset_name</span> <span class=\"ow\">in</span> <span class=\"n\">dataset_name_list</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Processing Dataset </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">,</span> <span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">Loading Instances JSON...&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">inst_filepath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">annot_path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;instances_</span><span class=\"si\">%s</span><span class=\"s1\">.json&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">,</span> <span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">inst_filepath</span><span class=\"p\">):</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">inst_filepath</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">inst_file</span><span class=\"p\">:</span>\n                <span class=\"n\">inst_dict</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">inst_file</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">inst_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">Loading Captions JSON...&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">capt_filepath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">annot_path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;captions_</span><span class=\"si\">%s</span><span class=\"s1\">.json&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">,</span> <span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">capt_filepath</span><span class=\"p\">):</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">capt_filepath</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">capt_file</span><span class=\"p\">:</span>\n                <span class=\"n\">capt_dict</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">capt_file</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">capt_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">Loading Info JSON...&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">info_filepath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">annot_path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;image_info_</span><span class=\"si\">%s</span><span class=\"s1\">.json&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">,</span> <span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">info_filepath</span><span class=\"p\">):</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">info_filepath</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">info_file</span><span class=\"p\">:</span>\n                <span class=\"n\">info_dict</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">info_file</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">info_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">dataset_name</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;test2014&#39;</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">Associate Test 2014&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">image_list</span> <span class=\"o\">=</span> <span class=\"n\">inst_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;images&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span> <span class=\"o\">+</span> \\\n                         <span class=\"n\">capt_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;images&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span> <span class=\"o\">+</span> \\\n                         <span class=\"n\">info_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;images&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n            <span class=\"n\">id_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"k\">for</span> <span class=\"n\">image</span> <span class=\"ow\">in</span> <span class=\"n\">image_list</span><span class=\"p\">:</span>\n                <span class=\"n\">image_id</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">]</span>\n                <span class=\"n\">test2014_seen_set</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">image_id</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># Skip remaining processing to prevent duplicates</span>\n            <span class=\"k\">continue</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">Loading Licenses JSON...&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">lic_list</span> <span class=\"o\">=</span> <span class=\"n\">inst_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;licenses&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span> <span class=\"o\">+</span> \\\n                   <span class=\"n\">capt_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;licenses&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span> <span class=\"o\">+</span> \\\n                   <span class=\"n\">info_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;licenses&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n        <span class=\"k\">for</span> <span class=\"n\">lic</span> <span class=\"ow\">in</span> <span class=\"n\">lic_list</span><span class=\"p\">:</span>\n            <span class=\"n\">lic_name</span> <span class=\"o\">=</span> <span class=\"n\">lic</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">lic_url</span> <span class=\"o\">=</span> <span class=\"n\">lic</span><span class=\"p\">[</span><span class=\"s1\">&#39;url&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">lic_id</span> <span class=\"o\">=</span> <span class=\"n\">lic</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">lic_dict_</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;name&#39;</span><span class=\"p\">:</span>  <span class=\"n\">lic_name</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;url&#39;</span><span class=\"p\">:</span> <span class=\"n\">lic_url</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">if</span> <span class=\"n\">lic_id</span> <span class=\"ow\">in</span> <span class=\"n\">lic_dict</span><span class=\"p\">:</span>\n                <span class=\"k\">assert</span> <span class=\"n\">lic_dict</span><span class=\"p\">[</span><span class=\"n\">lic_id</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">lic_dict_</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">lic_dict</span><span class=\"p\">[</span><span class=\"n\">lic_id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">lic_dict_</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">Loading Categories JSON...&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">cat_list</span> <span class=\"o\">=</span> <span class=\"n\">inst_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;categories&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span> <span class=\"o\">+</span> \\\n                   <span class=\"n\">capt_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;categories&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span> <span class=\"o\">+</span> \\\n                   <span class=\"n\">info_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;categories&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n        <span class=\"k\">for</span> <span class=\"n\">cat</span> <span class=\"ow\">in</span> <span class=\"n\">cat_list</span><span class=\"p\">:</span>\n            <span class=\"n\">cat_name</span> <span class=\"o\">=</span> <span class=\"n\">cat</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">cat_super</span> <span class=\"o\">=</span> <span class=\"n\">cat</span><span class=\"p\">[</span><span class=\"s1\">&#39;supercategory&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">cat_id</span> <span class=\"o\">=</span> <span class=\"n\">cat</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">cat_dict_</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;name&#39;</span>  <span class=\"p\">:</span> <span class=\"n\">cat_name</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;super&#39;</span> <span class=\"p\">:</span> <span class=\"n\">cat_super</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">if</span> <span class=\"n\">cat_id</span> <span class=\"ow\">in</span> <span class=\"n\">cat_dict</span><span class=\"p\">:</span>\n                <span class=\"k\">assert</span> <span class=\"n\">cat_dict</span><span class=\"p\">[</span><span class=\"n\">cat_id</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">cat_dict_</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">cat_dict</span><span class=\"p\">[</span><span class=\"n\">cat_id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">cat_dict_</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">Loading Images...&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">image_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">,</span> <span class=\"n\">dataset_name</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">image_path</span><span class=\"p\">)</span>\n\n        <span class=\"n\">image_filepath_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">list_images</span><span class=\"p\">(</span><span class=\"n\">image_path</span><span class=\"p\">,</span> <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">full</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">image_filepath</span> <span class=\"ow\">in</span> <span class=\"n\">image_filepath_list</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">image_filepath</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">image_dict</span><span class=\"p\">:</span>\n                <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filepath</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">Associate Images&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">image_list</span> <span class=\"o\">=</span> <span class=\"n\">inst_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;images&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span> <span class=\"o\">+</span> \\\n                     <span class=\"n\">capt_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;images&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span> <span class=\"o\">+</span> \\\n                     <span class=\"n\">info_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;images&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n        <span class=\"n\">id_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">image</span> <span class=\"ow\">in</span> <span class=\"n\">image_list</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Get file name</span>\n            <span class=\"n\">image_filename</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">&#39;file_name&#39;</span><span class=\"p\">]</span>\n            <span class=\"k\">assert</span> <span class=\"n\">image_filename</span> <span class=\"ow\">in</span> <span class=\"n\">image_dict</span>\n            <span class=\"c1\"># Get file ID</span>\n            <span class=\"n\">image_id</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">image_id</span> <span class=\"ow\">in</span> <span class=\"n\">id_dict</span><span class=\"p\">:</span>\n                <span class=\"k\">assert</span> <span class=\"n\">id_dict</span><span class=\"p\">[</span><span class=\"n\">image_id</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">image_filename</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">id_dict</span><span class=\"p\">[</span><span class=\"n\">image_id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">image_filename</span>\n            <span class=\"c1\"># Add dataset name</span>\n            <span class=\"k\">if</span> <span class=\"s1\">&#39;datasets&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">]:</span>\n                <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">][</span><span class=\"s1\">&#39;datasets&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">([])</span>\n            <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">][</span><span class=\"s1\">&#39;datasets&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">)</span>\n            <span class=\"c1\"># Add test2014, if needed</span>\n            <span class=\"k\">if</span> <span class=\"n\">dataset_name</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;test2015&#39;</span> <span class=\"ow\">and</span> <span class=\"n\">image_id</span> <span class=\"ow\">in</span> <span class=\"n\">test2014_seen_set</span><span class=\"p\">:</span>\n                <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">][</span><span class=\"s1\">&#39;datasets&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s1\">&#39;test2014&#39;</span><span class=\"p\">)</span>\n            <span class=\"c1\"># Get image&#39;s filepath</span>\n            <span class=\"n\">image_filepath</span> <span class=\"o\">=</span> <span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">image_path</span><span class=\"p\">,</span> <span class=\"n\">image_filename</span><span class=\"p\">))</span>\n            <span class=\"k\">if</span> <span class=\"s1\">&#39;filepath&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">]:</span>\n                <span class=\"k\">assert</span> <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">][</span><span class=\"s1\">&#39;filepath&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">image_filepath</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">][</span><span class=\"s1\">&#39;filepath&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">image_filepath</span>\n            <span class=\"c1\"># Get keys</span>\n            <span class=\"n\">key_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"s1\">&#39;date_captured&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;coco_url&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;license&#39;</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">key_list</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">]:</span>\n                    <span class=\"k\">assert</span> <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">][</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">][</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">Associate Captions&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">caption</span> <span class=\"ow\">in</span> <span class=\"n\">capt_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;annotations&#39;</span><span class=\"p\">,</span> <span class=\"p\">[]):</span>\n            <span class=\"n\">capt_id</span> <span class=\"o\">=</span> <span class=\"n\">caption</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">capt_str</span> <span class=\"o\">=</span> <span class=\"n\">caption</span><span class=\"p\">[</span><span class=\"s1\">&#39;caption&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">image_id</span> <span class=\"o\">=</span> <span class=\"n\">caption</span><span class=\"p\">[</span><span class=\"s1\">&#39;image_id&#39;</span><span class=\"p\">]</span>\n            <span class=\"k\">assert</span> <span class=\"n\">image_id</span> <span class=\"ow\">in</span> <span class=\"n\">id_dict</span>\n            <span class=\"n\">image_filename</span> <span class=\"o\">=</span> <span class=\"n\">id_dict</span><span class=\"p\">[</span><span class=\"n\">image_id</span><span class=\"p\">]</span>\n            <span class=\"k\">assert</span> <span class=\"n\">image_filename</span> <span class=\"ow\">in</span> <span class=\"n\">image_dict</span>\n            <span class=\"k\">if</span> <span class=\"s1\">&#39;caption&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">]:</span>\n                <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">][</span><span class=\"s1\">&#39;captions&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">][</span><span class=\"s1\">&#39;captions&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                <span class=\"s1\">&#39;id&#39;</span>  <span class=\"p\">:</span> <span class=\"n\">capt_id</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;str&#39;</span> <span class=\"p\">:</span> <span class=\"n\">capt_str</span><span class=\"p\">,</span>\n            <span class=\"p\">})</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">Associate Annotations&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">annotation</span> <span class=\"ow\">in</span> <span class=\"n\">inst_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;annotations&#39;</span><span class=\"p\">,</span> <span class=\"p\">[]):</span>\n            <span class=\"n\">annot_id</span> <span class=\"o\">=</span> <span class=\"n\">annotation</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">annot_bbox</span> <span class=\"o\">=</span> <span class=\"n\">annotation</span><span class=\"p\">[</span><span class=\"s1\">&#39;bbox&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">annot_seg_list</span> <span class=\"o\">=</span> <span class=\"n\">annotation</span><span class=\"p\">[</span><span class=\"s1\">&#39;segmentation&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">annot_verts_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">annot_seg</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">annot_seg_list</span><span class=\"p\">):</span>\n                <span class=\"n\">annot_vert_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">annot_seg</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">):</span>\n                    <span class=\"n\">annot_vert_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                        <span class=\"p\">(</span><span class=\"n\">annot_seg</span><span class=\"p\">[</span><span class=\"n\">index</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">annot_seg</span><span class=\"p\">[</span><span class=\"n\">index</span> <span class=\"o\">*</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">)</span>\n                    <span class=\"p\">)</span>\n\n                <span class=\"n\">annot_verts_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">annot_vert_list</span><span class=\"p\">)</span>\n            <span class=\"n\">annot_cat</span> <span class=\"o\">=</span> <span class=\"n\">annotation</span><span class=\"p\">[</span><span class=\"s1\">&#39;category_id&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">image_id</span> <span class=\"o\">=</span> <span class=\"n\">annotation</span><span class=\"p\">[</span><span class=\"s1\">&#39;image_id&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">annot_iscrowd</span> <span class=\"o\">=</span> <span class=\"n\">annotation</span><span class=\"p\">[</span><span class=\"s1\">&#39;iscrowd&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n            <span class=\"k\">assert</span> <span class=\"n\">image_id</span> <span class=\"ow\">in</span> <span class=\"n\">id_dict</span>\n            <span class=\"n\">image_filename</span> <span class=\"o\">=</span> <span class=\"n\">id_dict</span><span class=\"p\">[</span><span class=\"n\">image_id</span><span class=\"p\">]</span>\n            <span class=\"k\">assert</span> <span class=\"n\">image_filename</span> <span class=\"ow\">in</span> <span class=\"n\">image_dict</span>\n            <span class=\"k\">if</span> <span class=\"s1\">&#39;annotations&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">]:</span>\n                <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">][</span><span class=\"s1\">&#39;annotations&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">][</span><span class=\"s1\">&#39;annotations&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                <span class=\"s1\">&#39;id&#39;</span><span class=\"p\">:</span> <span class=\"n\">annot_id</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;bbox&#39;</span><span class=\"p\">:</span> <span class=\"n\">annot_bbox</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;segmentations&#39;</span><span class=\"p\">:</span> <span class=\"n\">annot_verts_list</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;category&#39;</span><span class=\"p\">:</span> <span class=\"n\">annot_cat</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;crowd&#39;</span><span class=\"p\">:</span> <span class=\"n\">annot_iscrowd</span><span class=\"p\">,</span>\n            <span class=\"p\">})</span>\n\n    <span class=\"n\">image_filename_list</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">image_dict</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n    <span class=\"n\">image_filepath_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">image_original_url_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">image_unixtime_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">image_metadata_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">image_imagesets_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">image_annot_bbox_list_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">image_annot_species_list_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">image_annot_metadata_list_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">image_filename</span> <span class=\"ow\">in</span> <span class=\"n\">image_filename_list</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Processing: </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">image_filename</span><span class=\"p\">,</span> <span class=\"p\">))</span>\n        <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">image_dict</span><span class=\"p\">[</span><span class=\"n\">image_filename</span><span class=\"p\">]</span>\n        <span class=\"n\">image_filepath_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">&#39;filepath&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">image_original_url_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">&#39;coco_url&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">image_datetime</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">strptime</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">&#39;date_captured&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">image_unixtime</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">image_datetime</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span><span class=\"p\">))</span>\n        <span class=\"n\">image_unixtime_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">image_unixtime</span><span class=\"p\">)</span>\n        <span class=\"n\">image_dataset_list</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">&#39;datasets&#39;</span><span class=\"p\">]))</span>\n        <span class=\"n\">image_metadata_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;coco&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;dates&#39;</span>    <span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;captured&#39;</span> <span class=\"p\">:</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">&#39;date_captured&#39;</span><span class=\"p\">]},</span>\n                <span class=\"s1\">&#39;datasets&#39;</span> <span class=\"p\">:</span> <span class=\"n\">image_dataset_list</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;license&#39;</span>  <span class=\"p\">:</span> <span class=\"n\">lic_dict</span><span class=\"p\">[</span><span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">&#39;license&#39;</span><span class=\"p\">]],</span>\n                <span class=\"s1\">&#39;captions&#39;</span> <span class=\"p\">:</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;captions&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n                <span class=\"s1\">&#39;flickr&#39;</span>   <span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;url&#39;</span> <span class=\"p\">:</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;flickr_url&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)},</span>\n                <span class=\"s1\">&#39;url&#39;</span>      <span class=\"p\">:</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">&#39;coco_url&#39;</span><span class=\"p\">],</span>\n                <span class=\"s1\">&#39;id&#39;</span>       <span class=\"p\">:</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">],</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">image_metadata_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">image_metadata_dict</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Get the Imagesets for the datasets</span>\n        <span class=\"n\">image_imageset_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s1\">&#39;DATASET: </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">image_dataset</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">image_dataset</span> <span class=\"ow\">in</span> <span class=\"n\">image_dataset_list</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image_imageset_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">image_imageset_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">&#39;DATASET: UNSPECIFIED&#39;</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Get the Imagesets for the annotations</span>\n        <span class=\"n\">image_category_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">([])</span>\n        <span class=\"n\">image_super_category_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">([])</span>\n        <span class=\"n\">image_annot_bbox_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">image_annot_species_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">image_annot_metadata_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">annotation</span> <span class=\"ow\">in</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;annotations&#39;</span><span class=\"p\">,</span> <span class=\"p\">[]):</span>\n            <span class=\"n\">cat</span> <span class=\"o\">=</span> <span class=\"n\">cat_dict</span><span class=\"p\">[</span><span class=\"n\">annotation</span><span class=\"p\">[</span><span class=\"s1\">&#39;category&#39;</span><span class=\"p\">]]</span>\n            <span class=\"n\">image_annot_bbox_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">annotation</span><span class=\"p\">[</span><span class=\"s1\">&#39;bbox&#39;</span><span class=\"p\">])</span>\n            <span class=\"n\">image_annot_species_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">cat</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">])</span>\n            <span class=\"n\">image_annot_metadata_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;coco&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;id&#39;</span> <span class=\"p\">:</span> <span class=\"n\">annotation</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">],</span>\n                    <span class=\"s1\">&#39;segmentations&#39;</span><span class=\"p\">:</span> <span class=\"n\">annotation</span><span class=\"p\">[</span><span class=\"s1\">&#39;segmentations&#39;</span><span class=\"p\">],</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">image_annot_metadata_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">image_annot_metadata_dict</span><span class=\"p\">)</span>\n            <span class=\"c1\"># Get categories</span>\n            <span class=\"n\">image_category_set</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">cat</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">])</span>\n            <span class=\"k\">if</span> <span class=\"n\">annotation</span><span class=\"p\">[</span><span class=\"s1\">&#39;crowd&#39;</span><span class=\"p\">]:</span>\n                <span class=\"n\">image_category_set</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s1\">&#39;crowd&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">image_super_category_set</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">cat</span><span class=\"p\">[</span><span class=\"s1\">&#39;super&#39;</span><span class=\"p\">])</span>\n\n        <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image_annot_bbox_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image_annot_species_list</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image_annot_species_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image_annot_metadata_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_annot_bbox_list_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">image_annot_bbox_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_annot_species_list_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">image_annot_species_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_annot_metadata_list_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">image_annot_metadata_list</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Add categories</span>\n        <span class=\"n\">image_imageset_list</span> <span class=\"o\">+=</span> <span class=\"p\">[</span>\n            <span class=\"s1\">&#39;CATEGORY: </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">image_category</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">image_category</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">image_category_set</span><span class=\"p\">))</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">image_imageset_list</span> <span class=\"o\">+=</span> <span class=\"p\">[</span>\n            <span class=\"s1\">&#39;SUPER CATEGORY: </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">image_super_category</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">image_super_category</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">image_super_category_set</span><span class=\"p\">))</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">image_imagesets_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">image_imageset_list</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">,</span> <span class=\"n\">allow_newdir</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Add images to the database</span>\n        <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_images</span><span class=\"p\">(</span><span class=\"n\">image_filepath_list</span><span class=\"p\">)</span>\n\n        <span class=\"n\">seen_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">([])</span>\n        <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">gid</span> <span class=\"ow\">in</span> <span class=\"n\">gid_list</span><span class=\"p\">:</span>\n            <span class=\"n\">flag_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">gid</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">seen_set</span><span class=\"p\">)</span>\n            <span class=\"n\">seen_set</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">gid</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Duplicates: </span><span class=\"si\">%d</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">flag_list</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">),</span> <span class=\"p\">))</span>\n        <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Filter</span>\n        <span class=\"n\">image_filepath_list</span>            <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">image_filepath_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_original_url_list</span>        <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">image_original_url_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_unixtime_list</span>            <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">image_unixtime_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_metadata_list</span>            <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">image_metadata_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_imagesets_list</span>           <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">image_imagesets_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_annot_bbox_list_list</span>     <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">image_annot_bbox_list_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_annot_species_list_list</span>  <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">image_annot_species_list_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_annot_metadata_list_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">image_annot_metadata_list_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Adding Metadata&#39;</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Set image metadata</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_image_uris_original</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">image_original_url_list</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_image_unixtime</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">image_unixtime_list</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_image_metadata</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">image_metadata_list</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Add images to imagesets</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Adding Imagesets&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">len_list</span> <span class=\"o\">=</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"n\">image_imagesets_list</span><span class=\"p\">)</span>\n        <span class=\"n\">gids_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"p\">[</span><span class=\"n\">gid</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">len_</span> <span class=\"k\">for</span> <span class=\"n\">gid</span><span class=\"p\">,</span> <span class=\"n\">len_</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">len_list</span><span class=\"p\">)]</span>\n        <span class=\"n\">gid_list_</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">gids_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_imageset_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">image_imagesets_list</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_image_imagesettext</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">,</span> <span class=\"n\">image_imageset_list</span><span class=\"p\">)</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Adding Annotations&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">len_list</span> <span class=\"o\">=</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"n\">image_annot_bbox_list_list</span><span class=\"p\">)</span>\n        <span class=\"n\">gids_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"p\">[</span><span class=\"n\">gid</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">len_</span> <span class=\"k\">for</span> <span class=\"n\">gid</span><span class=\"p\">,</span> <span class=\"n\">len_</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">len_list</span><span class=\"p\">)]</span>\n        <span class=\"n\">gid_list_</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">gids_list</span><span class=\"p\">)</span>\n\n        <span class=\"n\">image_annot_bbox_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">image_annot_bbox_list_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_annot_species_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">image_annot_species_list_list</span><span class=\"p\">)</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_annots</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">,</span> <span class=\"n\">image_annot_bbox_list</span><span class=\"p\">,</span>\n                                  <span class=\"n\">species_list</span><span class=\"o\">=</span><span class=\"n\">image_annot_species_list</span><span class=\"p\">)</span>\n\n        <span class=\"n\">seen_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">([])</span>\n        <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">:</span>\n            <span class=\"n\">flag_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">aid</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">seen_set</span><span class=\"p\">)</span>\n            <span class=\"n\">seen_set</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">aid</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Duplicates: </span><span class=\"si\">%d</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">flag_list</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">),</span> <span class=\"p\">))</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Adding Metadata&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">image_annot_metadata_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">image_annot_metadata_list_list</span><span class=\"p\">)</span>\n        <span class=\"n\">image_annot_metadata_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">image_annot_metadata_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_metadata</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">image_annot_metadata_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ingest_serengeti_mamal_cameratrap\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.ingest_serengeti_mamal_cameratrap\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">ingest_serengeti_mamal_cameratrap</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Downloads data from Serengeti dryad server</span>\n\n<span class=\"sd\">    References:</span>\n<span class=\"sd\">        http://datadryad.org/resource/doi:10.5061/dryad.5pt92</span>\n<span class=\"sd\">        Swanson AB, Kosmala M, Lintott CJ, Simpson RJ, Smith A, Packer C (2015)</span>\n<span class=\"sd\">        Snapshot Serengeti, high-frequency annotated camera trap images of 40</span>\n<span class=\"sd\">        mammalian species in an African savanna. Scientific Data 2: 150026.</span>\n<span class=\"sd\">        http://dx.doi.org/10.1038/sdata.2015.26</span>\n<span class=\"sd\">        Swanson AB, Kosmala M, Lintott CJ, Simpson RJ, Smith A, Packer C (2015)</span>\n<span class=\"sd\">        Data from: Snapshot Serengeti, high-frequency annotated camera trap</span>\n<span class=\"sd\">        images of 40 mammalian species in an African savanna. Dryad Digital</span>\n<span class=\"sd\">        Repository. http://dx.doi.org/10.5061/dryad.5pt92</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        species (?):</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --test-ingest_serengeti_mamal_cameratrap --species zebra_plains</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --test-ingest_serengeti_mamal_cameratrap --species cheetah</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # SCRIPT</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.dbio.ingest_database import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; species = ut.get_argval(&#39;--species&#39;, type_=str, default=ibeis.const.TEST_SPECIES.ZEB_PLAIN)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # species = ut.get_argval(&#39;--species&#39;, type_=str, default=&#39;cheetah&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ingest_serengeti_mamal_cameratrap(species)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"s1\">&#39;https://snapshotserengeti.s3.msi.umn.edu/&#39;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">species</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ALL&#39;</span>\n    <span class=\"k\">elif</span> <span class=\"n\">species</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;zebra_plains&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;PZ&#39;</span>\n    <span class=\"k\">elif</span> <span class=\"n\">species</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;cheetah&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CHTH&#39;</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">species</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;zebra_plains&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">serengeti_sepcies</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;zebra&#39;</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">serengeti_sepcies</span> <span class=\"o\">=</span> <span class=\"n\">species</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;species = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">species</span><span class=\"p\">,))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;serengeti_sepcies = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">serengeti_sepcies</span><span class=\"p\">,))</span>\n\n    <span class=\"n\">dbname</span> <span class=\"o\">=</span> <span class=\"n\">code</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;_Serengeti&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;dbname = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,))</span>\n    <span class=\"n\">dbdir</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">get_workdir</span><span class=\"p\">(),</span> <span class=\"n\">dbname</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;dbdir = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">,))</span>\n    <span class=\"n\">image_dir</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;images&#39;</span><span class=\"p\">))</span>\n\n    <span class=\"n\">base_url</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://datadryad.org/bitstream/handle/10255&#39;</span>\n    <span class=\"n\">all_images_url</span>         <span class=\"o\">=</span> <span class=\"n\">base_url</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/dryad.86392/all_images.csv&#39;</span>\n    <span class=\"n\">consensus_metadata_url</span> <span class=\"o\">=</span> <span class=\"n\">base_url</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/dryad.86348/consensus_data.csv&#39;</span>\n    <span class=\"n\">search_effort_url</span>      <span class=\"o\">=</span> <span class=\"n\">base_url</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/dryad.86347/search_effort.csv&#39;</span>\n    <span class=\"n\">gold_standard_url</span>      <span class=\"o\">=</span> <span class=\"n\">base_url</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/dryad.76010/gold_standard_data.csv&#39;</span>\n\n    <span class=\"n\">all_images_fpath</span>         <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">grab_file_url</span><span class=\"p\">(</span><span class=\"n\">all_images_url</span><span class=\"p\">,</span> <span class=\"n\">download_dir</span><span class=\"o\">=</span><span class=\"n\">dbdir</span><span class=\"p\">)</span>\n    <span class=\"n\">consensus_metadata_fpath</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">grab_file_url</span><span class=\"p\">(</span><span class=\"n\">consensus_metadata_url</span><span class=\"p\">,</span> <span class=\"n\">download_dir</span><span class=\"o\">=</span><span class=\"n\">dbdir</span><span class=\"p\">)</span>\n    <span class=\"n\">search_effort_fpath</span>      <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">grab_file_url</span><span class=\"p\">(</span><span class=\"n\">search_effort_url</span><span class=\"p\">,</span> <span class=\"n\">download_dir</span><span class=\"o\">=</span><span class=\"n\">dbdir</span><span class=\"p\">)</span>\n    <span class=\"n\">gold_standard_fpath</span>      <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">grab_file_url</span><span class=\"p\">(</span><span class=\"n\">gold_standard_url</span><span class=\"p\">,</span> <span class=\"n\">download_dir</span><span class=\"o\">=</span><span class=\"n\">dbdir</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;all_images_fpath         = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">all_images_fpath</span><span class=\"p\">,))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;consensus_metadata_fpath = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">consensus_metadata_fpath</span><span class=\"p\">,))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;search_effort_fpath      = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">search_effort_fpath</span><span class=\"p\">,))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;gold_standard_fpath      = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">gold_standard_fpath</span><span class=\"p\">,))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">read_csv</span><span class=\"p\">(</span><span class=\"n\">csv_fpath</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n        <span class=\"n\">csv_text</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">read_from</span><span class=\"p\">(</span><span class=\"n\">csv_fpath</span><span class=\"p\">)</span>\n        <span class=\"n\">csv_lines</span> <span class=\"o\">=</span> <span class=\"n\">csv_text</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">csv_lines</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">]))</span>\n        <span class=\"n\">csv_data</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\r</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">)]</span>\n                    <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">csv_lines</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">csv_header</span> <span class=\"o\">=</span> <span class=\"n\">csv_data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">csv_data</span> <span class=\"o\">=</span> <span class=\"n\">csv_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n        <span class=\"k\">return</span> <span class=\"n\">csv_data</span><span class=\"p\">,</span> <span class=\"n\">csv_header</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">download_image_urls</span><span class=\"p\">(</span><span class=\"n\">image_url_info_list</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Find ones that we already have</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Requested </span><span class=\"si\">%d</span><span class=\"s1\"> downloaded images&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image_url_info_list</span><span class=\"p\">)))</span>\n        <span class=\"n\">full_gpath_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">image_dir</span><span class=\"p\">,</span> <span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">gpath</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">gpath</span> <span class=\"ow\">in</span> <span class=\"n\">image_url_info_list</span><span class=\"p\">]</span>\n        <span class=\"n\">exists_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">checkpath</span><span class=\"p\">(</span><span class=\"n\">gpath</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">gpath</span> <span class=\"ow\">in</span> <span class=\"n\">full_gpath_list</span><span class=\"p\">]</span>\n        <span class=\"n\">image_url_info_list_</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">image_url_info_list</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">not_list</span><span class=\"p\">(</span><span class=\"n\">exists_list</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Already have </span><span class=\"si\">%d</span><span class=\"s1\">/</span><span class=\"si\">%d</span><span class=\"s1\"> downloaded images&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n            <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image_url_info_list</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image_url_info_list_</span><span class=\"p\">),</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image_url_info_list</span><span class=\"p\">)))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Need to download </span><span class=\"si\">%d</span><span class=\"s1\"> images&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image_url_info_list_</span><span class=\"p\">)))</span>\n        <span class=\"c1\">#import sys</span>\n        <span class=\"c1\">#sys.exit(0)</span>\n        <span class=\"c1\"># Download the rest</span>\n        <span class=\"n\">imgurl_prefix</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;https://snapshotserengeti.s3.msi.umn.edu/&#39;</span>\n        <span class=\"n\">image_url_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">imgurl_prefix</span> <span class=\"o\">+</span> <span class=\"n\">suffix</span> <span class=\"k\">for</span> <span class=\"n\">suffix</span> <span class=\"ow\">in</span> <span class=\"n\">image_url_info_list_</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">img_url</span> <span class=\"ow\">in</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ProgressIter</span><span class=\"p\">(</span><span class=\"n\">image_url_list</span><span class=\"p\">,</span> <span class=\"n\">lbl</span><span class=\"o\">=</span><span class=\"s1\">&#39;Downloading image&#39;</span><span class=\"p\">):</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">grab_file_url</span><span class=\"p\">(</span><span class=\"n\">img_url</span><span class=\"p\">,</span> <span class=\"n\">download_dir</span><span class=\"o\">=</span><span class=\"n\">image_dir</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">full_gpath_list</span>\n\n    <span class=\"c1\"># Data contains information about which events have which animals</span>\n    <span class=\"k\">if</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"n\">species_class_csv_data</span><span class=\"p\">,</span> <span class=\"n\">species_class_header</span> <span class=\"o\">=</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">gold_standard_fpath</span><span class=\"p\">)</span>\n        <span class=\"n\">species_class_eventid_list</span>    <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_list_column</span><span class=\"p\">(</span><span class=\"n\">species_class_csv_data</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"c1\">#gold_num_species_annots_list = ut.get_list_column(gold_standard_csv_data, 2)</span>\n        <span class=\"n\">species_class_species_list</span>    <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_list_column</span><span class=\"p\">(</span><span class=\"n\">species_class_csv_data</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"c1\">#gold_count_list              = ut.get_list_column(gold_standard_csv_data, 3)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">species_class_csv_data</span><span class=\"p\">,</span> <span class=\"n\">species_class_header</span> <span class=\"o\">=</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">consensus_metadata_fpath</span><span class=\"p\">)</span>\n        <span class=\"n\">species_class_eventid_list</span>    <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_list_column</span><span class=\"p\">(</span><span class=\"n\">species_class_csv_data</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">species_class_species_list</span>    <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_list_column</span><span class=\"p\">(</span><span class=\"n\">species_class_csv_data</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Find the zebra events</span>\n    <span class=\"n\">serengeti_sepcies_set</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">species_class_species_list</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;serengeti_sepcies_hist = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span>\n          <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_hist</span><span class=\"p\">(</span><span class=\"n\">species_class_species_list</span><span class=\"p\">),</span> <span class=\"n\">key_order_metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;val&#39;</span><span class=\"p\">))</span>\n    <span class=\"c1\">#print(&#39;serengeti_sepcies_set = %s&#39; % (ut.repr2(serengeti_sepcies_set),))</span>\n\n    <span class=\"k\">assert</span> <span class=\"n\">serengeti_sepcies</span> <span class=\"ow\">in</span> <span class=\"n\">serengeti_sepcies_set</span><span class=\"p\">,</span> <span class=\"s1\">&#39;not a known  seregeti species&#39;</span>\n    <span class=\"n\">species_class_chosen_idx_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">list_where</span><span class=\"p\">(</span>\n        <span class=\"p\">[</span><span class=\"n\">serengeti_sepcies</span> <span class=\"o\">==</span> <span class=\"n\">species_</span> <span class=\"k\">for</span> <span class=\"n\">species_</span> <span class=\"ow\">in</span> <span class=\"n\">species_class_species_list</span><span class=\"p\">])</span>\n    <span class=\"n\">chosen_eventid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">species_class_eventid_list</span><span class=\"p\">,</span> <span class=\"n\">species_class_chosen_idx_list</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Number of chosen species:&#39;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39; * len(species_class_chosen_idx_list) = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">species_class_chosen_idx_list</span><span class=\"p\">),))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39; * len(chosen_eventid_list) = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">chosen_eventid_list</span><span class=\"p\">),))</span>\n\n    <span class=\"c1\"># Read info about which events have which images</span>\n    <span class=\"n\">images_csv_data</span><span class=\"p\">,</span> <span class=\"n\">image_csv_header</span> <span class=\"o\">=</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">all_images_fpath</span><span class=\"p\">)</span>\n    <span class=\"n\">capture_event_id_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_list_column</span><span class=\"p\">(</span><span class=\"n\">images_csv_data</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">image_url_info_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_list_column</span><span class=\"p\">(</span><span class=\"n\">images_csv_data</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Group photos by eventid</span>\n    <span class=\"n\">eventid_to_photos</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">group_items</span><span class=\"p\">(</span><span class=\"n\">image_url_info_list</span><span class=\"p\">,</span> <span class=\"n\">capture_event_id_list</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Filter to only chosens</span>\n    <span class=\"n\">unflat_chosen_url_infos</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">eventid_to_photos</span><span class=\"p\">,</span> <span class=\"n\">chosen_eventid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">chosen_url_infos</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">unflat_chosen_url_infos</span><span class=\"p\">)</span>\n    <span class=\"n\">image_url_info_list</span> <span class=\"o\">=</span> <span class=\"n\">chosen_url_infos</span>\n    <span class=\"n\">chosen_path_list</span> <span class=\"o\">=</span> <span class=\"n\">download_image_urls</span><span class=\"p\">(</span><span class=\"n\">chosen_url_infos</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"o\">=</span><span class=\"n\">dbdir</span><span class=\"p\">,</span> <span class=\"n\">allow_newdir</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">gid_list_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_images</span><span class=\"p\">(</span><span class=\"n\">chosen_path_list</span><span class=\"p\">,</span> <span class=\"n\">auto_localize</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>  <span class=\"c1\"># NOQA</span>\n\n    <span class=\"c1\">#if False:</span>\n    <span class=\"c1\">#    # remove non-zebra photos</span>\n    <span class=\"c1\">#    from os.path import basename</span>\n    <span class=\"c1\">#    base_gname_list = list(map(basename, zebra_url_infos))</span>\n    <span class=\"c1\">#    all_gname_list = ut.list_images(image_dir)</span>\n    <span class=\"c1\">#    nonzebra_gname_list = ut.setdiff_ordered(all_gname_list, base_gname_list)</span>\n    <span class=\"c1\">#    nonzebra_gpath_list = ut.fnames_to_fpaths(nonzebra_gname_list, image_dir)</span>\n    <span class=\"c1\">#    ut.remove_fpaths(nonzebra_gpath_list)</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span></div>\n\n\n<div class=\"viewcode-block\" id=\"injest_main\"><a class=\"viewcode-back\" href=\"../../../../ibeis.dbio/#ibeis.dbio.ingest_database.injest_main\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">injest_main</span><span class=\"p\">():</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --test-injest_main</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --test-injest_main --db snow-leopards</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.dbio.ingest_database import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; injest_main()</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;__main__ = ingest_database.py&#39;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">unindent</span><span class=\"p\">(</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">        usage:</span>\n<span class=\"sd\">        python ibeis/ingest/ingest_database.py --db [dbname]</span>\n\n<span class=\"sd\">        Valid dbnames:&#39;&#39;&#39;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">indentjoin</span><span class=\"p\">(</span><span class=\"n\">STANDARD_INGEST_FUNCS</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">  * &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">dbname</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argval</span><span class=\"p\">(</span><span class=\"s1\">&#39;--db&#39;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"n\">force_delete</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">((</span><span class=\"s1\">&#39;--force_delete&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--force-delete&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ingest_standard_database</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">,</span> <span class=\"n\">force_delete</span><span class=\"p\">)</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;finished db injest&#39;</span><span class=\"p\">)</span></div>\n    <span class=\"c1\">#img_dir = join(ibeis.sysres.get_workdir(), &#39;polar_bears&#39;)</span>\n    <span class=\"c1\">#main_locals = ibeis.main(dbdir=img_dir, gui=False)</span>\n    <span class=\"c1\">#ibs = main_locals[&#39;ibs&#39;]</span>\n    <span class=\"c1\">#ingest_rawdata(ibs, img_dir)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python ibeis/dbio/ingest_database.py --db testdb1 --serial --verbose --very-verbose</span>\n<span class=\"sd\">        python ibeis/dbio/ingest_database.py --db testdb1 --serial --verbose --very-verbose --super-strict --superstrict  # NOQA</span>\n\n\n<span class=\"sd\">        python ibeis/dbio/ingest_database.py --db JAG_Kieryn --force-delete</span>\n<span class=\"sd\">        python ibeis/dbio/ingest_database.py --db polar_bears --force_delete</span>\n<span class=\"sd\">        python ibeis/dbio/ingest_database.py --db snails_drop1</span>\n<span class=\"sd\">        python ibeis/dbio/ingest_database.py --db testdb1</span>\n<span class=\"sd\">        python -m ibeis.dbio.ingest_database --test-injest_main --db Elephants_drop1</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject_colored_exceptions</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_was_requested</span><span class=\"p\">():</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">injest_main</span><span class=\"p\">()</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># win32</span>\n</pre></div>", "current_page_name": "_modules/ibeis/dbio/ingest_database", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}