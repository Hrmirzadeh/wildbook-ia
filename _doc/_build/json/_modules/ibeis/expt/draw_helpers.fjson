{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.expt"}], "title": "ibeis.expt.draw_helpers", "body": "<h1>Source code for ibeis.expt.draw_helpers</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"k\">import</span> <span class=\"n\">join</span><span class=\"p\">,</span> <span class=\"n\">dirname</span><span class=\"p\">,</span> <span class=\"n\">split</span><span class=\"p\">,</span> <span class=\"n\">basename</span><span class=\"p\">,</span> <span class=\"n\">splitext</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">six.moves</span> <span class=\"k\">import</span> <span class=\"nb\">map</span><span class=\"p\">,</span> <span class=\"nb\">range</span>\n<span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"IndividualResultsCopyTaskQueue\"><a class=\"viewcode-back\" href=\"../../../../ibeis.expt/#ibeis.expt.draw_helpers.IndividualResultsCopyTaskQueue\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">IndividualResultsCopyTaskQueue</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cp_task_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<div class=\"viewcode-block\" id=\"IndividualResultsCopyTaskQueue.append_copy_task\"><a class=\"viewcode-back\" href=\"../../../../ibeis.expt/#ibeis.expt.draw_helpers.IndividualResultsCopyTaskQueue.append_copy_task\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">append_copy_task</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fpath_orig</span><span class=\"p\">,</span> <span class=\"n\">dstdir</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; helper which copies a summary figure to root dir &quot;&quot;&quot;</span>\n        <span class=\"n\">fname_orig</span><span class=\"p\">,</span> <span class=\"n\">ext</span> <span class=\"o\">=</span> <span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">fpath_orig</span><span class=\"p\">))</span>\n        <span class=\"n\">outdir</span> <span class=\"o\">=</span> <span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">fpath_orig</span><span class=\"p\">)</span>\n        <span class=\"n\">fdir_clean</span><span class=\"p\">,</span> <span class=\"n\">cfgdir</span> <span class=\"o\">=</span> <span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">outdir</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">dstdir</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">dstdir</span> <span class=\"o\">=</span> <span class=\"n\">fdir_clean</span>\n        <span class=\"c1\">#aug = cfgdir[0:min(len(cfgdir), 10)]</span>\n        <span class=\"n\">aug</span> <span class=\"o\">=</span> <span class=\"n\">cfgdir</span>\n        <span class=\"n\">fname_fmt</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"si\">{aug}</span><span class=\"s1\">_</span><span class=\"si\">{fname_orig}{ext}</span><span class=\"s1\">&#39;</span>\n        <span class=\"n\">fmt_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;aug&#39;</span><span class=\"p\">:</span> <span class=\"n\">aug</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fname_orig&#39;</span><span class=\"p\">:</span> <span class=\"n\">fname_orig</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ext&#39;</span><span class=\"p\">:</span> <span class=\"n\">ext</span><span class=\"p\">}</span>\n        <span class=\"n\">fname_clean</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">long_fname_format</span><span class=\"p\">(</span><span class=\"n\">fname_fmt</span><span class=\"p\">,</span> <span class=\"n\">fmt_dict</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;fname_orig&#39;</span><span class=\"p\">],</span> <span class=\"n\">max_len</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)</span>\n        <span class=\"n\">fdst_clean</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dstdir</span><span class=\"p\">,</span> <span class=\"n\">fname_clean</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cp_task_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">fpath_orig</span><span class=\"p\">,</span> <span class=\"n\">fdst_clean</span><span class=\"p\">))</span></div>\n\n<div class=\"viewcode-block\" id=\"IndividualResultsCopyTaskQueue.flush_copy_tasks\"><a class=\"viewcode-back\" href=\"../../../../ibeis.expt/#ibeis.expt.draw_helpers.IndividualResultsCopyTaskQueue.flush_copy_tasks\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">flush_copy_tasks</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Execute all copy tasks and empty the lists</span>\n        <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">NOT_QUIET</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[DRAW_RESULT] copying </span><span class=\"si\">%r</span><span class=\"s1\"> summaries&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cp_task_list</span><span class=\"p\">)))</span>\n        <span class=\"k\">for</span> <span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dst</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cp_task_list</span><span class=\"p\">:</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cp_task_list</span><span class=\"p\">[:]</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"make_individual_latex_figures\"><a class=\"viewcode-back\" href=\"../../../../ibeis.expt/#ibeis.expt.draw_helpers.make_individual_latex_figures\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">make_individual_latex_figures</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">fpaths_list</span><span class=\"p\">,</span> <span class=\"n\">flat_case_labels</span><span class=\"p\">,</span>\n                                  <span class=\"n\">cfgx2_shortlbl</span><span class=\"p\">,</span> <span class=\"n\">case_figdir</span><span class=\"p\">,</span>\n                                  <span class=\"n\">analysis_fpath_list</span><span class=\"p\">):</span>\n    <span class=\"c1\"># HACK MAKE LATEX CONVINENCE STUFF</span>\n    <span class=\"c1\">#print(&#39;LATEX HACK&#39;)</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fpaths_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;nothing to render&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span>\n    <span class=\"n\">RENDER</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--render&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">DUMP_FIGDEF</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">((</span><span class=\"s1\">&#39;--figdump&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--dump-figdef&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--figdef&#39;</span><span class=\"p\">))</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"n\">DUMP_FIGDEF</span> <span class=\"ow\">or</span> <span class=\"n\">RENDER</span><span class=\"p\">):</span>  <span class=\"c1\"># HACK</span>\n        <span class=\"k\">return</span>\n\n    <span class=\"n\">latex_code_blocks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">latex_block_keys</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"n\">caption_prefix</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argval</span><span class=\"p\">(</span><span class=\"s1\">&#39;--cappref&#39;</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">caption_suffix</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argval</span><span class=\"p\">(</span><span class=\"s1\">&#39;--capsuf&#39;</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">cmdaug</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argval</span><span class=\"p\">(</span><span class=\"s1\">&#39;--cmdaug&#39;</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;custom&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">selected</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">case_idx</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">fpaths_list</span><span class=\"p\">,</span> <span class=\"n\">flat_case_labels</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">labels</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">cmdaug</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"n\">nCols</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">nCols</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n        <span class=\"n\">_cmdname</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_dbname</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; Case &#39;</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;_&#39;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">case_idx</span><span class=\"p\">)</span>\n        <span class=\"c1\">#print(&#39;_cmdname = %r&#39; % (_cmdname,))</span>\n        <span class=\"n\">cmdname</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">latex_sanitize_command_name</span><span class=\"p\">(</span><span class=\"n\">_cmdname</span><span class=\"p\">)</span>\n        <span class=\"n\">label_str</span> <span class=\"o\">=</span> <span class=\"n\">cmdname</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">caption_prefix</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">caption_str</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">escape_latex</span><span class=\"p\">(</span><span class=\"s1\">&#39;Casetags: &#39;</span> <span class=\"o\">+</span>\n                                          <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">nl</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">strvals</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n                                          <span class=\"s1\">&#39;, db=&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_dbname</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;. &#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">caption_str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n\n        <span class=\"n\">use_sublbls</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cfgx2_shortlbl</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span>\n        <span class=\"k\">if</span> <span class=\"n\">use_sublbls</span><span class=\"p\">:</span>\n            <span class=\"n\">caption_str</span> <span class=\"o\">+=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">escape_latex</span><span class=\"p\">(</span><span class=\"s1\">&#39;Each figure shows a different configuration: &#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">sublbls</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;(&#39;</span> <span class=\"o\">+</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">97</span> <span class=\"o\">+</span> <span class=\"n\">count</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;) &#39;</span> <span class=\"k\">for</span> <span class=\"n\">count</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cfgx2_shortlbl</span><span class=\"p\">))]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\">#caption_str += ut.escape_latex(&#39;This figure depicts correct and</span>\n            <span class=\"c1\">#incorrect matches from configuration: &#39;)</span>\n            <span class=\"n\">sublbls</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cfgx2_shortlbl</span><span class=\"p\">)</span>\n        <span class=\"k\">def</span> <span class=\"nf\">wrap_tt</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"sa\">r</span><span class=\"s1\">&#39;{\\tt &#39;</span> <span class=\"o\">+</span> <span class=\"n\">text</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;}&#39;</span>\n        <span class=\"n\">_shortlbls</span> <span class=\"o\">=</span> <span class=\"n\">cfgx2_shortlbl</span>\n        <span class=\"n\">_shortlbls</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">escape_latex</span><span class=\"p\">,</span> <span class=\"n\">_shortlbls</span><span class=\"p\">))</span>\n        <span class=\"c1\"># Adjust spacing for breaks</span>\n        <span class=\"c1\">#tex_small_space = r&#39;&#39;</span>\n        <span class=\"n\">tex_small_space</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s1\">&#39;\\hspace</span><span class=\"si\">{0pt}</span><span class=\"s1\">&#39;</span>\n        <span class=\"c1\"># Remove query specific config flags in individual results</span>\n        <span class=\"n\">_shortlbls</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">bq[^,]*,?&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">shortlbl</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">shortlbl</span> <span class=\"ow\">in</span> <span class=\"n\">_shortlbls</span><span class=\"p\">]</span>\n        <span class=\"c1\"># Let config strings be broken over newlines</span>\n        <span class=\"n\">_shortlbls</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">+&#39;</span><span class=\"p\">,</span> <span class=\"n\">tex_small_space</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;+&#39;</span> <span class=\"o\">+</span> <span class=\"n\">tex_small_space</span><span class=\"p\">,</span> <span class=\"n\">shortlbl</span><span class=\"p\">)</span>\n                      <span class=\"k\">for</span> <span class=\"n\">shortlbl</span> <span class=\"ow\">in</span> <span class=\"n\">_shortlbls</span><span class=\"p\">]</span>\n        <span class=\"n\">_shortlbls</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s1\">&#39;, *&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;,&#39;</span> <span class=\"o\">+</span> <span class=\"n\">tex_small_space</span><span class=\"p\">,</span> <span class=\"n\">shortlbl</span><span class=\"p\">)</span>\n                      <span class=\"k\">for</span> <span class=\"n\">shortlbl</span> <span class=\"ow\">in</span> <span class=\"n\">_shortlbls</span><span class=\"p\">]</span>\n        <span class=\"n\">_shortlbls</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">wrap_tt</span><span class=\"p\">,</span> <span class=\"n\">_shortlbls</span><span class=\"p\">))</span>\n        <span class=\"n\">cfgx2_texshortlbl</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">    &#39;</span> <span class=\"o\">+</span> <span class=\"n\">lbl</span> <span class=\"o\">+</span> <span class=\"n\">shortlbl</span>\n                             <span class=\"k\">for</span> <span class=\"n\">lbl</span><span class=\"p\">,</span> <span class=\"n\">shortlbl</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">sublbls</span><span class=\"p\">,</span> <span class=\"n\">_shortlbls</span><span class=\"p\">)]</span>\n\n        <span class=\"n\">caption_str</span> <span class=\"o\">+=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">conj_phrase</span><span class=\"p\">(</span><span class=\"n\">cfgx2_texshortlbl</span><span class=\"p\">,</span> <span class=\"s1\">&#39;and&#39;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;.</span><span class=\"se\">\\n</span><span class=\"s1\">    &#39;</span>\n        <span class=\"n\">caption_str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">    &#39;</span> <span class=\"o\">+</span> <span class=\"n\">caption_prefix</span> <span class=\"o\">+</span> <span class=\"n\">caption_str</span> <span class=\"o\">+</span> <span class=\"n\">caption_suffix</span>\n        <span class=\"n\">caption_str</span> <span class=\"o\">=</span> <span class=\"n\">caption_str</span><span class=\"o\">.</span><span class=\"n\">rstrip</span><span class=\"p\">()</span>\n        <span class=\"n\">figure_str</span>  <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_latex_figure_str</span><span class=\"p\">(</span><span class=\"n\">fpaths</span><span class=\"p\">,</span>\n                                                <span class=\"n\">nCols</span><span class=\"o\">=</span><span class=\"n\">nCols</span><span class=\"p\">,</span>\n                                                <span class=\"n\">label_str</span><span class=\"o\">=</span><span class=\"n\">label_str</span><span class=\"p\">,</span>\n                                                <span class=\"n\">caption_str</span><span class=\"o\">=</span><span class=\"n\">caption_str</span><span class=\"p\">,</span>\n                                                <span class=\"n\">use_sublbls</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                                                <span class=\"n\">use_frame</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">latex_block</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">latex_newcommand</span><span class=\"p\">(</span><span class=\"n\">cmdname</span><span class=\"p\">,</span> <span class=\"n\">figure_str</span><span class=\"p\">)</span>\n        <span class=\"n\">latex_block</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">%----------</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">+</span> <span class=\"n\">latex_block</span>\n        <span class=\"n\">latex_code_blocks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">latex_block</span><span class=\"p\">)</span>\n        <span class=\"n\">latex_block_keys</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">cmdname</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># HACK</span>\n    <span class=\"n\">remove_fpath</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">truepath</span><span class=\"p\">(</span><span class=\"s1\">&#39;~/latex/crall-candidacy-2015&#39;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/&#39;</span>\n\n    <span class=\"n\">latex_fpath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">case_figdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;latex_cases.tex&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">selected</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">selected_keys</span> <span class=\"o\">=</span> <span class=\"n\">selected</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">selected_keys</span> <span class=\"o\">=</span> <span class=\"n\">latex_block_keys</span>\n\n    <span class=\"n\">selected_blocks</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">latex_block_keys</span><span class=\"p\">,</span> <span class=\"n\">latex_code_blocks</span><span class=\"p\">)),</span> <span class=\"n\">selected_keys</span><span class=\"p\">)</span>\n\n    <span class=\"n\">figdef_block</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">selected_blocks</span><span class=\"p\">)</span>\n    <span class=\"n\">figcmd_block</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">&#39;</span> <span class=\"o\">+</span> <span class=\"n\">key</span> <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">latex_block_keys</span><span class=\"p\">])</span>\n\n    <span class=\"n\">selected_block</span> <span class=\"o\">=</span> <span class=\"n\">figdef_block</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">+</span> <span class=\"n\">figcmd_block</span>\n\n    <span class=\"c1\"># HACK: need full paths to render</span>\n    <span class=\"n\">selected_block_renderable</span> <span class=\"o\">=</span> <span class=\"n\">selected_block</span>\n    <span class=\"n\">selected_block</span> <span class=\"o\">=</span> <span class=\"n\">selected_block</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">remove_fpath</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">RENDER</span><span class=\"p\">:</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">render_latex_text</span><span class=\"p\">(</span><span class=\"n\">selected_block_renderable</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">DUMP_FIGDEF</span><span class=\"p\">:</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">writeto</span><span class=\"p\">(</span><span class=\"n\">latex_fpath</span><span class=\"p\">,</span> <span class=\"n\">selected_block</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">#if NOT DUMP AND NOT RENDER:</span>\n    <span class=\"c1\">#    print(&#39;STANDARD LATEX RESULTS&#39;)</span>\n    <span class=\"c1\">#    cmdname = ibs.get_dbname() + &#39;Results&#39;</span>\n    <span class=\"c1\">#    latex_block  = ut.get_latex_figure_str2(analysis_fpath_list, cmdname, nCols=1)</span>\n    <span class=\"c1\">#    ut.print_code(latex_block, &#39;latex&#39;)</span>\n    <span class=\"k\">if</span> <span class=\"n\">DUMP_FIGDEF</span> <span class=\"ow\">or</span> <span class=\"n\">RENDER</span><span class=\"p\">:</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">print_code</span><span class=\"p\">(</span><span class=\"n\">selected_block</span><span class=\"p\">,</span> <span class=\"s1\">&#39;latex&#39;</span><span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/ibeis/expt/draw_helpers", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}