{"parents": [{"link": "../../", "title": "Module code"}, {"link": "../", "title": "ibeis"}], "title": "ibeis.core_parts", "body": "<h1>Source code for ibeis.core_parts</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Extracts parts chips from image and applies optional image normalizations.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control.controller_inject</span> <span class=\"k\">import</span> <span class=\"n\">register_preprocs</span><span class=\"p\">,</span> <span class=\"n\">register_subprops</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">core_annots</span>\n<span class=\"p\">(</span><span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">derived_attribute</span> <span class=\"o\">=</span> <span class=\"n\">register_preprocs</span><span class=\"p\">[</span><span class=\"s1\">&#39;part&#39;</span><span class=\"p\">]</span>\n<span class=\"n\">register_subprop</span> <span class=\"o\">=</span> <span class=\"n\">register_subprops</span><span class=\"p\">[</span><span class=\"s1\">&#39;part&#39;</span><span class=\"p\">]</span>\n\n\n<span class=\"n\">PartChipConfig</span>  <span class=\"o\">=</span> <span class=\"n\">core_annots</span><span class=\"o\">.</span><span class=\"n\">ChipConfig</span>\n<span class=\"n\">PartChipImgType</span> <span class=\"o\">=</span> <span class=\"n\">core_annots</span><span class=\"o\">.</span><span class=\"n\">ChipImgType</span>\n\n\n<div class=\"viewcode-block\" id=\"compute_part_chip\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.core_parts.compute_part_chip\">[docs]</a><span class=\"nd\">@derived_attribute</span><span class=\"p\">(</span>\n    <span class=\"n\">tablename</span><span class=\"o\">=</span><span class=\"s1\">&#39;pchips&#39;</span><span class=\"p\">,</span> <span class=\"n\">parents</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;parts&#39;</span><span class=\"p\">],</span>\n    <span class=\"n\">colnames</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;img&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;width&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;height&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">],</span>\n    <span class=\"n\">coltypes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">PartChipImgType</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">],</span>\n    <span class=\"n\">configclass</span><span class=\"o\">=</span><span class=\"n\">PartChipConfig</span><span class=\"p\">,</span>\n    <span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"s1\">&#39;partchipcache4&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">rm_extern_on_delete</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">chunksize</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">compute_part_chip</span><span class=\"p\">(</span><span class=\"n\">depc</span><span class=\"p\">,</span> <span class=\"n\">part_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Extracts the part chip from the bounding box</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        depc (ibeis.depends_cache.DependencyCache):</span>\n<span class=\"sd\">        part_rowid_list (list):  list of part rowids</span>\n<span class=\"sd\">        config (dict): (default = None)</span>\n\n<span class=\"sd\">    Yields:</span>\n<span class=\"sd\">        (uri, int, int): tup</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        ibeis --tf compute_part_chip</span>\n\n<span class=\"sd\">    Doctest:</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.core_parts import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; import random</span>\n<span class=\"sd\">        &gt;&gt;&gt; defaultdb = &#39;testdb1&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=defaultdb)</span>\n<span class=\"sd\">        &gt;&gt;&gt; depc = ibs.depc_part</span>\n<span class=\"sd\">        &gt;&gt;&gt; config = {&#39;dim_size&#39;: None}</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = aid_list[:10]</span>\n<span class=\"sd\">        &gt;&gt;&gt; bbox_list = ibs.get_annot_bboxes(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; bbox_list = [</span>\n<span class=\"sd\">        &gt;&gt;&gt;     (xtl + 100, ytl + 100, w - 100, h - 100)</span>\n<span class=\"sd\">        &gt;&gt;&gt;     for xtl, ytl, w, h in bbox_list</span>\n<span class=\"sd\">        &gt;&gt;&gt; ]</span>\n<span class=\"sd\">        &gt;&gt;&gt; part_rowid_list = ibs.add_parts(aid_list, bbox_list=bbox_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; chips = depc.get_property(&#39;pchips&#39;, part_rowid_list, &#39;img&#39;, config=config)</span>\n<span class=\"sd\">        &gt;&gt;&gt; for (xtl, ytl, w, h), chip in zip(bbox_list, chips):</span>\n<span class=\"sd\">        &gt;&gt;&gt;     assert chip.shape == (h, w, 3)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.delete_parts(part_rowid_list)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Preprocess Part Chips&#39;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;config = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,))</span>\n\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">controller</span>\n\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_part_aids</span><span class=\"p\">(</span><span class=\"n\">part_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">bbox_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_part_bboxes</span><span class=\"p\">(</span><span class=\"n\">part_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">theta_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_part_thetas</span><span class=\"p\">(</span><span class=\"n\">part_rowid_list</span><span class=\"p\">)</span>\n\n    <span class=\"n\">result_list</span> <span class=\"o\">=</span> <span class=\"n\">core_annots</span><span class=\"o\">.</span><span class=\"n\">gen_chip_configure_and_compute</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">part_rowid_list</span><span class=\"p\">,</span>\n                                                             <span class=\"n\">bbox_list</span><span class=\"p\">,</span> <span class=\"n\">theta_list</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">result_list</span><span class=\"p\">:</span>\n        <span class=\"k\">yield</span> <span class=\"n\">result</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Done Preprocessing Part Chips&#39;</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.core_parts</span>\n<span class=\"sd\">        python -m ibeis.core_parts --allexamples</span>\n<span class=\"sd\">        utprof.py -m ibeis.core_parts --allexamples</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/core_parts", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}