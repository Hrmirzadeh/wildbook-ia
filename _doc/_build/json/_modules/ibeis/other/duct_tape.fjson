{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.other"}], "title": "ibeis.other.duct_tape", "body": "<h1>Source code for ibeis.other.duct_tape</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"c1\"># developer convenience functions for ibs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">six.moves</span> <span class=\"k\">import</span> <span class=\"nb\">zip</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">constants</span> <span class=\"k\">as</span> <span class=\"n\">const</span>\n<span class=\"p\">(</span><span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"s1\">&#39;[duct_tape]&#39;</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"fix_compname_configs\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.duct_tape.fix_compname_configs\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">fix_compname_configs</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; duct tape to keep version in check &quot;&quot;&quot;</span>\n    <span class=\"c1\">#ibs.MANUAL_CONFIG_SUFFIX = &#39;_MANUAL_&#39;  #+ ut.get_computer_name()</span>\n    <span class=\"c1\">#ibs.MANUAL_CONFIGID = ibs.add_config(ibs.MANUAL_CONFIG_SUFFIX)</span>\n    <span class=\"c1\"># We need to fix the manual config suffix to not use computer names anymore</span>\n\n    <span class=\"n\">configid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_configids</span><span class=\"p\">()</span>\n    <span class=\"n\">cfgsuffix_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_config_suffixes</span><span class=\"p\">(</span><span class=\"n\">configid_list</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">MANUAL_CONFIG_SUFFIX</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;MANUAL_CONFIG&#39;</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">MANUAL_CONFIGID</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_config</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">MANUAL_CONFIG_SUFFIX</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">rowid</span><span class=\"p\">,</span> <span class=\"n\">suffix</span> <span class=\"ow\">in</span> <span class=\"nb\">filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span>\n                                <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;_MANUAL_&#39;</span><span class=\"p\">),</span>\n                                <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">configid_list</span><span class=\"p\">,</span> <span class=\"n\">cfgsuffix_list</span><span class=\"p\">)):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;EVALUATING: </span><span class=\"si\">%r</span><span class=\"s2\">, </span><span class=\"si\">%r</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"p\">,</span> <span class=\"n\">suffix</span><span class=\"p\">))</span>\n        <span class=\"c1\"># Fix the tables with bad config_rowids</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">executeone</span><span class=\"p\">(</span>\n            <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            UPDATE {AL_RELATION_TABLE}</span>\n<span class=\"sd\">            SET config_rowid=?</span>\n<span class=\"sd\">            WHERE config_rowid=?</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">),</span>\n            <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">MANUAL_CONFIGID</span><span class=\"p\">,</span> <span class=\"n\">rowid</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># Delete the bad config_suffixes</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">executeone</span><span class=\"p\">(</span>\n            <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            DELETE</span>\n<span class=\"sd\">            FROM {CONFIG_TABLE}</span>\n<span class=\"sd\">            WHERE config_rowid=?</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">),</span>\n            <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"p\">,))</span></div>\n\n\n<div class=\"viewcode-block\" id=\"remove_database_slag\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.duct_tape.remove_database_slag\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">remove_database_slag</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span>\n                         <span class=\"n\">delete_empty_names</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                         <span class=\"n\">delete_empty_imagesets</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                         <span class=\"n\">delete_annotations_for_missing_images</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                         <span class=\"n\">delete_image_labels_for_missing_types</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                         <span class=\"n\">delete_annot_labels_for_missing_types</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                         <span class=\"n\">delete_chips_for_missing_annotations</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                         <span class=\"n\">delete_features_for_missing_annotations</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                         <span class=\"n\">delete_invalid_eg_relations</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                         <span class=\"n\">delete_invalid_gl_relations</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                         <span class=\"n\">delete_invalid_al_relations</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"c1\"># ZERO ORDER</span>\n    <span class=\"k\">if</span> <span class=\"n\">delete_empty_names</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_empty_nids</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">delete_empty_imagesets</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_empty_imgsetids</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># FIRST ORDER</span>\n    <span class=\"k\">if</span> <span class=\"n\">delete_annotations_for_missing_images</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">executeone</span><span class=\"p\">(</span>\n            <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            DELETE</span>\n<span class=\"sd\">            FROM {ANNOTATION_TABLE}</span>\n<span class=\"sd\">            WHERE</span>\n<span class=\"sd\">                image_rowid NOT IN (SELECT rowid FROM {IMAGE_TABLE})</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">))</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">delete_image_labels_for_missing_types</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">executeone</span><span class=\"p\">(</span>\n            <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            DELETE</span>\n<span class=\"sd\">            FROM {LBLIMAGE_TABLE}</span>\n<span class=\"sd\">            WHERE</span>\n<span class=\"sd\">                lbltype_rowid NOT IN (SELECT rowid FROM {LBLTYPE_TABLE})</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">))</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">delete_annot_labels_for_missing_types</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">executeone</span><span class=\"p\">(</span>\n            <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            DELETE</span>\n<span class=\"sd\">            FROM {LBLANNOT_TABLE}</span>\n<span class=\"sd\">            WHERE</span>\n<span class=\"sd\">                lbltype_rowid NOT IN (SELECT rowid FROM {LBLTYPE_TABLE})</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># SECOND ORDER</span>\n    <span class=\"k\">if</span> <span class=\"n\">delete_chips_for_missing_annotations</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">executeone</span><span class=\"p\">(</span>\n            <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            DELETE</span>\n<span class=\"sd\">            FROM {CHIP_TABLE}</span>\n<span class=\"sd\">            WHERE</span>\n<span class=\"sd\">                annot_rowid NOT IN (SELECT rowid FROM {ANNOTATION_TABLE})</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">))</span>\n        <span class=\"c1\"># OR config_rowid NOT IN (SELECT rowid FROM {CONFIG_TABLE})</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">delete_features_for_missing_annotations</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">executeone</span><span class=\"p\">(</span>\n            <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            DELETE</span>\n<span class=\"sd\">            FROM {FEATURE_TABLE}</span>\n<span class=\"sd\">            WHERE</span>\n<span class=\"sd\">                chip_rowid NOT IN (SELECT rowid FROM {CHIP_TABLE})</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">))</span>\n        <span class=\"c1\"># OR config_rowid NOT IN (SELECT rowid FROM {CONFIG_TABLE})</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">delete_invalid_eg_relations</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">executeone</span><span class=\"p\">(</span>\n            <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            DELETE</span>\n<span class=\"sd\">            FROM {GSG_RELATION_TABLE}</span>\n<span class=\"sd\">            WHERE</span>\n<span class=\"sd\">                image_rowid NOT IN (SELECT rowid FROM {IMAGE_TABLE}) OR</span>\n<span class=\"sd\">                imageset_rowid NOT IN (SELECT rowid FROM {IMAGESET_TABLE})</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># THIRD ORDER</span>\n    <span class=\"k\">if</span> <span class=\"n\">delete_invalid_gl_relations</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">executeone</span><span class=\"p\">(</span>\n            <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            DELETE</span>\n<span class=\"sd\">            FROM {GL_RELATION_TABLE}</span>\n<span class=\"sd\">            WHERE</span>\n<span class=\"sd\">                image_rowid NOT IN (SELECT rowid FROM {IMAGE_TABLE}) OR</span>\n<span class=\"sd\">                lblimage_rowid NOT IN (SELECT rowid FROM {LBLIMAGE_TABLE})</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">))</span>\n        <span class=\"c1\"># OR config_rowid NOT IN (SELECT rowid FROM {CONFIG_TABLE})</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">delete_invalid_al_relations</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">executeone</span><span class=\"p\">(</span>\n            <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">            DELETE</span>\n<span class=\"sd\">            FROM {AL_RELATION_TABLE}</span>\n<span class=\"sd\">            WHERE</span>\n<span class=\"sd\">                annot_rowid NOT IN (SELECT rowid FROM {ANNOTATION_TABLE}) OR</span>\n<span class=\"sd\">                lblannot_rowid NOT IN (SELECT rowid FROM {LBLANNOT_TABLE})</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">))</span></div>\n        <span class=\"c1\"># OR config_rowid NOT IN (SELECT rowid FROM {CONFIG_TABLE})</span>\n\n\n<div class=\"viewcode-block\" id=\"enforce_unkonwn_name_is_explicit\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.duct_tape.enforce_unkonwn_name_is_explicit\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">enforce_unkonwn_name_is_explicit</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_nids</span><span class=\"p\">()</span>\n    <span class=\"n\">text_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_name_texts</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">problem_nids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">text</span> <span class=\"k\">for</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">nid</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">text_list</span><span class=\"p\">,</span> <span class=\"n\">nid_list</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">text</span> <span class=\"o\">==</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span><span class=\"p\">]</span>\n    <span class=\"n\">unknown_aids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_name_aids</span><span class=\"p\">(</span><span class=\"n\">problem_nids</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">unknown_aids</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"mi\">0</span></div>\n    <span class=\"c1\"># TODO Take unknown_aids and remove any name relationships to make unknown</span>\n    <span class=\"c1\"># implicit</span>\n\n\n<div class=\"viewcode-block\" id=\"fix_nulled_yaws\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.duct_tape.fix_nulled_yaws\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">fix_nulled_yaws</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n    <span class=\"n\">yaw_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_yaws</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">valid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">yaw</span> <span class=\"o\">==</span> <span class=\"mf\">0.0</span> <span class=\"k\">for</span> <span class=\"n\">yaw</span> <span class=\"ow\">in</span> <span class=\"n\">yaw_list</span><span class=\"p\">]</span>\n    <span class=\"n\">dirty_aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_items</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">valid_list</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;[duct_tape] Nulling </span><span class=\"si\">%d</span><span class=\"s2\"> annotation yaws&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dirty_aid_list</span><span class=\"p\">))</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_viewpoints</span><span class=\"p\">(</span><span class=\"n\">dirty_aid_list</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dirty_aid_list</span><span class=\"p\">))</span></div>\n</pre></div>", "current_page_name": "_modules/ibeis/other/duct_tape", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}