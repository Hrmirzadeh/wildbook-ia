{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.other"}], "title": "ibeis.other.detecttrain", "body": "<h1>Source code for ibeis.other.detecttrain</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;Developer convenience functions for ibs (detections).</span>\n\n<span class=\"sd\">TODO: need to split up into sub modules:</span>\n<span class=\"sd\">    consistency_checks</span>\n<span class=\"sd\">    feasibility_fixes</span>\n<span class=\"sd\">    move the export stuff to dbio</span>\n\n<span class=\"sd\">    then there are also convineience functions that need to be ordered at least</span>\n<span class=\"sd\">    within this file</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"k\">import</span> <span class=\"n\">join</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">controller_inject</span>\n\n<span class=\"c1\"># Inject utool functions</span>\n<span class=\"p\">(</span><span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"s1\">&#39;[other.detecttrain]&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">CLASS_INJECT_KEY</span><span class=\"p\">,</span> <span class=\"n\">register_ibs_method</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"n\">controller_inject</span><span class=\"o\">.</span><span class=\"n\">make_ibs_register_decorator</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">))</span>\n\n\n<div class=\"viewcode-block\" id=\"classifier_cameratrap_train\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.detecttrain.classifier_cameratrap_train\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">classifier_cameratrap_train</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">positive_imageset_id</span><span class=\"p\">,</span> <span class=\"n\">negative_imageset_id</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.ingest_ibeis</span> <span class=\"k\">import</span> <span class=\"n\">get_cnn_classifier_cameratrap_binary_training_images</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.process</span> <span class=\"k\">import</span> <span class=\"n\">numpy_processed_directory2</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.models.classifier</span> <span class=\"k\">import</span> <span class=\"n\">train_classifier</span>\n    <span class=\"n\">data_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;extracted&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">extracted_path</span> <span class=\"o\">=</span> <span class=\"n\">get_cnn_classifier_cameratrap_binary_training_images</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span>\n                                                                          <span class=\"n\">positive_imageset_id</span><span class=\"p\">,</span>\n                                                                          <span class=\"n\">negative_imageset_id</span><span class=\"p\">,</span>\n                                                                          <span class=\"n\">dest_path</span><span class=\"o\">=</span><span class=\"n\">data_path</span><span class=\"p\">,</span>\n                                                                          <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">id_file</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span> <span class=\"o\">=</span> <span class=\"n\">numpy_processed_directory2</span><span class=\"p\">(</span><span class=\"n\">extracted_path</span><span class=\"p\">)</span>\n    <span class=\"n\">output_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;training&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;classifier-cameratrap&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">train_classifier</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Return model path</span>\n    <span class=\"k\">return</span> <span class=\"n\">model_path</span></div>\n\n\n<div class=\"viewcode-block\" id=\"classifier_binary_train\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.detecttrain.classifier_binary_train\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">classifier_binary_train</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.ingest_ibeis</span> <span class=\"k\">import</span> <span class=\"n\">get_cnn_classifier_binary_training_images</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.process</span> <span class=\"k\">import</span> <span class=\"n\">numpy_processed_directory2</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.models.classifier</span> <span class=\"k\">import</span> <span class=\"n\">train_classifier</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.utils</span> <span class=\"k\">import</span> <span class=\"n\">save_model</span>\n    <span class=\"n\">data_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;extracted&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">extracted_path</span> <span class=\"o\">=</span> <span class=\"n\">get_cnn_classifier_binary_training_images</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_list</span><span class=\"p\">,</span>\n                                                               <span class=\"n\">dest_path</span><span class=\"o\">=</span><span class=\"n\">data_path</span><span class=\"p\">,</span>\n                                                               <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">id_file</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span> <span class=\"o\">=</span> <span class=\"n\">numpy_processed_directory2</span><span class=\"p\">(</span><span class=\"n\">extracted_path</span><span class=\"p\">)</span>\n    <span class=\"n\">output_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;training&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;classifier-binary&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">train_classifier</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Add the species_list to the model</span>\n    <span class=\"n\">model_state</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">load_cPkl</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"s1\">&#39;species_list&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">model_state</span>\n    <span class=\"n\">model_state</span><span class=\"p\">[</span><span class=\"s1\">&#39;species_list&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">species_list</span>\n    <span class=\"n\">save_model</span><span class=\"p\">(</span><span class=\"n\">model_state</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Return model path</span>\n    <span class=\"k\">return</span> <span class=\"n\">model_path</span></div>\n\n\n<div class=\"viewcode-block\" id=\"classifier2_train\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.detecttrain.classifier2_train\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">classifier2_train</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">species_mapping</span><span class=\"o\">=</span><span class=\"p\">{},</span> <span class=\"n\">train_gid_set</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.ingest_ibeis</span> <span class=\"k\">import</span> <span class=\"n\">get_cnn_classifier2_training_images</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.process</span> <span class=\"k\">import</span> <span class=\"n\">numpy_processed_directory3</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.models.classifier2</span> <span class=\"k\">import</span> <span class=\"n\">train_classifier2</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.utils</span> <span class=\"k\">import</span> <span class=\"n\">save_model</span>\n    <span class=\"k\">if</span> <span class=\"n\">species_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">species_list</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">species_list</span><span class=\"p\">)</span>\n    <span class=\"n\">data_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;extracted&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"n\">get_cnn_classifier2_training_images</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_list</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">category_mapping</span><span class=\"o\">=</span><span class=\"n\">species_mapping</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">train_gid_set</span><span class=\"o\">=</span><span class=\"n\">train_gid_set</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">dest_path</span><span class=\"o\">=</span><span class=\"n\">data_path</span><span class=\"p\">,</span>\n                                                 <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">extracted_path</span><span class=\"p\">,</span> <span class=\"n\">category_list</span> <span class=\"o\">=</span> <span class=\"n\">values</span>\n    <span class=\"n\">id_file</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span> <span class=\"o\">=</span> <span class=\"n\">numpy_processed_directory3</span><span class=\"p\">(</span><span class=\"n\">extracted_path</span><span class=\"p\">)</span>\n    <span class=\"n\">output_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;training&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;classifier2&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">train_classifier2</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span><span class=\"p\">,</span> <span class=\"n\">purge</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Add the species_list to the model</span>\n    <span class=\"n\">model_state</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">load_cPkl</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"s1\">&#39;category_list&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">model_state</span>\n    <span class=\"n\">model_state</span><span class=\"p\">[</span><span class=\"s1\">&#39;category_list&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">category_list</span>\n    <span class=\"n\">save_model</span><span class=\"p\">(</span><span class=\"n\">model_state</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Return model path</span>\n    <span class=\"k\">return</span> <span class=\"n\">model_path</span></div>\n\n\n<div class=\"viewcode-block\" id=\"classifier_train\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.detecttrain.classifier_train\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">classifier_train</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">classifier2_train</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"localizer_train\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.detecttrain.localizer_train\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">localizer_train</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">pydarknet</span> <span class=\"k\">import</span> <span class=\"n\">Darknet_YOLO_Detector</span>\n    <span class=\"n\">data_path</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">export_to_xml</span><span class=\"p\">(</span><span class=\"n\">species_list</span><span class=\"o\">=</span><span class=\"n\">species_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">output_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;training&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;localizer&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">)</span>\n    <span class=\"n\">dark</span> <span class=\"o\">=</span> <span class=\"n\">Darknet_YOLO_Detector</span><span class=\"p\">()</span>\n    <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">dark</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span><span class=\"n\">data_path</span><span class=\"p\">,</span> <span class=\"n\">output_path</span><span class=\"p\">)</span>\n    <span class=\"k\">del</span> <span class=\"n\">dark</span>\n    <span class=\"k\">return</span> <span class=\"n\">model_path</span></div>\n\n\n<div class=\"viewcode-block\" id=\"labeler_train\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.detecttrain.labeler_train\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">labeler_train</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">viewpoint_mapping</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.ingest_ibeis</span> <span class=\"k\">import</span> <span class=\"n\">get_cnn_labeler_training_images</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.process</span> <span class=\"k\">import</span> <span class=\"n\">numpy_processed_directory2</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.models.labeler</span> <span class=\"k\">import</span> <span class=\"n\">train_labeler</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.utils</span> <span class=\"k\">import</span> <span class=\"n\">save_model</span>\n    <span class=\"n\">data_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;extracted&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">extracted_path</span> <span class=\"o\">=</span> <span class=\"n\">get_cnn_labeler_training_images</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">data_path</span><span class=\"p\">,</span>\n                                                     <span class=\"n\">category_list</span><span class=\"o\">=</span><span class=\"n\">species_list</span><span class=\"p\">,</span>\n                                                     <span class=\"n\">viewpoint_mapping</span><span class=\"o\">=</span><span class=\"n\">viewpoint_mapping</span><span class=\"p\">,</span>\n                                                     <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">id_file</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span> <span class=\"o\">=</span> <span class=\"n\">numpy_processed_directory2</span><span class=\"p\">(</span><span class=\"n\">extracted_path</span><span class=\"p\">)</span>\n    <span class=\"n\">output_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;training&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;labeler&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">train_labeler</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Add the species_list to the model</span>\n    <span class=\"n\">model_state</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">load_cPkl</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"s1\">&#39;category_list&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">model_state</span>\n    <span class=\"n\">model_state</span><span class=\"p\">[</span><span class=\"s1\">&#39;category_list&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">species_list</span>\n    <span class=\"k\">assert</span> <span class=\"s1\">&#39;viewpoint_mapping&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">model_state</span>\n    <span class=\"n\">model_state</span><span class=\"p\">[</span><span class=\"s1\">&#39;viewpoint_mapping&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">viewpoint_mapping</span>\n    <span class=\"n\">save_model</span><span class=\"p\">(</span><span class=\"n\">model_state</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">model_path</span></div>\n\n\n<span class=\"c1\"># @register_ibs_method</span>\n<span class=\"c1\"># def qualifier_train(ibs, **kwargs):</span>\n<span class=\"c1\">#     from ibeis_cnn.ingest_ibeis import get_cnn_qualifier_training_images</span>\n<span class=\"c1\">#     from ibeis_cnn.process import numpy_processed_directory2</span>\n<span class=\"c1\">#     from ibeis_cnn.models.qualifier import train_qualifier</span>\n<span class=\"c1\">#     data_path = join(ibs.get_cachedir(), &#39;extracted&#39;)</span>\n<span class=\"c1\">#     extracted_path = get_cnn_qualifier_training_images(ibs, data_path, **kwargs)</span>\n<span class=\"c1\">#     id_file, X_file, y_file = numpy_processed_directory2(extracted_path)</span>\n<span class=\"c1\">#     output_path = join(ibs.get_cachedir(), &#39;training&#39;, &#39;qualifier&#39;)</span>\n<span class=\"c1\">#     model_path = train_qualifier(output_path, X_file, y_file)</span>\n<span class=\"c1\">#     return model_path</span>\n\n\n<div class=\"viewcode-block\" id=\"detector_train\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.detecttrain.detector_train\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">detector_train</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">localizer_train</span><span class=\"p\">()</span>\n    <span class=\"n\">localizer_weight_path</span><span class=\"p\">,</span> <span class=\"n\">localizer_config_path</span><span class=\"p\">,</span> <span class=\"n\">localizer_class_path</span> <span class=\"o\">=</span> <span class=\"n\">results</span>\n    <span class=\"n\">classifier_model_path</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">classifier_binary_train</span><span class=\"p\">()</span>\n    <span class=\"n\">labeler_model_path</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">labeler_train</span><span class=\"p\">()</span>\n    <span class=\"n\">output_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;training&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;detector&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">localizer_weight_path</span><span class=\"p\">,</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;localizer.weights&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">localizer_config_path</span><span class=\"p\">,</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;localizer.config&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">localizer_class_path</span><span class=\"p\">,</span>  <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;localizer.classes&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">classifier_model_path</span><span class=\"p\">,</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;classifier.npy&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">labeler_model_path</span><span class=\"p\">,</span>    <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;labeler.npy&#39;</span><span class=\"p\">))</span></div>\n\n\n<div class=\"viewcode-block\" id=\"background_train\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.detecttrain.background_train\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">background_train</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.ingest_ibeis</span> <span class=\"k\">import</span> <span class=\"n\">get_background_training_patches2</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.process</span> <span class=\"k\">import</span> <span class=\"n\">numpy_processed_directory2</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.models.background</span> <span class=\"k\">import</span> <span class=\"n\">train_background</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.utils</span> <span class=\"k\">import</span> <span class=\"n\">save_model</span>\n    <span class=\"n\">data_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;extracted&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">extracted_path</span> <span class=\"o\">=</span> <span class=\"n\">get_background_training_patches2</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species</span><span class=\"p\">,</span> <span class=\"n\">data_path</span><span class=\"p\">,</span>\n                                                      <span class=\"n\">patch_size</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\n                                                      <span class=\"n\">global_limit</span><span class=\"o\">=</span><span class=\"mi\">500000</span><span class=\"p\">)</span>\n    <span class=\"n\">id_file</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span> <span class=\"o\">=</span> <span class=\"n\">numpy_processed_directory2</span><span class=\"p\">(</span><span class=\"n\">extracted_path</span><span class=\"p\">)</span>\n    <span class=\"n\">output_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;training&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;background&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">train_background</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span><span class=\"p\">)</span>\n    <span class=\"n\">model_state</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">load_cPkl</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"s1\">&#39;species&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">model_state</span>\n    <span class=\"n\">model_state</span><span class=\"p\">[</span><span class=\"s1\">&#39;species&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">species</span>\n    <span class=\"n\">save_model</span><span class=\"p\">(</span><span class=\"n\">model_state</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">model_path</span></div>\n\n\n<div class=\"viewcode-block\" id=\"aoi_train\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.detecttrain.aoi_train\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">aoi_train</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.ingest_ibeis</span> <span class=\"k\">import</span> <span class=\"n\">get_aoi_training_data</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.process</span> <span class=\"k\">import</span> <span class=\"n\">numpy_processed_directory4</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.models.aoi</span> <span class=\"k\">import</span> <span class=\"n\">train_aoi</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.utils</span> <span class=\"k\">import</span> <span class=\"n\">save_model</span>\n    <span class=\"n\">data_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;extracted&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">extracted_path</span> <span class=\"o\">=</span> <span class=\"n\">get_aoi_training_data</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">data_path</span><span class=\"p\">,</span> <span class=\"n\">target_species_list</span><span class=\"o\">=</span><span class=\"n\">species_list</span><span class=\"p\">)</span>\n    <span class=\"n\">id_file</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span> <span class=\"o\">=</span> <span class=\"n\">numpy_processed_directory4</span><span class=\"p\">(</span><span class=\"n\">extracted_path</span><span class=\"p\">)</span>\n    <span class=\"n\">output_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;training&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;aoi&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">train_aoi</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span><span class=\"p\">)</span>\n    <span class=\"n\">model_state</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">load_cPkl</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"s1\">&#39;species_list&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">model_state</span>\n    <span class=\"n\">model_state</span><span class=\"p\">[</span><span class=\"s1\">&#39;species_list&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">species_list</span>\n    <span class=\"n\">save_model</span><span class=\"p\">(</span><span class=\"n\">model_state</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">model_path</span></div>\n\n\n<div class=\"viewcode-block\" id=\"aoi2_train\"><a class=\"viewcode-back\" href=\"../../../../ibeis.other/#ibeis.other.detecttrain.aoi2_train\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">aoi2_train</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">train_gid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.ingest_ibeis</span> <span class=\"k\">import</span> <span class=\"n\">get_aoi2_training_data</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.process</span> <span class=\"k\">import</span> <span class=\"n\">numpy_processed_directory5</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.models.aoi2</span> <span class=\"k\">import</span> <span class=\"n\">train_aoi2</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis_cnn.utils</span> <span class=\"k\">import</span> <span class=\"n\">save_model</span>\n    <span class=\"n\">data_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;extracted&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">extracted_path</span> <span class=\"o\">=</span> <span class=\"n\">get_aoi2_training_data</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">dest_path</span><span class=\"o\">=</span><span class=\"n\">data_path</span><span class=\"p\">,</span>\n                                            <span class=\"n\">target_species_list</span><span class=\"o\">=</span><span class=\"n\">species_list</span><span class=\"p\">,</span>\n                                            <span class=\"n\">train_gid_list</span><span class=\"o\">=</span><span class=\"n\">train_gid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">id_file</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span> <span class=\"o\">=</span> <span class=\"n\">numpy_processed_directory5</span><span class=\"p\">(</span><span class=\"n\">extracted_path</span><span class=\"p\">)</span>\n    <span class=\"n\">output_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_cachedir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;training&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;aoi2&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">train_aoi2</span><span class=\"p\">(</span><span class=\"n\">output_path</span><span class=\"p\">,</span> <span class=\"n\">X_file</span><span class=\"p\">,</span> <span class=\"n\">y_file</span><span class=\"p\">)</span>\n    <span class=\"n\">model_state</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">load_cPkl</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"s1\">&#39;species_list&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">model_state</span>\n    <span class=\"n\">model_state</span><span class=\"p\">[</span><span class=\"s1\">&#39;species_list&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">species_list</span>\n    <span class=\"n\">save_model</span><span class=\"p\">(</span><span class=\"n\">model_state</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">model_path</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.other.detecttrain</span>\n<span class=\"sd\">        python -m ibeis.other.detecttrain --allexamples</span>\n<span class=\"sd\">        python -m ibeis.other.detecttrain --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/other/detecttrain", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}