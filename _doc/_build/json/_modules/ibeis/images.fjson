{"parents": [{"link": "../../", "title": "Module code"}, {"link": "../", "title": "ibeis"}], "title": "ibeis.images", "body": "<h1>Source code for ibeis.images</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">import</span> <span class=\"nn\">six</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">_ibeis_object</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control.controller_inject</span> <span class=\"k\">import</span> <span class=\"n\">make_ibs_register_decorator</span>\n<span class=\"p\">(</span><span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"s1\">&#39;[images]&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">CLASS_INJECT_KEY</span><span class=\"p\">,</span> <span class=\"n\">register_ibs_method</span> <span class=\"o\">=</span> <span class=\"n\">make_ibs_register_decorator</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"n\">BASE_TYPE</span> <span class=\"o\">=</span> <span class=\"nb\">type</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">_autogen_image_base</span>\n    <span class=\"n\">IMAGE_BASE</span> <span class=\"o\">=</span> <span class=\"n\">_autogen_image_base</span><span class=\"o\">.</span><span class=\"n\">_image_base_class</span>\n<span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n    <span class=\"n\">IMAGE_BASE</span> <span class=\"o\">=</span> <span class=\"n\">_ibeis_object</span><span class=\"o\">.</span><span class=\"n\">ObjectList1D</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">_autogen_imageset_base</span>\n    <span class=\"n\">IMAGESET_BASE</span> <span class=\"o\">=</span> <span class=\"n\">_autogen_imageset_base</span><span class=\"o\">.</span><span class=\"n\">_imageset_base_class</span>\n<span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n    <span class=\"n\">IMAGESET_BASE</span> <span class=\"o\">=</span> <span class=\"n\">_ibeis_object</span><span class=\"o\">.</span><span class=\"n\">ObjectList1D</span>\n\n\n<div class=\"viewcode-block\" id=\"images\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.images.images\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">images</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gids</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">uuids</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Makes an Images object &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">uuids</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">assert</span> <span class=\"n\">gids</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">&#39;specify one primary key&#39;</span>\n        <span class=\"n\">gids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_gids_from_uuid</span><span class=\"p\">(</span><span class=\"n\">uuids</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">gids</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">gids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_gids</span><span class=\"p\">()</span>\n    <span class=\"k\">elif</span> <span class=\"n\">gids</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Images&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">gids</span>\n    <span class=\"n\">gids</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensure_iterable</span><span class=\"p\">(</span><span class=\"n\">gids</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">Images</span><span class=\"p\">(</span><span class=\"n\">gids</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"imagesets\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.images.imagesets\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">imagesets</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gsids</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">text</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">gsids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_imageset_imgsetids_from_text</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">gsids</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">gsids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_imgsetids</span><span class=\"p\">()</span>\n    <span class=\"k\">elif</span> <span class=\"n\">gsids</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;ImageSets&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">gsids</span>\n    <span class=\"n\">gsids</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensure_iterable</span><span class=\"p\">(</span><span class=\"n\">gsids</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">ImageSets</span><span class=\"p\">(</span><span class=\"n\">gsids</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ImageIBEISPropertyInjector\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.images.ImageIBEISPropertyInjector\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ImageIBEISPropertyInjector</span><span class=\"p\">(</span><span class=\"n\">BASE_TYPE</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"n\">metaself</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">bases</span><span class=\"p\">,</span> <span class=\"n\">dct</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">ImageIBEISPropertyInjector</span><span class=\"p\">,</span> <span class=\"n\">metaself</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">bases</span><span class=\"p\">,</span> <span class=\"n\">dct</span><span class=\"p\">)</span>\n        <span class=\"n\">metaself</span><span class=\"o\">.</span><span class=\"n\">rrr</span> <span class=\"o\">=</span> <span class=\"n\">rrr</span>\n        <span class=\"c1\">#misc = [ &#39;instancelist&#39;, &#39;gids_with_aids&#39;, &#39;lazydict&#39;, ]  #</span>\n        <span class=\"n\">attrs</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s1\">&#39;aids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;aids_of_species&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_uuids&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;annot_uuids_of_species&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annotation_bboxes&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;annotation_thetas&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;contributor_rowid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;contributor_tag&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;datetime&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;datetime_str&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;detect_confidence&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;detectpaths&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;enabled&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;exts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;glrids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gnames&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;gps&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gps2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gsgrids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;heights&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;imagesettext&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;imgset_uuids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;imgsetids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;lat&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;location_codes&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;lon&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;missing_uuid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;name_uuids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;notes&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;num_annotations&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;orientation&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;orientation_str&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;party_rowids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;party_tag&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;paths&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;reviewed&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sizes&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;species_rowids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;species_uuids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;thumbpath&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;thumbtup&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;time_statstr&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;timedelta_posix&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;unixtime&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;unixtime_asfloat&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;unixtime2&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;uris&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;uris_original&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;uuids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;widths&#39;</span>\n            <span class=\"s1\">&#39;imgdata&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"c1\">#inverse_attrs = [</span>\n        <span class=\"c1\">#     &#39;gids_from_uuid&#39;,</span>\n        <span class=\"c1\">#]</span>\n        <span class=\"n\">objname</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;image&#39;</span>\n        <span class=\"n\">_ibeis_object</span><span class=\"o\">.</span><span class=\"n\">_inject_getter_attrs</span><span class=\"p\">(</span><span class=\"n\">metaself</span><span class=\"p\">,</span> <span class=\"n\">objname</span><span class=\"p\">,</span> <span class=\"n\">attrs</span><span class=\"p\">,</span> <span class=\"p\">[])</span></div>\n\n\n<span class=\"c1\"># @ut.reloadable_class</span>\n<div class=\"viewcode-block\" id=\"Images\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.images.Images\">[docs]</a><span class=\"nd\">@six</span><span class=\"o\">.</span><span class=\"n\">add_metaclass</span><span class=\"p\">(</span><span class=\"n\">ImageIBEISPropertyInjector</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Images</span><span class=\"p\">(</span><span class=\"n\">IMAGE_BASE</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Represents a group of annotations. Efficiently accesses properties from a</span>\n<span class=\"sd\">    database using lazy evaluation.</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.images Images --show</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.images import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; gids = ibs.get_valid_gids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; g = self = images = Images(gids, ibs)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(g.widths)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(g)</span>\n<span class=\"sd\">        &lt;Images(num=13)&gt;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\">#def __init__(self, gids, ibs, config=None):</span>\n    <span class=\"c1\">#    super(Images, self).__init__(gids, ibs, config)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">gids</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_rowids</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">annots</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ibs</span><span class=\"o\">.</span><span class=\"n\">annots</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">aids</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aids</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_annot_groups</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ibs</span><span class=\"o\">.</span><span class=\"n\">_annot_groups</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">annots</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Images.remove_from_imageset\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.images.Images.remove_from_imageset\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">remove_from_imageset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">imageset_text</span><span class=\"p\">):</span>\n        <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ibs</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">imageset_text</span><span class=\"p\">,</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">string_types</span><span class=\"p\">):</span>\n            <span class=\"n\">gsid</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_imageset_imgsetids_from_text</span><span class=\"p\">(</span><span class=\"n\">imageset_text</span><span class=\"p\">)</span>\n            <span class=\"n\">gsids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">gsid</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">gsids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_imageset_imgsetids_from_text</span><span class=\"p\">(</span><span class=\"n\">imageset_text</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">unrelate_images_and_imagesets</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gids</span><span class=\"p\">,</span> <span class=\"n\">gsids</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Images.append_to_imageset\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.images.Images.append_to_imageset\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">append_to_imageset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">imageset_text</span><span class=\"p\">):</span>\n        <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ibs</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">imageset_text</span><span class=\"p\">,</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">string_types</span><span class=\"p\">):</span>\n            <span class=\"n\">gsid</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_imageset_imgsetids_from_text</span><span class=\"p\">(</span><span class=\"n\">imageset_text</span><span class=\"p\">)</span>\n            <span class=\"n\">gsids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">gsid</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">gsids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_imageset_imgsetids_from_text</span><span class=\"p\">(</span><span class=\"n\">imageset_text</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_image_relationship</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gids</span><span class=\"p\">,</span> <span class=\"n\">gsids</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Images.show\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.images.Images.show\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">show</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Can only show one, got </span><span class=\"si\">{}</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)))</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">ibeis.viz</span> <span class=\"k\">import</span> <span class=\"n\">viz_image</span>\n        <span class=\"k\">for</span> <span class=\"n\">gid</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">viz_image</span><span class=\"o\">.</span><span class=\"n\">show_image</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ibs</span><span class=\"p\">,</span> <span class=\"n\">gid</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"ImageSetAttrInjector\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.images.ImageSetAttrInjector\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ImageSetAttrInjector</span><span class=\"p\">(</span><span class=\"n\">BASE_TYPE</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # SCRIPT</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis import _ibeis_object</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; objname = &#39;imageset&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; blacklist = []</span>\n<span class=\"sd\">        &gt;&gt;&gt; _ibeis_object._find_ibeis_attrs(ibs, objname, blacklist)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"n\">metaself</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">bases</span><span class=\"p\">,</span> <span class=\"n\">dct</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">ImageSetAttrInjector</span><span class=\"p\">,</span> <span class=\"n\">metaself</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">bases</span><span class=\"p\">,</span> <span class=\"n\">dct</span><span class=\"p\">)</span>\n        <span class=\"n\">metaself</span><span class=\"o\">.</span><span class=\"n\">rrr</span> <span class=\"o\">=</span> <span class=\"n\">rrr</span>\n        <span class=\"c1\">#misc = [ &#39;instancelist&#39;, &#39;gids_with_aids&#39;, &#39;lazydict&#39;, ]  #</span>\n        <span class=\"n\">attrs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;aids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;configid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;custom_filtered_aids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;duration&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;end_time_posix&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fraction_annotmatch_reviewed&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;fraction_imgs_reviewed&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fraction_names_with_exemplar&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;gids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gps_lats&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gps_lons&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gsgrids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;image_uuids&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;imgsetids_from_text&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;imgsetids_from_uuid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;isoccurrence&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;name_uuids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;note&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;notes&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num_aids&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;num_annotmatch_reviewed&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num_annots_reviewed&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num_gids&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;num_imgs_reviewed&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num_names_with_exemplar&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;percent_annotmatch_reviewed_str&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;percent_imgs_reviewed_str&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;percent_names_with_exemplar_str&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;processed_flags&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;shipped_flags&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;smart_waypoint_ids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;smart_xml_contents&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;smart_xml_fnames&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;start_time_posix&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;text&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;uuid&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s1\">&#39;uuids&#39;</span><span class=\"p\">]</span>\n        <span class=\"c1\">#inverse_attrs = [</span>\n        <span class=\"c1\">#     &#39;gids_from_uuid&#39;,</span>\n        <span class=\"c1\">#]</span>\n        <span class=\"n\">objname</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;imageset&#39;</span>\n        <span class=\"n\">_ibeis_object</span><span class=\"o\">.</span><span class=\"n\">_inject_getter_attrs</span><span class=\"p\">(</span><span class=\"n\">metaself</span><span class=\"p\">,</span> <span class=\"n\">objname</span><span class=\"p\">,</span> <span class=\"n\">attrs</span><span class=\"p\">,</span> <span class=\"p\">[])</span></div>\n\n\n<span class=\"c1\"># @ut.reloadable_class</span>\n<div class=\"viewcode-block\" id=\"ImageSets\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.images.ImageSets\">[docs]</a><span class=\"nd\">@six</span><span class=\"o\">.</span><span class=\"n\">add_metaclass</span><span class=\"p\">(</span><span class=\"n\">ImageSetAttrInjector</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">ImageSets</span><span class=\"p\">(</span><span class=\"n\">IMAGESET_BASE</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Represents a group of annotations. Efficiently accesses properties from a</span>\n<span class=\"sd\">    database using lazy evaluation.</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.images ImageSets</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.images import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; gsids = ibs._get_all_imgsetids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; self = ImageSets(gsids, ibs)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(self)</span>\n<span class=\"sd\">        &lt;ImageSets(num=13)&gt;</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">gsids</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">ImageSets</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">gsids</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">images</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ibs</span><span class=\"o\">.</span><span class=\"n\">images</span><span class=\"p\">(</span><span class=\"n\">gids</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">gids</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gids</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">annots</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ibs</span><span class=\"o\">.</span><span class=\"n\">annots</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">aids</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aids</span><span class=\"p\">]</span></div>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.images</span>\n<span class=\"sd\">        python -m ibeis.images --allexamples</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/images", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}