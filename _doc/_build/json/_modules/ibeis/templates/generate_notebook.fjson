{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.templates"}], "title": "ibeis.templates.generate_notebook", "body": "<h1>Source code for ibeis.templates.generate_notebook</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">CommandLine:</span>\n<span class=\"sd\">    # Generate and start an IPython notebook</span>\n<span class=\"sd\">    python -m ibeis --tf autogen_ipynb --ipynb --db &lt;dbname&gt; [-a &lt;acfg&gt;] [-t &lt;pcfg&gt;]</span>\n\n<span class=\"sd\">    python -m ibeis --tf autogen_ipynb --ipynb --db seaturtles -a default2:qhas_any=\\(left,right\\),sample_occur=True,occur_offset=[0,1,2],num_names=1</span>\n\n<span class=\"sd\">CommandLine:</span>\n<span class=\"sd\">    # to connect to a notebook on a remote machine that does not have the</span>\n<span class=\"sd\">    # appropriate port exposed you must start an SSH tunnel.</span>\n<span class=\"sd\">    # Typically a jupyter-notebook runs on port 8888.</span>\n<span class=\"sd\">    # Run this command on your local machine.</span>\n<span class=\"sd\">    ssh -N -f -L localhost:&lt;local_port&gt;:localhost:&lt;remote_port&gt; &lt;remote_user&gt;@&lt;remote_host&gt;</span>\n\n<span class=\"sd\">    E.G.</span>\n<span class=\"sd\">    ssh -N -f -L localhost:8889:localhost:8888 joncrall@hyrule.cs.rpi.edu</span>\n<span class=\"sd\">    # Now you can connect locally</span>\n<span class=\"sd\">    firefox localhost:8889</span>\n\n\n<span class=\"sd\">    # Running a server:</span>\n<span class=\"sd\">    jupyter-notebook password</span>\n<span class=\"sd\">    jupyter-notebook --no-browser --NotebookApp.iopub_data_rate_limit=100000000 --NotebookApp.token=</span>\n\n\n<span class=\"sd\">    # To allow remote jupyter-noteobok connections</span>\n<span class=\"sd\">    jupyter notebook --generate-config</span>\n\n<span class=\"sd\">    # Really need to do jupyter hub</span>\n\n<span class=\"sd\">    need to set</span>\n<span class=\"sd\">    c.NotebookApp.port = 8888</span>\n<span class=\"sd\">    c.NotebookApp.open_browser = False</span>\n<span class=\"sd\">    c.NotebookApp.ip = &#39;*&#39;</span>\n\n\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.templates</span> <span class=\"k\">import</span> <span class=\"n\">notebook_cells</span>\n<span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"k\">import</span> <span class=\"n\">partial</span>\n\n\n<div class=\"viewcode-block\" id=\"autogen_ipynb\"><a class=\"viewcode-back\" href=\"../../../../ibeis.templates/#ibeis.templates.generate_notebook.autogen_ipynb\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">autogen_ipynb</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">launch</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">run</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Autogenerates standard IBEIS Image Analysis IPython notebooks.</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --run --db lynx</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --run --db lynx</span>\n\n<span class=\"sd\">        python -m ibeis autogen_ipynb --ipynb --db PZ_MTEST -p :proot=smk,num_words=64000 default</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --ipynb --db PZ_MTEST --asreport</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --ipynb --db PZ_MTEST --noexample --withtags</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --ipynb --db PZ_MTEST</span>\n\n<span class=\"sd\">        python -m ibeis autogen_ipynb --ipynb --db STS_SandTigers</span>\n\n<span class=\"sd\">        python -m ibeis autogen_ipynb --db PZ_MTEST</span>\n<span class=\"sd\">        # TODO: Add support for dbdir to be specified</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --db ~/work/PZ_MTEST</span>\n\n<span class=\"sd\">        python -m ibeis autogen_ipynb --ipynb --db Oxford -a default:qhas_any=\\(query,\\),dpername=1,exclude_reference=True,dminqual=good</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --ipynb --db PZ_MTEST -a default -t best:lnbnn_normalizer=[None,normlnbnn-test]</span>\n\n<span class=\"sd\">        python -m ibeis.templates.generate_notebook --exec-autogen_ipynb --db wd_peter_blinston --ipynb</span>\n\n<span class=\"sd\">        python -m ibeis autogen_ipynb --db PZ_Master1 --ipynb</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --db PZ_Master1 -a timectrl:qindex=0:100 -t best best:normsum=True --ipynb --noexample</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --db PZ_Master1 -a timectrl --run</span>\n<span class=\"sd\">        jupyter-notebook Experiments-lynx.ipynb</span>\n<span class=\"sd\">        killall python</span>\n\n<span class=\"sd\">        python -m ibeis autogen_ipynb --db humpbacks --ipynb -t default:proot=BC_DTW -a default:has_any=hasnotch</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --db humpbacks --ipynb -t default:proot=BC_DTW default:proot=vsmany -a default:has_any=hasnotch,mingt=2,qindex=0:50 --noexample</span>\n\n<span class=\"sd\">        python -m ibeis autogen_ipynb --db testdb_curvrank --ipynb -t default:proot=CurvRankDorsal</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --db testdb_curvrank --ipynb -t default:proot=CurvRankFluke</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --db PW_Master --ipynb -t default:proot=CurvRankDorsal</span>\n\n<span class=\"sd\">    Ignore:</span>\n<span class=\"sd\">        python -m ibeis autogen_ipynb --db WS_ALL</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # SCRIPT</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.templates.generate_notebook import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = autogen_ipynb(ibs)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">dbname</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_dbname</span><span class=\"p\">()</span>\n    <span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Experiments-&#39;</span> <span class=\"o\">+</span> <span class=\"n\">dbname</span>\n    <span class=\"n\">nb_fpath</span> <span class=\"o\">=</span> <span class=\"n\">fname</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;.ipynb&#39;</span>\n    <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--cells&#39;</span><span class=\"p\">):</span>\n        <span class=\"n\">notebook_cells</span> <span class=\"o\">=</span> <span class=\"n\">make_ibeis_cell_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\"># ---- </span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">notebook_cells</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span>\n    <span class=\"c1\"># TODO: Add support for dbdir to be specified</span>\n    <span class=\"n\">notebook_str</span> <span class=\"o\">=</span> <span class=\"n\">make_ibeis_notebook</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">writeto</span><span class=\"p\">(</span><span class=\"n\">nb_fpath</span><span class=\"p\">,</span> <span class=\"n\">notebook_str</span><span class=\"p\">)</span>\n    <span class=\"n\">run</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--run&#39;</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">run</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">run</span>\n    <span class=\"n\">launch</span> <span class=\"o\">=</span> <span class=\"n\">launch</span> <span class=\"k\">if</span> <span class=\"n\">launch</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--ipynb&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">run</span><span class=\"p\">:</span>\n        <span class=\"n\">run_nb</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">run_ipython_notebook</span><span class=\"p\">(</span><span class=\"n\">notebook_str</span><span class=\"p\">)</span>\n        <span class=\"n\">output_fpath</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">export_notebook</span><span class=\"p\">(</span><span class=\"n\">run_nb</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"p\">)</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">startfile</span><span class=\"p\">(</span><span class=\"n\">output_fpath</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">launch</span><span class=\"p\">:</span>\n        <span class=\"n\">command</span> <span class=\"o\">=</span> <span class=\"s1\">&#39; &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s1\">&#39;jupyter-notebook&#39;</span><span class=\"p\">,</span>\n                            <span class=\"s1\">&#39;--NotebookApp.iopub_data_rate_limit=10000000&#39;</span><span class=\"p\">,</span>\n                            <span class=\"s1\">&#39;--NotebookApp.token=&#39;</span><span class=\"p\">,</span>\n                            <span class=\"n\">nb_fpath</span><span class=\"p\">])</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">cmd2</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">,</span> <span class=\"n\">detatch</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;notebook_str =</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">notebook_str</span><span class=\"p\">,))</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_default_cell_template_list\"><a class=\"viewcode-back\" href=\"../../../../ibeis.templates/#ibeis.templates.generate_notebook.get_default_cell_template_list\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_default_cell_template_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Defines the order of ipython notebook cells</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">cells</span> <span class=\"o\">=</span> <span class=\"n\">notebook_cells</span>\n\n    <span class=\"n\">noexample</span> <span class=\"o\">=</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--examples&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">asreport</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--asreport&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">withtags</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--withtags&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">cell_template_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"n\">info_cells</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">pipe_config_info</span><span class=\"p\">,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">annot_config_info</span><span class=\"p\">,</span>\n        <span class=\"c1\"># cells.per_encounter_stats,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">timestamp_distribution</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"n\">dev_analysis</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">config_overlap</span><span class=\"p\">,</span>\n        <span class=\"c1\">#cells.dbsize_expt,</span>\n        <span class=\"c1\"># None if ibs.get_dbname() == &#39;humpbacks&#39; else cells.feat_score_sep,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">all_annot_scoresep</span><span class=\"p\">,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">success_annot_scoresep</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"n\">cell_template_list</span> <span class=\"o\">+=</span> <span class=\"p\">[</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">introduction</span> <span class=\"k\">if</span> <span class=\"n\">asreport</span> <span class=\"k\">else</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">nb_init</span><span class=\"p\">,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">db_init</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span> <span class=\"k\">if</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_dbname</span><span class=\"p\">()</span> <span class=\"o\">!=</span> <span class=\"s1\">&#39;humpbacks&#39;</span> <span class=\"k\">else</span> <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">fluke_select</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">asreport</span><span class=\"p\">:</span>\n        <span class=\"n\">cell_template_list</span> <span class=\"o\">+=</span> <span class=\"n\">info_cells</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">noexample</span><span class=\"p\">:</span>\n        <span class=\"n\">cell_template_list</span> <span class=\"o\">+=</span> <span class=\"p\">[</span>\n            <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">example_annotations</span><span class=\"p\">,</span>\n            <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">example_names</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"n\">cell_template_list</span> <span class=\"o\">+=</span> <span class=\"p\">[</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">per_annotation_accuracy</span><span class=\"p\">,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">per_name_accuracy</span><span class=\"p\">,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">easy_success_cases</span><span class=\"p\">,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">hard_success_cases</span><span class=\"p\">,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">failure_type1_cases</span><span class=\"p\">,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">failure_type2_cases</span><span class=\"p\">,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">total_failure_cases</span><span class=\"p\">,</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">timedelta_distribution</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">withtags</span><span class=\"p\">:</span>\n        <span class=\"n\">cell_template_list</span> <span class=\"o\">+=</span> <span class=\"p\">[</span>\n            <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">investigate_specific_case</span><span class=\"p\">,</span>\n            <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">view_intereseting_tags</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">asreport</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Append our debug stuff at the bottom</span>\n        <span class=\"n\">cell_template_list</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">IGNOREAFTER</span><span class=\"p\">]</span>\n        <span class=\"n\">cell_template_list</span> <span class=\"o\">+=</span> <span class=\"n\">info_cells</span>\n\n    <span class=\"n\">cell_template_list</span> <span class=\"o\">+=</span> <span class=\"n\">dev_analysis</span>\n\n    <span class=\"n\">cell_template_list</span> <span class=\"o\">+=</span> <span class=\"p\">[</span>\n        <span class=\"n\">cells</span><span class=\"o\">.</span><span class=\"n\">config_disagree_cases</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"n\">cell_template_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filter_Nones</span><span class=\"p\">(</span><span class=\"n\">cell_template_list</span><span class=\"p\">)</span>\n\n    <span class=\"n\">cell_template_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">lmap</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">normalize_cells</span><span class=\"p\">,</span> <span class=\"n\">cell_template_list</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">asreport</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Remove all of the extra fluff</span>\n        <span class=\"n\">cell_template_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"n\">header</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">header</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">footer</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">cell_template_list</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">cell_template_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"make_ibeis_notebook\"><a class=\"viewcode-back\" href=\"../../../../ibeis.templates/#ibeis.templates.generate_notebook.make_ibeis_notebook\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">make_ibeis_notebook</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (ibeis.IBEISController):  ibeis controller object</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.templates.generate_notebook --exec-make_ibeis_notebook --db wd_peter_blinston --asreport</span>\n<span class=\"sd\">        python -m ibeis --tf --exec-make_ibeis_notebook</span>\n<span class=\"sd\">        python -m ibeis --tf make_ibeis_notebook --db lynx</span>\n<span class=\"sd\">        jupyter-notebook tmp.ipynb</span>\n<span class=\"sd\">        runipy tmp.ipynb --html report.html</span>\n<span class=\"sd\">        runipy --pylab tmp.ipynb tmp2.ipynb</span>\n<span class=\"sd\">        sudo pip install runipy</span>\n<span class=\"sd\">        python -c &quot;import runipy; print(runipy.__version__)&quot;</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # SCRIPT</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.templates.generate_notebook import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; notebook_str = make_ibeis_notebook(ibs)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(notebook_str)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">cell_list</span> <span class=\"o\">=</span> <span class=\"n\">make_ibeis_cell_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">)</span>\n    <span class=\"n\">notebook_str</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">make_notebook</span><span class=\"p\">(</span><span class=\"n\">cell_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">notebook_str</span></div>\n\n\n<div class=\"viewcode-block\" id=\"make_ibeis_cell_list\"><a class=\"viewcode-back\" href=\"../../../../ibeis.templates/#ibeis.templates.generate_notebook.make_ibeis_cell_list\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">make_ibeis_cell_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"n\">cell_template_list</span> <span class=\"o\">=</span> <span class=\"n\">get_default_cell_template_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">)</span>\n    <span class=\"n\">autogen_str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;# python -m ibeis autogen_ipynb --launch --dbdir </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_dbdir</span><span class=\"p\">())</span>\n    <span class=\"c1\"># autogen_str = ut.make_autogen_str()</span>\n    <span class=\"n\">dbname</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_dbname</span><span class=\"p\">()</span>\n    <span class=\"n\">dbdir</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">dbdir</span>\n    <span class=\"n\">default_acfgstr</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argval</span><span class=\"p\">(</span><span class=\"s1\">&#39;-a&#39;</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:is_known=True&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">asreport</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--asreport&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">default_pcfgstr_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argval</span><span class=\"p\">((</span><span class=\"s1\">&#39;-t&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-p&#39;</span><span class=\"p\">),</span> <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">default_pcfgstr</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr3</span><span class=\"p\">(</span><span class=\"n\">default_pcfgstr_list</span><span class=\"p\">,</span> <span class=\"n\">nobr</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">asreport</span><span class=\"p\">:</span>\n        <span class=\"n\">annotconfig_list_body</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">codeblock</span><span class=\"p\">(</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">default_acfgstr</span><span class=\"p\">)</span> <span class=\"p\">)</span>\n        <span class=\"n\">pipeline_list_body</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">codeblock</span><span class=\"p\">(</span>\n            <span class=\"n\">default_pcfgstr</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">annotconfig_list_body</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">codeblock</span><span class=\"p\">(</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">default_acfgstr</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">+</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">codeblock</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;&#39;</span>\n<span class=\"s1\">            #&#39;default:has_any=(query,),dpername=1,exclude_reference=True&#39;,</span>\n<span class=\"s1\">            #&#39;default:is_known=True&#39;,</span>\n<span class=\"s1\">            #&#39;default:is_known=True,minqual=good,require_timestamp=True,dcrossval_enc=1,view=left&#39;</span>\n<span class=\"s1\">            #&#39;default:qsame_imageset=True,been_adjusted=True,excluderef=True,qsize=10,dsize=20&#39;,</span>\n<span class=\"s1\">            #&#39;default:require_timestamp=True,min_timedelta=3600&#39;,</span>\n<span class=\"s1\">            #&#39;default:species=primary&#39;,</span>\n<span class=\"s1\">            #&#39;unctrl:been_adjusted=True&#39;,</span>\n<span class=\"s1\">            #&#39;timectrl:&#39;,</span>\n<span class=\"s1\">            #&#39;timectrl:view=primary,minqual=good&#39;,</span>\n\n<span class=\"s1\">            #&#39;default:minqual=good,require_timestamp=True,view=left,dcrossval_enc=1,joinme=1&#39;,</span>\n<span class=\"s1\">            #&#39;default:minqual=good,require_timestamp=True,view=right,dcrossval_enc=1,joinme=1&#39;,</span>\n<span class=\"s1\">            #&#39;default:minqual=ok,require_timestamp=True,view=left,dcrossval_enc=1,joinme=2&#39;,</span>\n<span class=\"s1\">            #&#39;default:minqual=ok,require_timestamp=True,view=right,dcrossval_enc=1,joinme=2&#39;,</span>\n\n<span class=\"s1\">            &#39;&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">pipeline_list_body</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">codeblock</span><span class=\"p\">(</span>\n            <span class=\"n\">default_pcfgstr</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">+</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">codeblock</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;&#39;</span>\n<span class=\"s1\">            #&#39;default&#39;,</span>\n<span class=\"s1\">            #&#39;default:K=1,AI=False,QRH=True&#39;,</span>\n<span class=\"s1\">            #&#39;default:K=1,RI=True,AI=False&#39;,</span>\n<span class=\"s1\">            #&#39;default:K=1,adapteq=True&#39;,</span>\n<span class=\"s1\">            #&#39;default:fg_on=[True,False]&#39;,</span>\n<span class=\"s1\">            &#39;&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"nb\">locals</span><span class=\"p\">()</span>\n    <span class=\"n\">_format</span> <span class=\"o\">=</span> <span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">format_cells</span><span class=\"p\">,</span> <span class=\"n\">locals_</span><span class=\"o\">=</span><span class=\"n\">locals_</span><span class=\"p\">)</span>\n    <span class=\"n\">cell_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">_format</span><span class=\"p\">,</span> <span class=\"n\">cell_template_list</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">cell_list</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.templates.generate_notebook</span>\n<span class=\"sd\">        python -m ibeis.templates.generate_notebook --allexamples</span>\n<span class=\"sd\">        python -m ibeis.templates.generate_notebook --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/templates/generate_notebook", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}