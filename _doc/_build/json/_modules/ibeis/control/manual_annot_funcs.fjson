{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.control"}], "title": "ibeis.control.manual_annot_funcs", "body": "<h1>Source code for ibeis.control.manual_annot_funcs</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Autogen:</span>\n<span class=\"sd\">    python -c &quot;import utool as ut; ut.write_modscript_alias(&#39;Tgen.sh&#39;, &#39;ibeis.templates.template_generator&#39;)&quot;  # NOQA</span>\n<span class=\"sd\">    sh Tgen.sh --key annot --invert --Tcfg with_getters=True with_setters=True --modfname manual_annot_funcs --funcname-filter=age_m  # NOQA</span>\n<span class=\"sd\">    sh Tgen.sh --key annot --invert --Tcfg with_getters=True with_setters=True --modfname manual_annot_funcs --funcname-filter=is_  # NOQA</span>\n<span class=\"sd\">    sh Tgen.sh --key annot --invert --Tcfg with_getters=True with_setters=True --modfname manual_annot_funcs --funcname-filter=is_ --diff  # NOQA</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">import</span> <span class=\"nn\">six</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uuid</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">constants</span> <span class=\"k\">as</span> <span class=\"n\">const</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">accessor_decors</span><span class=\"p\">,</span> <span class=\"n\">controller_inject</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.other</span> <span class=\"k\">import</span> <span class=\"n\">ibsfuncs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control.controller_inject</span> <span class=\"k\">import</span> <span class=\"n\">make_ibs_register_decorator</span>\n<span class=\"c1\"># from collections import namedtuple</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.web</span> <span class=\"k\">import</span> <span class=\"n\">routes_ajax</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">CLASS_INJECT_KEY</span><span class=\"p\">,</span> <span class=\"n\">register_ibs_method</span> <span class=\"o\">=</span> <span class=\"n\">make_ibs_register_decorator</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">register_api</span>   <span class=\"o\">=</span> <span class=\"n\">controller_inject</span><span class=\"o\">.</span><span class=\"n\">get_ibeis_flask_api</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">ANNOT_AGE_MONTHS_EST_MAX</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_age_months_est_max&#39;</span>\n<span class=\"n\">ANNOT_AGE_MONTHS_EST_MIN</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_age_months_est_min&#39;</span>\n<span class=\"n\">ANNOT_NOTE</span>               <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_note&#39;</span>\n<span class=\"n\">ANNOT_NUM_VERTS</span>          <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_num_verts&#39;</span>\n<span class=\"n\">ANNOT_PARENT_ROWID</span>       <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_parent_rowid&#39;</span>\n<span class=\"n\">ANNOT_ROWID</span>              <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_rowid&#39;</span>\n<span class=\"n\">ANNOT_TAG_TEXT</span>           <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_tag_text&#39;</span>\n<span class=\"n\">ANNOT_SEMANTIC_UUID</span>      <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_semantic_uuid&#39;</span>\n<span class=\"n\">ANNOT_THETA</span>              <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_theta&#39;</span>\n<span class=\"n\">ANNOT_VERTS</span>              <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_verts&#39;</span>\n<span class=\"n\">ANNOT_UUID</span>               <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_uuid&#39;</span>\n<span class=\"n\">ANNOT_YAW</span>                <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_yaw&#39;</span>\n<span class=\"n\">ANNOT_VIEWPOINT</span>          <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_viewpoint&#39;</span>\n<span class=\"n\">ANNOT_VISUAL_UUID</span>        <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_visual_uuid&#39;</span>\n<span class=\"n\">CONFIG_ROWID</span>             <span class=\"o\">=</span> <span class=\"s1\">&#39;config_rowid&#39;</span>\n<span class=\"n\">FEATWEIGHT_ROWID</span>         <span class=\"o\">=</span> <span class=\"s1\">&#39;featweight_rowid&#39;</span>\n<span class=\"n\">IMAGE_ROWID</span>              <span class=\"o\">=</span> <span class=\"s1\">&#39;image_rowid&#39;</span>\n<span class=\"n\">NAME_ROWID</span>               <span class=\"o\">=</span> <span class=\"s1\">&#39;name_rowid&#39;</span>\n<span class=\"n\">SPECIES_ROWID</span>            <span class=\"o\">=</span> <span class=\"s1\">&#39;species_rowid&#39;</span>\n<span class=\"n\">ANNOT_EXEMPLAR_FLAG</span>      <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_exemplar_flag&#39;</span>\n<span class=\"n\">ANNOT_QUALITY</span>            <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_quality&#39;</span>\n<span class=\"n\">ANNOT_ROWIDS</span>             <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_rowids&#39;</span>\n<span class=\"n\">GAR_ROWID</span>                <span class=\"o\">=</span> <span class=\"s1\">&#39;gar_rowid&#39;</span>\n<span class=\"n\">PART_ROWID</span>               <span class=\"o\">=</span> <span class=\"s1\">&#39;part_rowid&#39;</span>\n<span class=\"n\">ANNOT_STAGED_FLAG</span>        <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_staged_flag&#39;</span>\n<span class=\"n\">ANNOT_STAGED_USER_ID</span>     <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_staged_user_identity&#39;</span>\n\n\n<span class=\"c1\"># Define the properties that will make up the semantic / visual uuids</span>\n<span class=\"n\">VISUAL_TUP_PROPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;image_uuids&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;verts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;thetas&#39;</span><span class=\"p\">]</span>\n<span class=\"c1\"># TODO: Remove viewpoint and species?</span>\n<span class=\"n\">SEMANTIC_TUP_PROPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">&#39;viewpoint_code&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;names&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;species_texts&#39;</span>\n<span class=\"p\">]</span>\n\n\n<div class=\"viewcode-block\" id=\"compute_annot_visual_semantic_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.compute_annot_visual_semantic_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/uuid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;POST&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">compute_annot_visual_semantic_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">include_preprocess</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n\n    <span class=\"n\">preprocess_dict</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">_add_annots_preprocess</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"n\">theta_list</span>         <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;theta_list&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">vert_list</span>          <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;vert_list&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;species_rowid_list&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">viewpoint_ints</span>     <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;viewpoint_ints&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">nid_list</span>           <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;nid_list&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"n\">image_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_uuids</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">species_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_species_texts</span><span class=\"p\">(</span><span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">view_codes</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">VIEW</span><span class=\"o\">.</span><span class=\"n\">INT_TO_CODE</span><span class=\"p\">,</span> <span class=\"n\">viewpoint_ints</span><span class=\"p\">)</span>\n    <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_name_texts</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">)</span>\n\n    <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;image_uuids&#39;</span><span class=\"p\">:</span> <span class=\"n\">image_uuid_list</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;verts&#39;</span><span class=\"p\">:</span> <span class=\"n\">vert_list</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;thetas&#39;</span><span class=\"p\">:</span> <span class=\"n\">theta_list</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;species_texts&#39;</span><span class=\"p\">:</span> <span class=\"n\">species_list</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;viewpoint_code&#39;</span><span class=\"p\">:</span> <span class=\"n\">view_codes</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;names&#39;</span><span class=\"p\">:</span> <span class=\"n\">name_list</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">visual_infotup</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"n\">VISUAL_TUP_PROPS</span><span class=\"p\">)</span>\n    <span class=\"n\">annot_visual_uuid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">augment_uuid</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tup</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">visual_infotup</span><span class=\"p\">)]</span>\n\n    <span class=\"n\">semantic_infotup</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"n\">VISUAL_TUP_PROPS</span> <span class=\"o\">+</span> <span class=\"n\">SEMANTIC_TUP_PROPS</span><span class=\"p\">)</span>\n    <span class=\"n\">annot_semantic_uuid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">augment_uuid</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tup</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">semantic_infotup</span><span class=\"p\">)]</span>\n\n    <span class=\"n\">value_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;visual_uuid_list&#39;</span>  <span class=\"p\">:</span> <span class=\"n\">annot_visual_uuid_list</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;semantic_uuid_list&#39;</span><span class=\"p\">:</span> <span class=\"n\">annot_semantic_uuid_list</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">include_preprocess</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">:</span>\n            <span class=\"k\">assert</span> <span class=\"n\">key</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">value_dict</span>\n            <span class=\"n\">value_dict</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">value_dict</span></div>\n\n\n<span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">_add_annots_preprocess</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">bbox_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">theta_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">vert_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                           <span class=\"n\">species_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">viewpoint_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                           <span class=\"n\">nid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">skip_cleaning</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">vtool</span> <span class=\"k\">import</span> <span class=\"n\">geometry</span>\n\n    <span class=\"c1\"># BBOXES / VERTS</span>\n    <span class=\"c1\"># For import only, we can specify both by setting import_override to True</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">bbox_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">vert_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">),</span> <span class=\"p\">(</span>\n        <span class=\"s1\">&#39;must specify exactly one of bbox_list or vert_list&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">vert_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">vert_list</span> <span class=\"o\">=</span> <span class=\"n\">geometry</span><span class=\"o\">.</span><span class=\"n\">verts_list_from_bboxes_list</span><span class=\"p\">(</span><span class=\"n\">bbox_list</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">bbox_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">bbox_list</span> <span class=\"o\">=</span> <span class=\"n\">geometry</span><span class=\"o\">.</span><span class=\"n\">bboxes_from_vert_list</span><span class=\"p\">(</span><span class=\"n\">vert_list</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">theta_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">theta_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">))]</span>\n\n    <span class=\"n\">len_gid</span>   <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">len_bbox</span>  <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">bbox_list</span><span class=\"p\">)</span>\n    <span class=\"n\">len_vert</span>  <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">vert_list</span><span class=\"p\">)</span>\n    <span class=\"n\">len_theta</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">theta_list</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">assert</span> <span class=\"n\">len_gid</span>  <span class=\"o\">==</span> <span class=\"n\">len_bbox</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bbox and gid are not of same size&#39;</span>\n        <span class=\"k\">assert</span> <span class=\"n\">len_gid</span>  <span class=\"o\">==</span> <span class=\"n\">len_theta</span><span class=\"p\">,</span> <span class=\"s1\">&#39;theta and gid are not of same size&#39;</span>\n        <span class=\"k\">assert</span> <span class=\"n\">len_gid</span>  <span class=\"o\">==</span> <span class=\"n\">len_vert</span><span class=\"p\">,</span> <span class=\"s1\">&#39;vert and gid are not of same size&#39;</span>\n    <span class=\"k\">except</span> <span class=\"ne\">AssertionError</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">printex</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">,</span> <span class=\"n\">key_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;len_vert&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;len_gid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;len_bbox&#39;</span>\n                                    <span class=\"s1\">&#39;len_theta&#39;</span><span class=\"p\">])</span>\n        <span class=\"k\">raise</span>\n\n    <span class=\"c1\"># SPECIES</span>\n    <span class=\"k\">if</span> <span class=\"n\">species_rowid_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">assert</span> <span class=\"n\">species_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cannot mix species_rowid and species&#39;</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">species_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_species</span><span class=\"p\">(</span><span class=\"n\">species_list</span><span class=\"p\">,</span> <span class=\"n\">skip_cleaning</span><span class=\"o\">=</span><span class=\"n\">skip_cleaning</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_SPECIES_ROWID</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">))]</span>\n\n    <span class=\"c1\"># VIEWPOINTS</span>\n    <span class=\"k\">if</span> <span class=\"n\">viewpoint_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">viewpoint_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n\n    <span class=\"n\">viewpoint_ints</span> <span class=\"o\">=</span> <span class=\"n\">_ensure_viewpoint_to_int</span><span class=\"p\">(</span><span class=\"n\">viewpoint_list</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># NAMES</span>\n    <span class=\"k\">assert</span> <span class=\"n\">name_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">nid_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cannot specify both names and nids&#39;</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">name_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_names</span><span class=\"p\">(</span><span class=\"n\">name_list</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">nid_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_NAME_ROWID</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">))]</span>\n\n    <span class=\"n\">preprocess_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;bbox_list&#39;</span>          <span class=\"p\">:</span> <span class=\"n\">bbox_list</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;theta_list&#39;</span>         <span class=\"p\">:</span> <span class=\"n\">theta_list</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;vert_list&#39;</span>          <span class=\"p\">:</span> <span class=\"n\">vert_list</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;species_rowid_list&#39;</span> <span class=\"p\">:</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;viewpoint_list&#39;</span>     <span class=\"p\">:</span> <span class=\"n\">viewpoint_list</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;viewpoint_ints&#39;</span>     <span class=\"p\">:</span> <span class=\"n\">viewpoint_ints</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;nid_list&#39;</span>           <span class=\"p\">:</span> <span class=\"n\">nid_list</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">preprocess_dict</span>\n\n\n<span class=\"c1\"># ==========</span>\n<span class=\"c1\"># ADDERS</span>\n<span class=\"c1\"># ==========</span>\n\n\n<div class=\"viewcode-block\" id=\"add_annots\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.add_annots\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">adder</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">IMAGE_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ANNOT_ROWIDS</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">NAME_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ANNOT_ROWIDS</span><span class=\"p\">])</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">IMAGESET_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;percent_names_with_exemplar_str&#39;</span><span class=\"p\">])</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;POST&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_annots</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">bbox_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">theta_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">species_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">nid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">vert_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">annot_uuid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">yaw_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">viewpoint_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">quality_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">multiple_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">interest_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">detect_confidence_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">notes_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">annot_visual_uuid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">annot_semantic_uuid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">species_rowid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">staged_uuid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">staged_user_id_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">quiet_delete_thumbs</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"n\">prevent_visual_duplicates</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">skip_cleaning</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"n\">delete_thumb</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Adds an annotation to images</span>\n\n<span class=\"sd\">    # TODO:</span>\n<span class=\"sd\">        remove annot_visual_uuid_list and annot_semantic_uuid_list</span>\n<span class=\"sd\">        They are always inferred</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        gid_list                 (list): image rowids to add annotation to</span>\n<span class=\"sd\">        bbox_list                (list): of [x, y, w, h] bounding boxes for each image (supply verts instead)</span>\n<span class=\"sd\">        theta_list               (list): orientations of annotations</span>\n<span class=\"sd\">        species_list             (list):</span>\n<span class=\"sd\">        nid_list                 (list):</span>\n<span class=\"sd\">        name_list                (list):</span>\n<span class=\"sd\">        detect_confidence_list   (list):</span>\n<span class=\"sd\">        notes_list               (list):</span>\n<span class=\"sd\">        vert_list                (list): alternative to bounding box</span>\n<span class=\"sd\">        annot_uuid_list          (list):</span>\n<span class=\"sd\">        yaw_list                 (list):</span>\n<span class=\"sd\">        annot_visual_uuid_list   (list):</span>\n<span class=\"sd\">        annot_semantic_uuid_list (list):</span>\n<span class=\"sd\">        quiet_delete_thumbs      (bool):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: aid_list</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-add_annots</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-add_annots --verbose --print-caller</span>\n\n<span class=\"sd\">    Ignore:</span>\n<span class=\"sd\">       theta_list = None</span>\n<span class=\"sd\">       species_list = None</span>\n<span class=\"sd\">       nid_list = None</span>\n<span class=\"sd\">       name_list = None</span>\n<span class=\"sd\">       detect_confidence_list = None</span>\n<span class=\"sd\">       notes_list = None</span>\n<span class=\"sd\">       vert_list = None</span>\n<span class=\"sd\">       annot_uuid_list = None</span>\n<span class=\"sd\">       yaw_list = None</span>\n<span class=\"sd\">       quiet_delete_thumbs = False</span>\n<span class=\"sd\">       prevent_visual_duplicates = False</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: POST</span>\n<span class=\"sd\">        URL:    /api/annot/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.IBEISControl import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; prevalid = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; num_add = 2</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = ibs.get_valid_gids()[0:num_add]</span>\n<span class=\"sd\">        &gt;&gt;&gt; bbox_list = [(int(w * .1), int(h * .6), int(w * .5), int(h *  .3))</span>\n<span class=\"sd\">        ...              for (w, h) in ibs.get_image_sizes(gid_list)]</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Add a test annotation</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;Testing add_annots&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.add_annots(gid_list, bbox_list=bbox_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; bbox_list2 = ibs.get_annot_bboxes(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; vert_list2 = ibs.get_annot_verts(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; theta_list2 = ibs.get_annot_thetas(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; name_list2 = ibs.get_annot_names(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;Ensure=False. Should get back None chip fpaths&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; chip_fpaths2 = ibs.get_annot_chip_fpath(aid_list, ensure=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert [fpath is None for fpath in chip_fpaths2], &#39;should not have fpaths&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;Ensure=True. Should get back None chip fpaths&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; chip_fpaths = ibs.get_annot_chip_fpath(aid_list, ensure=True)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert all([ut.checkpath(fpath, verbose=True) for fpath in chip_fpaths]), &#39;paths should exist&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(len(aid_list), num_add)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(len(vert_list2[0]), 4)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert bbox_list2 == bbox_list, &#39;bboxes are unequal&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Be sure to remove test annotation</span>\n<span class=\"sd\">        &gt;&gt;&gt; # if this test fails a resetdbs might be nessary</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = &#39;&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; visual_uuid_list = ibs.get_annot_visual_uuids(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; semantic_uuid_list = ibs.get_annot_semantic_uuids(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result += str(visual_uuid_list) + &#39;\\n&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; result += str(semantic_uuid_list) + &#39;\\n&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;Cleaning up. Removing added annotations&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.delete_annots(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert not any([ut.checkpath(fpath, verbose=True) for fpath in chip_fpaths]), &#39;chip paths&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; postvalid = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert prevalid == postvalid, &#39;prevalid != postvalid&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; result += str(postvalid)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [UUID(&#39;30f7639b-5161-a561-2c4f-41aed64e5b65&#39;), UUID(&#39;5ccbb26d-104f-e655-cf2b-cf92e0ad2fd2&#39;)]</span>\n<span class=\"sd\">        [UUID(&#39;58905a72-dd31-c42b-d5b5-2312adfc7cba&#39;), UUID(&#39;dd58665a-2a8b-8e84-4919-038c80bd9be0&#39;)]</span>\n<span class=\"sd\">        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]</span>\n\n<span class=\"sd\">    Example2:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Test with prevent_visual_duplicates on</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.IBEISControl import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; prevalid = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; num_add = 1</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = ibs.get_valid_gids()[0:1] * num_add</span>\n<span class=\"sd\">        &gt;&gt;&gt; bbox_list = [(int(w * .1), int(h * .6), int(w * .5), int(h *  .3))</span>\n<span class=\"sd\">        ...              for (w, h) in ibs.get_image_sizes(gid_list)]</span>\n<span class=\"sd\">        &gt;&gt;&gt; bbox_list2 = [(int(w * .2), int(h * .6), int(w * .5), int(h *  .3))</span>\n<span class=\"sd\">        ...              for (w, h) in ibs.get_image_sizes(gid_list)]</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Add a test annotation</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;Testing add_annots&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list1 = ibs.add_annots(gid_list, bbox_list=bbox_list, prevent_visual_duplicates=True)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list2 = ibs.add_annots(gid_list, bbox_list=bbox_list, prevent_visual_duplicates=True)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list3 = ibs.add_annots(gid_list, bbox_list=bbox_list2, prevent_visual_duplicates=True)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert aid_list1 == aid_list2, &#39;aid_list1 == aid_list2&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert aid_list1 != aid_list3, &#39;aid_list1 != aid_list3&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list_new = aid_list1 + aid_list3</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = aid_list_new</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;Cleaning up. Removing added annotations&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.delete_annots(aid_list_new)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [14, 15]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">assert</span> <span class=\"n\">yaw_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">&#39;yaw is depricated&#39;</span>\n\n    <span class=\"c1\">#ut.embed()</span>\n    <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">VERBOSE</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs] adding annotations&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_all_not_None</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gid_list&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"c1\"># nothing is being added</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs] WARNING: 0 annotations are beign added!&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"nb\">locals</span><span class=\"p\">()))</span>\n        <span class=\"k\">return</span> <span class=\"p\">[]</span>\n\n    <span class=\"n\">preprocess_dict</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">compute_annot_visual_semantic_uuids</span><span class=\"p\">(</span>\n        <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">include_preprocess</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">bbox_list</span><span class=\"o\">=</span><span class=\"n\">bbox_list</span><span class=\"p\">,</span> <span class=\"n\">theta_list</span><span class=\"o\">=</span><span class=\"n\">theta_list</span><span class=\"p\">,</span> <span class=\"n\">vert_list</span><span class=\"o\">=</span><span class=\"n\">vert_list</span><span class=\"p\">,</span>\n        <span class=\"n\">species_list</span><span class=\"o\">=</span><span class=\"n\">species_list</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"o\">=</span><span class=\"n\">species_rowid_list</span><span class=\"p\">,</span>\n        <span class=\"n\">viewpoint_list</span><span class=\"o\">=</span><span class=\"n\">viewpoint_list</span><span class=\"p\">,</span> <span class=\"n\">nid_list</span><span class=\"o\">=</span><span class=\"n\">nid_list</span><span class=\"p\">,</span> <span class=\"n\">name_list</span><span class=\"o\">=</span><span class=\"n\">name_list</span><span class=\"p\">,</span>\n        <span class=\"n\">skip_cleaning</span><span class=\"o\">=</span><span class=\"n\">skip_cleaning</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">bbox_list</span>          <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;bbox_list&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">theta_list</span>         <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;theta_list&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">vert_list</span>          <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;vert_list&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;species_rowid_list&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">viewpoint_list</span>     <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;viewpoint_list&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">viewpoint_ints</span>     <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;viewpoint_ints&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">nid_list</span>           <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;nid_list&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Build ~~deterministic?~~ random and unique ANNOTATION ids</span>\n    <span class=\"k\">if</span> <span class=\"n\">annot_uuid_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">annot_uuid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">))]</span>\n\n    <span class=\"c1\"># FIXME</span>\n    <span class=\"c1\"># Careful this code is very fragile. It might go out of sync</span>\n    <span class=\"c1\"># with the updating of the determenistic uuids. Find a way to</span>\n    <span class=\"c1\"># integrate both pieces of code without too much reundancy.</span>\n    <span class=\"c1\"># Make sure these tuples are constructed correctly</span>\n    <span class=\"k\">if</span> <span class=\"n\">annot_visual_uuid_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">annot_visual_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;visual_uuid_list&#39;</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"n\">annot_semantic_uuid_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">annot_semantic_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">preprocess_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;semantic_uuid_list&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">detect_confidence_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">detect_confidence_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">))]</span>\n    <span class=\"k\">if</span> <span class=\"n\">notes_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">notes_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;&#39;</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">))]</span>\n    <span class=\"k\">if</span> <span class=\"n\">quality_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">quality_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">multiple_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">multiple_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">interest_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">interest_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n\n    <span class=\"n\">nVert_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">verts</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">verts</span> <span class=\"ow\">in</span> <span class=\"n\">vert_list</span><span class=\"p\">]</span>\n    <span class=\"n\">vertstr_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">text_type</span><span class=\"p\">(</span><span class=\"n\">verts</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">verts</span> <span class=\"ow\">in</span> <span class=\"n\">vert_list</span><span class=\"p\">]</span>\n    <span class=\"n\">xtl_list</span><span class=\"p\">,</span> <span class=\"n\">ytl_list</span><span class=\"p\">,</span> <span class=\"n\">width_list</span><span class=\"p\">,</span> <span class=\"n\">height_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">bbox_list</span><span class=\"p\">))</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nVert_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">vertstr_list</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">staged_uuid_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">staged_uuid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">is_staged_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">staged_uuid</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n        <span class=\"k\">for</span> <span class=\"n\">staged_uuid</span> <span class=\"ow\">in</span> <span class=\"n\">staged_uuid_list</span>\n    <span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"n\">staged_user_id_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">staged_user_id_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Define arguments to insert</span>\n    <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">odict</span><span class=\"p\">([</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_uuid&#39;</span><span class=\"p\">,</span> <span class=\"n\">annot_uuid_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;image_rowid&#39;</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_xtl&#39;</span><span class=\"p\">,</span> <span class=\"n\">xtl_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_ytl&#39;</span><span class=\"p\">,</span> <span class=\"n\">ytl_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_width&#39;</span><span class=\"p\">,</span> <span class=\"n\">width_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_height&#39;</span><span class=\"p\">,</span> <span class=\"n\">height_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_theta&#39;</span><span class=\"p\">,</span> <span class=\"n\">theta_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_num_verts&#39;</span><span class=\"p\">,</span> <span class=\"n\">nVert_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_verts&#39;</span><span class=\"p\">,</span> <span class=\"n\">vertstr_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_viewpoint&#39;</span><span class=\"p\">,</span> <span class=\"n\">viewpoint_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_quality&#39;</span><span class=\"p\">,</span> <span class=\"n\">quality_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_toggle_multiple&#39;</span><span class=\"p\">,</span> <span class=\"n\">multiple_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_toggle_interest&#39;</span><span class=\"p\">,</span> <span class=\"n\">interest_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_detect_confidence&#39;</span><span class=\"p\">,</span> <span class=\"n\">detect_confidence_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_note&#39;</span><span class=\"p\">,</span> <span class=\"n\">notes_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;name_rowid&#39;</span><span class=\"p\">,</span> <span class=\"n\">nid_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;species_rowid&#39;</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_viewpoint_int&#39;</span><span class=\"p\">,</span> <span class=\"n\">viewpoint_ints</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_visual_uuid&#39;</span><span class=\"p\">,</span> <span class=\"n\">annot_visual_uuid_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_semantic_uuid&#39;</span><span class=\"p\">,</span> <span class=\"n\">annot_semantic_uuid_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_staged_flag&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_staged_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_staged_uuid&#39;</span><span class=\"p\">,</span> <span class=\"n\">staged_uuid_list</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_staged_user_identity&#39;</span><span class=\"p\">,</span> <span class=\"n\">staged_user_id_list</span><span class=\"p\">),</span>\n    <span class=\"p\">])</span>\n\n    <span class=\"n\">check_uuid_flags</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">auuid</span><span class=\"p\">,</span> <span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">UUID</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">auuid</span> <span class=\"ow\">in</span> <span class=\"n\">annot_uuid_list</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">check_uuid_flags</span><span class=\"p\">):</span>\n        <span class=\"n\">pos</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">list_where</span><span class=\"p\">(</span><span class=\"n\">check_uuid_flags</span><span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;positions </span><span class=\"si\">%r</span><span class=\"s1\"> have malformated UUIDS&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">,))</span>\n\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n    <span class=\"n\">params_iter</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())</span>\n\n    <span class=\"c1\"># Execute add ANNOTATIONs SQL</span>\n    <span class=\"k\">if</span> <span class=\"n\">prevent_visual_duplicates</span><span class=\"p\">:</span>\n        <span class=\"c1\"># superkey_paramx = (len(colnames) - 2,)</span>\n        <span class=\"n\">superkey_paramx</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">colnames</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s1\">&#39;annot_visual_uuid&#39;</span><span class=\"p\">),)</span>\n        <span class=\"n\">get_rowid_from_superkey</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_aids_from_visual_uuid</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c1\"># superkey_paramx = (0,)</span>\n        <span class=\"n\">superkey_paramx</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">colnames</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s1\">&#39;annot_uuid&#39;</span><span class=\"p\">),)</span>\n        <span class=\"n\">get_rowid_from_superkey</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_aids_from_uuid</span>\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">add_cleanly</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">params_iter</span><span class=\"p\">,</span>\n                                  <span class=\"n\">get_rowid_from_superkey</span><span class=\"p\">,</span> <span class=\"n\">superkey_paramx</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Updates both semantic and visual uuids</span>\n    <span class=\"c1\"># WE NEED TO DO THIS BEFOREHAND DUE TO VISUAL DUPLICATES</span>\n    <span class=\"c1\"># ibs.update_annot_visual_uuids(aid_list)</span>\n\n    <span class=\"c1\"># Invalidate image thumbnails, quiet_delete_thumbs causes no output on deletion from ut</span>\n    <span class=\"k\">if</span> <span class=\"n\">delete_thumb</span><span class=\"p\">:</span>\n        <span class=\"n\">config2_</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;thumbsize&#39;</span><span class=\"p\">:</span> <span class=\"mi\">221</span><span class=\"p\">}</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_image_thumbs</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">quiet</span><span class=\"o\">=</span><span class=\"n\">quiet_delete_thumbs</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config2_</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">aid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_visual_uuid_info\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_visual_uuid_info\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/uuid/visual/info/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_visual_uuid_info</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n\n<span class=\"sd\">    Returns information used to compute annotation UUID.</span>\n<span class=\"sd\">    The image uuid, annotation verticies, are theta is hashted together to</span>\n<span class=\"sd\">      compute the visual uuid.</span>\n<span class=\"sd\">     The visual uuid does not include name or species information.</span>\n\n<span class=\"sd\">    get_annot_visual_uuid_info</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        tuple: visual_infotup (image_uuid_list, verts_list, theta_list)</span>\n\n<span class=\"sd\">    SeeAlso:</span>\n<span class=\"sd\">        get_annot_visual_uuids</span>\n<span class=\"sd\">        get_annot_semantic_uuid_info</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_visual_uuid_info</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[0:2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; visual_infotup = ibs.get_annot_visual_uuid_info(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(list(zip(*visual_infotup))[0])</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        (UUID(&#39;66ec193a-1619-b3b6-216d-1784b4833b61&#39;), ((0, 0), (1047, 0), (1047, 715), (0, 715)), 0.0)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># image_uuid_list = ibs.get_annot_image_uuids(aid_list)</span>\n    <span class=\"c1\"># verts_list      = ibs.get_annot_verts(aid_list)</span>\n    <span class=\"c1\"># theta_list      = ibs.get_annot_thetas(aid_list)</span>\n    <span class=\"c1\"># #visual_info_iter = zip(image_uuid_list, verts_list, theta_list, yaw_list)</span>\n    <span class=\"c1\"># #visual_info_list = list(visual_info_iter)</span>\n    <span class=\"c1\"># visual_infotup = (image_uuid_list, verts_list, theta_list)</span>\n\n    <span class=\"c1\"># Use predefined attributes</span>\n    <span class=\"n\">annots</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">annots</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">visual_infotup</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">annots</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">VISUAL_TUP_PROPS</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">visual_infotup</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_semantic_uuid_info\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_semantic_uuid_info\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/uuid/semantic/info/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_semantic_uuid_info</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">_visual_infotup</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Semenatic uuids are made up of visual and semantic information. Semantic</span>\n<span class=\"sd\">    information is name, species, yaw.  Visual info is image uuid, verts,</span>\n<span class=\"sd\">    and theta</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n<span class=\"sd\">        _visual_infotup (tuple) : internal use only</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        tuple:  semantic_infotup (image_uuid_list, verts_list, theta_list, yaw_list, name_list, species_list)</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_semantic_uuid_info</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[0:2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; semantic_infotup = ibs.get_annot_semantic_uuid_info(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ut.repr2(list(zip(*semantic_infotup))[1])</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        (UUID(&#39;d8903434-942f-e0f5-d6c2-0dcbe3137bf7&#39;), ((0, 0), (1035, 0), (1035, 576), (0, 576)), 0.0, &#39;left&#39;, &#39;easy&#39;, &#39;zebra_plains&#39;)</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># Semantic info depends on visual info</span>\n    <span class=\"k\">if</span> <span class=\"n\">_visual_infotup</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">visual_infotup</span> <span class=\"o\">=</span> <span class=\"n\">get_annot_visual_uuid_info</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">visual_infotup</span> <span class=\"o\">=</span> <span class=\"n\">_visual_infotup</span>\n\n    <span class=\"c1\"># Use predefined attributes</span>\n    <span class=\"n\">annots</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">annots</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">other_part</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">annots</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">SEMANTIC_TUP_PROPS</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># image_uuid_list, verts_list, theta_list = visual_infotup</span>\n    <span class=\"c1\"># It is visual info augmented with name and species</span>\n    <span class=\"c1\"># name_list       = ibs.get_annot_names(aid_list)</span>\n    <span class=\"c1\"># species_list    = ibs.get_annot_species_texts(aid_list)</span>\n    <span class=\"c1\"># viewpoint_codes = ibs.get_annot_viewpoint_code(aid_list)</span>\n\n    <span class=\"n\">semantic_infotup</span> <span class=\"o\">=</span> <span class=\"n\">visual_infotup</span> <span class=\"o\">+</span> <span class=\"n\">other_part</span>\n    <span class=\"c1\"># (image_uuid_list, verts_list, theta_list, viewpoint_codes, name_list,</span>\n    <span class=\"c1\">#  species_list)</span>\n    <span class=\"k\">return</span> <span class=\"n\">semantic_infotup</span></div>\n\n\n<div class=\"viewcode-block\" id=\"update_annot_semantic_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.update_annot_semantic_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">ANNOT_SEMANTIC_UUID</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/uuid/semantic/&#39;, methods=[&#39;PUT&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">update_annot_semantic_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">_visual_infotup</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Ensures that annots have the proper semantic uuids</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">semantic_infotup</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_semantic_uuid_info</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">_visual_infotup</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">semantic_infotup</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s1\">&#39;len=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">semantic_infotup</span><span class=\"p\">),)</span>\n    <span class=\"n\">annot_semantic_uuid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">augment_uuid</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tup</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">semantic_infotup</span><span class=\"p\">)]</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_SEMANTIC_UUID</span><span class=\"p\">,),</span> <span class=\"n\">annot_semantic_uuid_list</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"update_annot_visual_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.update_annot_visual_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span>\n                                   <span class=\"p\">[</span><span class=\"n\">ANNOT_VISUAL_UUID</span><span class=\"p\">,</span> <span class=\"n\">ANNOT_SEMANTIC_UUID</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/uuid/visual/&#39;, methods=[&#39;PUT&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">update_annot_visual_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Ensures that annots have the proper visual uuids</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (list):  list of annotation rowids</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs update_annot_visual_uuids --db PZ_Master1</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs update_annot_visual_uuids</span>\n<span class=\"sd\">        python -m ibeis update_annot_visual_uuids --db PZ_Master1</span>\n<span class=\"sd\">        python -m ibeis update_annot_visual_uuids --db PZ_Master0</span>\n<span class=\"sd\">        python -m ibeis update_annot_visual_uuids --db PZ_MTEST</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs._get_all_aids()[0:1]</span>\n<span class=\"sd\">        &gt;&gt;&gt; update_annot_visual_uuids(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ibs.get_annot_visual_uuids(aid_list)[0]</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        8687dcb6-1f1f-fdd3-8b72-8f36f9f41905</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">visual_infotup</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_visual_uuid_info</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;visual_infotup = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">visual_infotup</span><span class=\"p\">,))</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">visual_infotup</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;len=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">visual_infotup</span><span class=\"p\">),)</span>\n    <span class=\"n\">annot_visual_uuid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">augment_uuid</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tup</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">visual_infotup</span><span class=\"p\">)]</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_VISUAL_UUID</span><span class=\"p\">,),</span> <span class=\"n\">annot_visual_uuid_list</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># If visual uuids are changes semantic ones are also changed</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">update_annot_semantic_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">_visual_infotup</span><span class=\"o\">=</span><span class=\"n\">visual_infotup</span><span class=\"p\">)</span></div>\n\n\n<span class=\"c1\"># ==========</span>\n<span class=\"c1\"># IDERS</span>\n<span class=\"c1\"># ==========</span>\n\n<span class=\"c1\"># TODO CACHE THIS AND FIND WHAT IT SHOULD INVALIDATE IT</span>\n<span class=\"c1\"># ADD ANNOTS, DELETE ANNOTS ANYTHING ELSE?</span>\n<span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">ider</span>\n<span class=\"k\">def</span> <span class=\"nf\">_get_all_aids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list):  all unfiltered aids (annotation rowids)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">all_aids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get_all_rowids</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">all_aids</span>\n\n\n<div class=\"viewcode-block\" id=\"get_num_annotations\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_num_annotations\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_num_annotations</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Number of valid annotations</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_valid_aids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_valid_aids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">ider</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_valid_aids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">imgsetid</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                   <span class=\"n\">include_only_gid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                   <span class=\"n\">yaw</span><span class=\"o\">=</span><span class=\"s1\">&#39;no-filter&#39;</span><span class=\"p\">,</span>\n                   <span class=\"n\">is_exemplar</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                   <span class=\"n\">is_staged</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                   <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                   <span class=\"n\">is_known</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                   <span class=\"n\">hasgt</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                   <span class=\"n\">minqual</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                   <span class=\"n\">has_timestamp</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                   <span class=\"n\">min_timedelta</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    High level function for getting all annotation ids according a set of filters.</span>\n\n<span class=\"sd\">    Note: The yaw value cannot be None as a default because None is used as a</span>\n<span class=\"sd\">          filtering value</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        imgsetid (int): imageset id (default = None)</span>\n<span class=\"sd\">        include_only_gid_list (list): if specified filters annots not in these gids (default = None)</span>\n<span class=\"sd\">        yaw (str): (default = &#39;no-filter&#39;)</span>\n<span class=\"sd\">        is_exemplar (bool): if specified filters annots to either be or not be exemplars (default = None)</span>\n<span class=\"sd\">        species (str): (default = None)</span>\n<span class=\"sd\">        is_known (bool): (default = None)</span>\n<span class=\"sd\">        min_timedelta (int): minimum timedelta between annots of known individuals</span>\n<span class=\"sd\">        hasgt (bool): (default = None)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: aid_list - a list of valid ANNOTATION unique ids</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_valid_aids</span>\n\n<span class=\"sd\">    Ignore:</span>\n<span class=\"sd\">        ibs.print_annotation_table()</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.exec_funckw(get_valid_aids, globals())</span>\n<span class=\"sd\">        &gt;&gt;&gt; imgsetid = 1</span>\n<span class=\"sd\">        &gt;&gt;&gt; yaw = &#39;no-filter&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; species = ibs.const.TEST_SPECIES.ZEB_PLAIN</span>\n<span class=\"sd\">        &gt;&gt;&gt; is_known = False</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.delete_all_imagesets()</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.compute_occurrences(config={&#39;use_gps&#39;: False, &#39;seconds_thresh&#39;: 600})</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = get_valid_aids(ibs, imgsetid=imgsetid, species=species, is_known=is_known)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(ibs.get_annot_names(aid_list), [ibs.const.UNKNOWN] * 2, &#39;bad name&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(ibs.get_annot_species(aid_list), [species] * 2, &#39;bad species&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(ibs.get_annot_exemplar_flags(aid_list), [False] * 2, &#39;bad exemplar&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n\n<span class=\"sd\">        [1, 4]</span>\n\n<span class=\"sd\">    Example1:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list1 = get_valid_aids(ibs, is_exemplar=True)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list2 = get_valid_aids(ibs, is_exemplar=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; intersect_aids = set(aid_list1).intersection(aid_list2)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(len(aid_list1), 9)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(len(aid_list2), 4)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(len(intersect_aids), 0)</span>\n\n<span class=\"sd\">    Ignore:</span>\n<span class=\"sd\">        import utool as ut</span>\n<span class=\"sd\">        setup = ut.codeblock(</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span>\n<span class=\"sd\">            import ibeis</span>\n<span class=\"sd\">            ibs = ibeis.opendb(&#39;PZ_Master1&#39;)</span>\n<span class=\"sd\">            &#39;&#39;&#39;</span>\n<span class=\"sd\">        )</span>\n<span class=\"sd\">        stmt_list = [</span>\n<span class=\"sd\">            ut.codeblock(</span>\n<span class=\"sd\">                &#39;&#39;&#39;</span>\n<span class=\"sd\">                ibs.db.get_all_rowids_where(ibs.const.ANNOTATION_TABLE, ibeis.control.DB_SCHEMA.ANNOT_PARENT_ROWID + &quot; IS NULL&quot;, tuple())</span>\n<span class=\"sd\">                &#39;&#39;&#39;),</span>\n<span class=\"sd\">            ut.codeblock(</span>\n<span class=\"sd\">                &#39;&#39;&#39;</span>\n<span class=\"sd\">                ibs.db.get_all_rowids(ibs.const.ANNOTATION_TABLE)</span>\n<span class=\"sd\">                &#39;&#39;&#39;),</span>\n<span class=\"sd\">        ]</span>\n<span class=\"sd\">        iterations = 100</span>\n<span class=\"sd\">        verbose = True</span>\n<span class=\"sd\">        _ = ut.timeit_compare(stmt_list, setup=setup, iterations=iterations, verbose=verbose)</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># exemplar &quot;imageset&quot; (image group)</span>\n    <span class=\"k\">if</span> <span class=\"n\">imgsetid</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">_get_all_aids</span><span class=\"p\">()</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">imagesettext</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_imageset_text</span><span class=\"p\">(</span><span class=\"n\">imgsetid</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">imagesettext</span> <span class=\"o\">==</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">EXEMPLAR_IMAGESETTEXT</span><span class=\"p\">:</span>\n            <span class=\"n\">is_exemplar</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_imageset_aids</span><span class=\"p\">(</span><span class=\"n\">imgsetid</span><span class=\"p\">)</span>\n\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">filter_annotation_set</span><span class=\"p\">(</span>\n        <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">include_only_gid_list</span><span class=\"o\">=</span><span class=\"n\">include_only_gid_list</span><span class=\"p\">,</span> <span class=\"n\">yaw</span><span class=\"o\">=</span><span class=\"n\">yaw</span><span class=\"p\">,</span>\n        <span class=\"n\">is_exemplar</span><span class=\"o\">=</span><span class=\"n\">is_exemplar</span><span class=\"p\">,</span> <span class=\"n\">is_staged</span><span class=\"o\">=</span><span class=\"n\">is_staged</span><span class=\"p\">,</span> <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"n\">species</span><span class=\"p\">,</span>\n        <span class=\"n\">is_known</span><span class=\"o\">=</span><span class=\"n\">is_known</span><span class=\"p\">,</span> <span class=\"n\">hasgt</span><span class=\"o\">=</span><span class=\"n\">hasgt</span><span class=\"p\">,</span> <span class=\"n\">minqual</span><span class=\"o\">=</span><span class=\"n\">minqual</span><span class=\"p\">,</span>\n        <span class=\"n\">has_timestamp</span><span class=\"o\">=</span><span class=\"n\">has_timestamp</span><span class=\"p\">,</span> <span class=\"n\">min_timedelta</span><span class=\"o\">=</span><span class=\"n\">min_timedelta</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">aid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"annotation_src_api\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.annotation_src_api\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/&lt;rowid&gt;/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">annotation_src_api</span><span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns the base64 encoded image of annotation &lt;aid&gt;</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/&lt;aid&gt;/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">routes_ajax</span><span class=\"o\">.</span><span class=\"n\">annotation_src</span><span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"filter_annotation_set\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.filter_annotation_set\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">filter_annotation_set</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">include_only_gid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                          <span class=\"n\">yaw</span><span class=\"o\">=</span><span class=\"s1\">&#39;no-filter&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_exemplar</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">is_staged</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                          <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">is_known</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">hasgt</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">minqual</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                          <span class=\"n\">has_timestamp</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">min_timedelta</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"c1\"># -- valid aid filtering --</span>\n    <span class=\"c1\"># filter by is_exemplar</span>\n    <span class=\"k\">if</span> <span class=\"n\">is_exemplar</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"c1\"># corresponding unoptimized hack for is_exemplar</span>\n        <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_exemplar_flags</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">aid_list</span>  <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">is_exemplar</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_exemplar_flags</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">aid_list</span>  <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filterfalse_items</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># filter by is_staged</span>\n    <span class=\"k\">if</span> <span class=\"n\">is_staged</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"c1\"># corresponding unoptimized hack for is_staged</span>\n        <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_staged_flags</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">aid_list</span>  <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">is_staged</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_staged_flags</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">aid_list</span>  <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filterfalse_items</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">include_only_gid_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">gid_list</span>     <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">is_valid_gid</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">gid</span> <span class=\"ow\">in</span> <span class=\"n\">include_only_gid_list</span> <span class=\"k\">for</span> <span class=\"n\">gid</span> <span class=\"ow\">in</span> <span class=\"n\">gid_list</span><span class=\"p\">]</span>\n        <span class=\"n\">aid_list</span>     <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">is_valid_gid</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">yaw</span> <span class=\"o\">!=</span> <span class=\"s1\">&#39;no-filter&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">yaw_list</span>     <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_yaws</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">is_valid_yaw</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">yaw</span> <span class=\"o\">==</span> <span class=\"n\">flag</span> <span class=\"k\">for</span> <span class=\"n\">flag</span> <span class=\"ow\">in</span> <span class=\"n\">yaw_list</span><span class=\"p\">]</span>\n        <span class=\"n\">aid_list</span>     <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">is_valid_yaw</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">species</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">filter_aids_to_species</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">species</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">is_known</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">filter_aids_without_name</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">invert</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">is_known</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">minqual</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">filter_aids_to_quality</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">minqual</span><span class=\"p\">,</span> <span class=\"n\">unknown_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">has_timestamp</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">filter_aids_without_timestamps</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">invert</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">has_timestamp</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">min_timedelta</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">filter_annots_using_minimum_timedelta</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">min_timedelta</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">hasgt</span><span class=\"p\">:</span>\n        <span class=\"n\">hasgt_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_has_groundtruth</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">hasgt_list</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">sort</span><span class=\"p\">:</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">aid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_aid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_aid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_aid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; self verifier</span>\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.IBEISControl import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids() + [None, -1, 10434320432]</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list_ = ibs.get_annot_aid(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert [r is None for r in aid_list_[-3:]]</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert [r is not None for r in aid_list_[0:-3]]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_ROWID</span><span class=\"p\">,)</span>\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span>\n                          <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"s1\">&#39;rowid&#39;</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"n\">eager</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"n\">nInput</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">aid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_rows\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_rows\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/rows/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_rows</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;get_annot_rows&#39;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_uuid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;image_rowid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_xtl&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_ytl&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;annot_width&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_height&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_theta&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_num_verts&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;annot_verts&#39;</span><span class=\"p\">,</span> <span class=\"n\">ANNOT_YAW</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_detect_confidence&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;annot_note&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;name_rowid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;species_rowid&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;annot_visual_uuid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_semantic_uuid&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">rows_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span>\n                           <span class=\"n\">unpack_scalars</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">rows_list</span></div>\n\n\n<span class=\"c1\"># ==========</span>\n<span class=\"c1\"># DELETERS</span>\n<span class=\"c1\"># ==========</span>\n\n\n<div class=\"viewcode-block\" id=\"delete_annot_nids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.delete_annot_nids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">deleter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/name/rowid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;DELETE&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">delete_annot_nids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Remove name assocation from the list of input aids.</span>\n<span class=\"sd\">    Does this by setting each annotations nid to the UNKNOWN name rowid</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: DELETE</span>\n<span class=\"sd\">        URL:    /api/annot/name/rowid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># FIXME: This should be implicit by setting the anotation name to the</span>\n    <span class=\"c1\"># unknown name</span>\n    <span class=\"c1\">#ibs.delete_annot_relations_oftype(aid_list, const.INDIVIDUAL_KEY)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_NAME_ROWID</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">))</span></div>\n\n\n<div class=\"viewcode-block\" id=\"delete_annot_speciesids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.delete_annot_speciesids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">deleter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/species/rowid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;DELETE&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">delete_annot_speciesids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Deletes nids of a list of annotations</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: DELETE</span>\n<span class=\"sd\">        URL:    /api/annot/species/rowid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># FIXME: This should be implicit by setting the anotation name to the</span>\n    <span class=\"c1\"># unknown species</span>\n    <span class=\"c1\">#ibs.delete_annot_relations_oftype(aid_list, const.SPECIES_KEY)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_species_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_SPECIES_ROWID</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">))</span></div>\n\n\n<div class=\"viewcode-block\" id=\"delete_annots\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.delete_annots\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">deleter</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">IMAGE_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ANNOT_ROWIDS</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">NAME_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ANNOT_ROWIDS</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">IMAGESET_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;percent_names_with_exemplar_str&#39;</span><span class=\"p\">])</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;DELETE&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">delete_annots</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    deletes annotations from the database</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: DELETE</span>\n<span class=\"sd\">        URL:    /api/annot/</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (int):  list of annotation ids</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-delete_annots</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-delete_annots --debug-api-cache</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-delete_annots</span>\n\n<span class=\"sd\">    SeeAlso:</span>\n<span class=\"sd\">        back.delete_annot</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; from os.path import exists</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.delete_empty_nids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Add some annotations to delete</span>\n<span class=\"sd\">        &gt;&gt;&gt; num_add = 2</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = ibs.get_valid_gids()[0:num_add]</span>\n<span class=\"sd\">        &gt;&gt;&gt; nid = ibs.make_next_nids(1)[0]</span>\n<span class=\"sd\">        &gt;&gt;&gt; nid_list = [nid] * num_add</span>\n<span class=\"sd\">        &gt;&gt;&gt; bbox_list = [(int(w * .1), int(h * .6), int(w * .5), int(h *  .3))</span>\n<span class=\"sd\">        ...              for (w, h) in ibs.get_image_sizes(gid_list)]</span>\n<span class=\"sd\">        &gt;&gt;&gt; new_aid_list = ibs.add_annots(gid_list, bbox_list=bbox_list,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                               nid_list=nid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.get_annot_nids(new_aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_lists_eq(ibs.get_annot_nids(new_aid_list), nid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert ibs.get_name_aids(nid) == new_aid_list, &#39;annots should all have same name&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert new_aid_list == ibs.get_name_aids(nid), &#39;inverse name mapping should work&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; #thumpaths = ibs.get_image_thumbpath(gid_list, ensure_paths=True, **{&#39;thumbsize&#39;: 221})</span>\n<span class=\"sd\">        &gt;&gt;&gt; #assert any(ut.lmap(exists, thumpaths)), &#39;thumbs should be there&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; before_aids = ibs.get_image_aids(gid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;BEFORE gids: &#39; + str(before_aids))</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ibs.delete_annots(new_aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert ibs.get_name_aids(nid) == [], &#39;annots should be removed&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; after_aids = ibs.get_image_aids(gid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; #thumpaths = ibs.get_image_thumbpath(gid_list, ensure_paths=False, **{&#39;thumbsize&#39;: 221})</span>\n<span class=\"sd\">        &gt;&gt;&gt; #assert not any(ut.lmap(exists, thumpaths)), &#39;thumbs should be gone&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert after_aids != before_aids, &#39;the invalidators must have bugs&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;AFTER gids: &#39; + str(after_aids))</span>\n<span class=\"sd\">        &gt;&gt;&gt; valid_aids = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert  [aid not in valid_aids for aid in new_aid_list], &#39;should no longer be valid aids&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.delete_empty_nids()</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">VERBOSE</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs] deleting </span><span class=\"si\">%d</span><span class=\"s1\"> annotations&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">))</span>\n    <span class=\"c1\"># FIXME: Need to reliabely delete thumbnails</span>\n    <span class=\"c1\"># config2_ = {&#39;draw_annots&#39;: True, &#39;thumbsize&#39;: 221}</span>\n    <span class=\"c1\"># MEGA HACK FOR QT</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_annot_imgthumbs</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Delete chips and features first</span>\n    <span class=\"c1\">#ibs.delete_annot_relations(aid_list)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_annot_chips</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">delete_root</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># TODO:</span>\n    <span class=\"c1\"># delete parent rowid column if exists in annot table</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">delete_rowids</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"delete_annot_imgthumbs\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.delete_annot_imgthumbs\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">deleter</span>\n<span class=\"k\">def</span> <span class=\"nf\">delete_annot_imgthumbs</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Less hacky</span>\n    <span class=\"n\">gid_list_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">table_config_filter</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;thumbnails&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;draw_annots&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_image</span><span class=\"o\">.</span><span class=\"n\">delete_root</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">,</span> <span class=\"n\">table_config_filter</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># MEGA HACK FOR QT</span>\n    <span class=\"n\">config2_</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;thumbsize&#39;</span><span class=\"p\">:</span> <span class=\"mi\">221</span><span class=\"p\">}</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_image_thumbs</span><span class=\"p\">(</span><span class=\"n\">gid_list_</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config2_</span><span class=\"p\">)</span></div>\n    <span class=\"c1\"># ibs.delete_image_thumbs(gid_list_)</span>\n\n\n<span class=\"c1\"># ==========</span>\n<span class=\"c1\"># GETTERS</span>\n<span class=\"c1\"># ==========</span>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_aids_from_semantic_uuid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_aids_from_semantic_uuid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/aids/uuid/semantic/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_aids_from_semantic_uuid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">semantic_uuid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        semantic_uuid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot rowids</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">aids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_ROWID</span><span class=\"p\">,),</span>\n                           <span class=\"n\">semantic_uuid_list</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"n\">ANNOT_SEMANTIC_UUID</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">aids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_aids_from_uuid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_aids_from_uuid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/rowid/uuid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_aids_from_uuid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">uuid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): annot rowids</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/rowid/uuid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># FIXME: MAKE SQL-METHOD FOR NON-ROWID GETTERS</span>\n    <span class=\"n\">aids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_ROWID</span><span class=\"p\">,),</span> <span class=\"n\">uuid_list</span><span class=\"p\">,</span>\n                           <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"n\">ANNOT_UUID</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">aids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_missing_uuid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_missing_uuid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/uuid/missing/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_missing_uuid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">uuid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): a list of missing annot uuids</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_aids_from_uuid</span><span class=\"p\">(</span><span class=\"n\">uuid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">zipped</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">uuid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">missing_uuid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"n\">uuid</span> <span class=\"k\">for</span> <span class=\"n\">aid</span><span class=\"p\">,</span> <span class=\"n\">uuid</span> <span class=\"ow\">in</span> <span class=\"n\">zipped</span> <span class=\"k\">if</span> <span class=\"n\">aid</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">missing_uuid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_aids_from_visual_uuid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_aids_from_visual_uuid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/aids/uuid/visual/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_aids_from_visual_uuid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">visual_uuid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        visual_uuid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot rowids</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">aids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_ROWID</span><span class=\"p\">,),</span>\n                           <span class=\"n\">visual_uuid_list</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"n\">ANNOT_VISUAL_UUID</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">aids_list</span></div>\n\n<span class=\"n\">get_annot_rowids_from_visual_uuid</span> <span class=\"o\">=</span> <span class=\"n\">get_annot_aids_from_visual_uuid</span>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_bboxes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_bboxes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@ut</span><span class=\"o\">.</span><span class=\"n\">accepts_numpy</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1toM</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/bbox/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_bboxes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        bbox_list (list):  annotation bounding boxes in image space</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/bbox/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_xtl&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_ytl&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_width&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_height&#39;</span><span class=\"p\">,)</span>\n    <span class=\"n\">bbox_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">bbox_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_class_labels\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_class_labels\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/labels/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_class_labels</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    DEPRICATE?</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list of tuples: identifying animal name and view</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># TODO: use yaw?</span>\n    <span class=\"n\">yaw_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">name_list</span><span class=\"p\">]</span>\n    <span class=\"n\">classlabel_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">name_list</span><span class=\"p\">,</span> <span class=\"n\">yaw_list</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">classlabel_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_detect_confidence\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_detect_confidence\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/detect/confidence/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_detect_confidence</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): a list confidences that the annotations is a valid detection</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/detect/confidence/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_detect_confidence_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span>\n                                              <span class=\"p\">(</span><span class=\"s1\">&#39;annot_detect_confidence&#39;</span><span class=\"p\">,),</span>\n                                              <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_detect_confidence_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_exemplar_flags\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_exemplar_flags\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/exemplar/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_exemplar_flags</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    returns if an annotation is an exemplar</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (int):  list of annotation ids</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_exemplar_flag_list - True if annotation is an exemplar</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_exemplar_flags</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/exemplar/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = get_annot_exemplar_flags(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(gid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_exemplar_flag_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span>\n                                          <span class=\"p\">(</span><span class=\"s1\">&#39;annot_exemplar_flag&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_exemplar_flag_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_gids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_gids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@ut</span><span class=\"o\">.</span><span class=\"n\">accepts_numpy</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\">#@cache_getter(const.ANNOTATION_TABLE, &#39;image_rowid&#39;)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/image/rowid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Get parent image rowids of annotations</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        gid_list (list):  image rowids</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/image/rowid/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_annot_gids(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;image_rowid&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"n\">assume_unique</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">gid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_image_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_image_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_image_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_imgsetids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_imgsetids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@ut</span><span class=\"o\">.</span><span class=\"n\">accepts_numpy</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\">#@cache_getter(const.ANNOTATION_TABLE, &#39;image_rowid&#39;)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/imageset/rowid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_imgsetids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Get parent image rowids of annotations</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        imgsetid_list (list):  imageset rowids</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/imageset/rowid/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_annot_gids(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;image_rowid&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">imgsetids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_imgsetids</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">imgsetids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_imgset_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_imgset_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@ut</span><span class=\"o\">.</span><span class=\"n\">accepts_numpy</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\">#@cache_getter(const.ANNOTATION_TABLE, &#39;image_rowid&#39;)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/imageset/uuid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_imgset_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Get parent image rowids of annotations</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        imgset_uuid_list (list):  imageset uuids</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/imageset/uuid/</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">imgsetids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_imgsetids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">imgset_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_imageset_uuid</span><span class=\"p\">(</span><span class=\"n\">imgsetids_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">imgset_uuid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_gar_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_gar_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1toM</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/gar/rowid/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_gar_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;get_annot_gar_rowids&#39;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">GAR_ROWID</span><span class=\"p\">,)</span>\n    <span class=\"n\">gar_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">GA_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span>\n                                <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"n\">ANNOT_ROWID</span><span class=\"p\">,</span> <span class=\"n\">unpack_scalars</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">gar_rowid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_otherimage_aids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_otherimage_aids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1toM</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/aids/otherimage/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_otherimage_aids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;get_annot_otherimage_aids&#39;</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"n\">assume_unique</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">daid_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">image_aids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_aids</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Remove self from list</span>\n        <span class=\"n\">other_aids_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"p\">{</span><span class=\"n\">aid</span><span class=\"p\">})</span>\n                           <span class=\"k\">for</span> <span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">image_aids_list</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">)]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">daids</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">internal_data_gids</span>  <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">daids</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"n\">assume_unique</span><span class=\"p\">)</span>\n        <span class=\"n\">other_aids_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">daids</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">internal_data_gids</span> <span class=\"o\">==</span> <span class=\"n\">gid</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">gid</span> <span class=\"ow\">in</span> <span class=\"n\">gid_list</span>\n        <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">other_aids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_contact_aids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_contact_aids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1toM</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/aids/contact/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_contact_aids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">check_isect</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns the other aids that appear in the same image that this</span>\n<span class=\"sd\">    annotation is from.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_contact_aids;1</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; contact_aids = ibs.get_annot_contact_aids(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; contact_gids = ibs.unflat_map(ibs.get_annot_gids, contact_aids)</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = ibs.get_annot_gids(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; for gids, gid, aids, aid in zip(contact_gids, gid_list, contact_aids, aid_list):</span>\n<span class=\"sd\">        ...     assert ut.allsame(gids), &#39;annots should be from same image&#39;</span>\n<span class=\"sd\">        ...     assert len(gids) == 0 or gids[0] == gid, &#39;and same image as parent annot&#39;</span>\n<span class=\"sd\">        ...     assert aid not in aids, &#39;should not include self&#39;</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb2&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; contact_aids = ibs.get_annot_contact_aids(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; contact_gids = ibs.unflat_map(ibs.get_annot_gids, contact_aids)</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = ibs.get_annot_gids(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;contact_aids = %r&#39; % (contact_aids,))</span>\n<span class=\"sd\">        &gt;&gt;&gt; for gids, gid, aids, aid in zip(contact_gids, gid_list, contact_aids, aid_list):</span>\n<span class=\"sd\">        ...     assert ut.allsame(gids), &#39;annots should be from same image&#39;</span>\n<span class=\"sd\">        ...     assert len(gids) == 0 or gids[0] == gid, &#39;and same image as parent annot&#39;</span>\n<span class=\"sd\">        ...     assert aid not in aids, &#39;should not include self&#39;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">other_aids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_otherimage_aids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"n\">daid_list</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"n\">assume_unique</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">check_isect</span><span class=\"p\">:</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">shapely.geometry</span>\n        <span class=\"c1\"># TODO: might not be accounting for rotated verticies</span>\n        <span class=\"n\">verts_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_verts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">other_verts_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">unflat_map</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_verts</span><span class=\"p\">,</span> <span class=\"n\">other_aids_list</span><span class=\"p\">)</span>\n        <span class=\"n\">poly_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">shapely</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"o\">.</span><span class=\"n\">Polygon</span><span class=\"p\">(</span><span class=\"n\">verts</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">verts</span> <span class=\"ow\">in</span> <span class=\"n\">verts_list</span><span class=\"p\">]</span>\n        <span class=\"n\">other_polys_list</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">shapely</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"o\">.</span><span class=\"n\">Polygon</span><span class=\"p\">(</span><span class=\"n\">verts</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">verts</span> <span class=\"ow\">in</span> <span class=\"n\">_</span><span class=\"p\">]</span>\n                            <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">other_verts_list</span><span class=\"p\">]</span>\n        <span class=\"n\">flags_list</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">p1</span><span class=\"o\">.</span><span class=\"n\">intersects</span><span class=\"p\">(</span><span class=\"n\">p2</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">p2</span> <span class=\"ow\">in</span> <span class=\"n\">p2_list</span><span class=\"p\">]</span>\n                      <span class=\"k\">for</span> <span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"n\">p2_list</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">poly_list</span><span class=\"p\">,</span> <span class=\"n\">other_polys_list</span><span class=\"p\">)]</span>\n        <span class=\"n\">contact_aids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">other_aids</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"p\">)</span>\n                        <span class=\"k\">for</span> <span class=\"n\">other_aids</span><span class=\"p\">,</span> <span class=\"n\">flags</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">other_aids_list</span><span class=\"p\">,</span> <span class=\"n\">flags_list</span><span class=\"p\">)]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">contact_aids</span> <span class=\"o\">=</span> <span class=\"n\">other_aids_list</span>\n    <span class=\"k\">return</span> <span class=\"n\">contact_aids</span></div>\n\n\n<span class=\"c1\">#@register_ibs_method</span>\n<span class=\"c1\">#@accessor_decors.getter_1toM</span>\n<span class=\"c1\">#def get_annot_intersecting_aids(ibs, aid_list):</span>\n<span class=\"c1\">#    pass</span>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_num_contact_aids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_num_contact_aids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_num_contact_aids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;get_annot_num_contact_aids&#39;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">nOther_aids_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_contact_aids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)))</span>\n    <span class=\"k\">return</span> <span class=\"n\">nOther_aids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_groundfalse\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_groundfalse\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1toM</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_groundfalse</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">valid_aids</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                          <span class=\"n\">filter_unknowns</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    gets all annotations with different names</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        groundfalse_list (list): a list of aids which are known to be different for each</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">       &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">       &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">       &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">       &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">       &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">       &gt;&gt;&gt; groundfalse_list = get_annot_groundfalse(ibs, aid_list)</span>\n<span class=\"sd\">       &gt;&gt;&gt; result = str(groundfalse_list)</span>\n<span class=\"sd\">       &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">valid_aids</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"c1\"># get all valid aids if not specified</span>\n        <span class=\"n\">valid_aids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">daid_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">valid_aids</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">intersection</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">valid_aids</span><span class=\"p\">)))</span>\n    <span class=\"k\">if</span> <span class=\"n\">filter_unknowns</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Remove aids which do not have a name</span>\n        <span class=\"n\">isunknown_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">is_aid_unknown</span><span class=\"p\">(</span><span class=\"n\">valid_aids</span><span class=\"p\">)</span>\n        <span class=\"n\">valid_aids_</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filterfalse_items</span><span class=\"p\">(</span><span class=\"n\">valid_aids</span><span class=\"p\">,</span> <span class=\"n\">isunknown_list</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">valid_aids_</span> <span class=\"o\">=</span> <span class=\"n\">valid_aids</span>\n    <span class=\"c1\"># Build the set of groundfalse annotations</span>\n    <span class=\"c1\"># nid_list = ibs.get_annot_name_rowids(aid_list)</span>\n    <span class=\"c1\"># aids_list = ibs.get_name_aids(nid_list, enable_unknown_fix=True)</span>\n    <span class=\"c1\"># aids_setlist = map(set, aids_list)</span>\n    <span class=\"c1\"># valid_aids = set(valid_aids_)</span>\n    <span class=\"c1\"># groundfalse_list = [list(valid_aids - aids) for aids in aids_setlist]</span>\n\n    <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">nid_to_aids</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">group_items</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">nid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">nid_to_aidset</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">map_dict_vals</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">,</span> <span class=\"n\">nid_to_aids</span><span class=\"p\">)</span>\n    <span class=\"n\">valid_aids</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">valid_aids_</span><span class=\"p\">)</span>\n    <span class=\"n\">groundfalse_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">valid_aids</span> <span class=\"o\">-</span> <span class=\"n\">nid_to_aidset</span><span class=\"p\">[</span><span class=\"n\">nid</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">nid</span> <span class=\"ow\">in</span> <span class=\"n\">nid_list</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">groundfalse_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_groundtruth\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_groundtruth\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1toM</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/groundtruth/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_groundtruth</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">is_exemplar</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">noself</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                          <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    gets all annotations with the same names</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list    (list): list of annotation rowids to get groundtruth of</span>\n<span class=\"sd\">        is_exemplar (None):</span>\n<span class=\"sd\">        noself      (bool):</span>\n<span class=\"sd\">        daid_list   (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        groundtruth_list (list): a list of aids with the same name foreach</span>\n<span class=\"sd\">        aid in aid_list.  a set of aids belonging to the same name is called</span>\n<span class=\"sd\">        a groundtruth.  A list of these is called a groundtruth_list.</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_groundtruth:0</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_groundtruth:1</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_groundtruth:2</span>\n<span class=\"sd\">        python -m --tf get_annot_groundtruth:0 --db=PZ_Master0 --aids=97 --exec-mode</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ut.get_argval(&#39;--aids&#39;, list, ibs.get_valid_aids())</span>\n<span class=\"sd\">        &gt;&gt;&gt; is_exemplar, noself, daid_list = None, True, None</span>\n<span class=\"sd\">        &gt;&gt;&gt; groundtruth_list = ibs.get_annot_groundtruth(aid_list, is_exemplar, noself, daid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = &#39;groundtruth_list = &#39; + str(groundtruth_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        groundtruth_list = [[], [3], [2], [], [6], [5], [], [], [], [], [], [], []]</span>\n\n<span class=\"sd\">    Example1:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; is_exemplar, noself, daid_list = True, True, None</span>\n<span class=\"sd\">        &gt;&gt;&gt; groundtruth_list = ibs.get_annot_groundtruth(aid_list, is_exemplar, noself, daid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(groundtruth_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [[], [3], [2], [], [6], [5], [], [], [], [], [], [], []]</span>\n\n<span class=\"sd\">    Example2:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; is_exemplar, noself, daid_list = False, False, aid_list</span>\n<span class=\"sd\">        &gt;&gt;&gt; groundtruth_list = ibs.get_annot_groundtruth(aid_list, is_exemplar, noself, daid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(groundtruth_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [[1], [], [], [4], [], [], [], [], [9], [], [11], [], []]</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># TODO: Optimize</span>\n    <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\">#if daid_list is not None:</span>\n    <span class=\"c1\">#    # when given a valid pool try to skip the get_name_aids call</span>\n    <span class=\"c1\">#    aids_list_, nid_list_ = ibs.group_annots_by_name(daid_list, distinguish_unknowns=True)</span>\n    <span class=\"c1\">#    nid2_aids = dict(zip(nid_list_, aids_list_))</span>\n    <span class=\"c1\">#    aids_list = ut.dict_take(nid2_aids, nid_list, [])</span>\n    <span class=\"c1\">#else:</span>\n    <span class=\"n\">aids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_name_aids</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">,</span> <span class=\"n\">enable_unknown_fix</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">is_exemplar</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">groundtruth_list_</span> <span class=\"o\">=</span> <span class=\"n\">aids_list</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Filter out non-exemplars</span>\n        <span class=\"n\">exemplar_flags_list</span> <span class=\"o\">=</span> <span class=\"n\">ibsfuncs</span><span class=\"o\">.</span><span class=\"n\">unflat_map</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_exemplar_flags</span><span class=\"p\">,</span> <span class=\"n\">aids_list</span><span class=\"p\">)</span>\n        <span class=\"n\">isvalids_list</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">flag</span> <span class=\"o\">==</span> <span class=\"n\">is_exemplar</span> <span class=\"k\">for</span> <span class=\"n\">flag</span> <span class=\"ow\">in</span> <span class=\"n\">flags</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">flags</span> <span class=\"ow\">in</span> <span class=\"n\">exemplar_flags_list</span><span class=\"p\">]</span>\n        <span class=\"n\">groundtruth_list_</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">isvalids</span><span class=\"p\">)</span>\n                             <span class=\"k\">for</span> <span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">isvalids</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">aids_list</span><span class=\"p\">,</span> <span class=\"n\">isvalids_list</span><span class=\"p\">)]</span>\n    <span class=\"k\">if</span> <span class=\"n\">noself</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Remove yourself from the set</span>\n        <span class=\"n\">groundtruth_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"p\">{</span><span class=\"n\">aid</span><span class=\"p\">})</span>\n                            <span class=\"k\">for</span> <span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">groundtruth_list_</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">)]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">groundtruth_list</span> <span class=\"o\">=</span> <span class=\"n\">groundtruth_list_</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">daid_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"c1\"># filter out any groundtruth that isn&#39;t allowed</span>\n        <span class=\"n\">daid_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">groundtruth_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">daid_set</span><span class=\"o\">.</span><span class=\"n\">intersection</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">)))</span> <span class=\"k\">for</span> <span class=\"n\">aids</span> <span class=\"ow\">in</span> <span class=\"n\">groundtruth_list</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">groundtruth_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_has_groundtruth\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_has_groundtruth\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/groundtruth/check/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_has_groundtruth</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">is_exemplar</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">noself</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list    (list):</span>\n<span class=\"sd\">        is_exemplar (None):</span>\n<span class=\"sd\">        noself      (bool):</span>\n<span class=\"sd\">        daid_list   (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: has_gt_list</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_has_groundtruth</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; is_exemplar = None</span>\n<span class=\"sd\">        &gt;&gt;&gt; noself = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; daid_list = None</span>\n<span class=\"sd\">        &gt;&gt;&gt; has_gt_list = get_annot_has_groundtruth(ibs, aid_list, is_exemplar, noself, daid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(has_gt_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># TODO: Optimize</span>\n    <span class=\"n\">numgts_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_num_groundtruth</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">is_exemplar</span><span class=\"o\">=</span><span class=\"n\">is_exemplar</span><span class=\"p\">,</span>\n                                                <span class=\"n\">noself</span><span class=\"o\">=</span><span class=\"n\">noself</span><span class=\"p\">,</span>\n                                                <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"n\">daid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">has_gt_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">num_gts</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">for</span> <span class=\"n\">num_gts</span> <span class=\"ow\">in</span> <span class=\"n\">numgts_list</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">has_gt_list</span></div>\n\n\n<span class=\"c1\">#@register_ibs_method</span>\n<span class=\"c1\">#def get_annot_hashid_rowid(ibs, aid_list, prefix=&#39;&#39;):</span>\n<span class=\"c1\">#    raise AssertionError(&#39;You probably want to call a uuid hash id method&#39;)</span>\n<span class=\"c1\">#    label = &#39;&#39;.join((&#39;_&#39;, prefix, &#39;UUIDS&#39;))</span>\n<span class=\"c1\">#    aids_hashid = ut.hashstr_arr(aid_list, label)</span>\n<span class=\"c1\">#    return aids_hashid</span>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_hashid_uuid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_hashid_uuid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/uuid/hashid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_hashid_uuid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    builds an aggregate random hash id for a list of aids</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/uuid/hashid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">uuid_list</span>    <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">((</span><span class=\"s1\">&#39;_&#39;</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"p\">,</span> <span class=\"s1\">&#39;UUIDS&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">uuid_hashid</span>  <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">hashstr_arr</span><span class=\"p\">(</span><span class=\"n\">uuid_list</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">uuid_hashid</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_hashid_visual_uuid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_hashid_visual_uuid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_hashid_visual_uuid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">pathsafe</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    builds an aggregate visual hash id for a list of aids</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        _new (bool): Eventually we will change the hashing scheme and all old</span>\n<span class=\"sd\">            data will be invalidated. (default=False)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">visual_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_visual_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">((</span><span class=\"s1\">&#39;_&#39;</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"p\">,</span> <span class=\"s1\">&#39;VUUIDS&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">visual_uuid_hashid</span>  <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">hashstr_arr27</span><span class=\"p\">(</span><span class=\"n\">visual_uuid_list</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">pathsafe</span><span class=\"o\">=</span><span class=\"n\">pathsafe</span><span class=\"p\">)</span>\n    <span class=\"c1\"># TODO: use this implementation instead</span>\n    <span class=\"c1\"># visual_uuid_list = ibs.get_annot_visual_uuids(aid_list)</span>\n    <span class=\"c1\"># label = &#39;&#39;.join((prefix, &#39;VUUIDS&#39;))</span>\n    <span class=\"c1\"># visual_uuid_hashid  = ut.hashid_arr(visual_uuid_list, label)</span>\n    <span class=\"k\">return</span> <span class=\"n\">visual_uuid_hashid</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_hashid_semantic_uuid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_hashid_semantic_uuid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_hashid_semantic_uuid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    builds an aggregate semantic hash id for a list of aids</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (ibeis.IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (list):  list of annotation rowids</span>\n<span class=\"sd\">        prefix (str): (default = &#39;&#39;)</span>\n<span class=\"sd\">        _new (bool): Eventually we will change the hashing scheme and all old</span>\n<span class=\"sd\">            data will be invalidated. (default=False)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        str: semantic_uuid_hashid</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_hashid_semantic_uuid</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; annots = ibs.annots()</span>\n<span class=\"sd\">        &gt;&gt;&gt; prefix = &#39;&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; semantic_uuid_hashid = get_annot_hashid_semantic_uuid(ibs, aid_list, prefix)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ut.repr2(annots.semantic_uuids[0:2], nl=1) + &#39;\\n&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; result += (&#39;semantic_uuid_hashid = &#39; + str(semantic_uuid_hashid))</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [</span>\n<span class=\"sd\">            UUID(&#39;9acc1a8e-b35f-11b5-f844-9e8fd5dd7ad9&#39;),</span>\n<span class=\"sd\">            UUID(&#39;9b03e268-aaed-9341-25ee-733859629a3a&#39;),</span>\n<span class=\"sd\">        ]</span>\n<span class=\"sd\">        semantic_uuid_hashid = SUUIDS-13-tnvebtbaoyvqirwi</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">semantic_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_semantic_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">((</span><span class=\"n\">prefix</span><span class=\"p\">,</span> <span class=\"s1\">&#39;SUUIDS&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">semantic_uuid_hashid</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">hashid_arr</span><span class=\"p\">(</span><span class=\"n\">semantic_uuid_list</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">semantic_uuid_hashid</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_thetas\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_thetas\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/theta/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_thetas</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        theta_list (list): a list of floats describing the angles of each chip</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_thetas</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/theta/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;NAUT_test&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_annot_thetas(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [2.75742, 0.792917, 2.53605, 2.67795, 0.946773, 2.56729]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">theta_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_theta&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">theta_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/uuid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_uuid_list a list of image uuids by aid</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/uuid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_uuid&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_uuid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_valid_annot_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_valid_annot_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/uuid/valid/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_valid_annot_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_uuid_list a list of image uuids for all valid aids</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n    <span class=\"n\">annot_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_uuid_list</span></div>\n\n\n<span class=\"c1\"># It is a good idea to have the cache on for the annot uuids, they are quite slow to load</span>\n<div class=\"viewcode-block\" id=\"get_annot_semantic_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_semantic_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_getter</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">ANNOT_SEMANTIC_UUID</span><span class=\"p\">)</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/uuid/semantic/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_semantic_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    annot_semantic_uuid_list &lt;- annot.annot_semantic_uuid[aid_list]</span>\n\n<span class=\"sd\">    gets data from the &quot;native&quot; column &quot;annot_semantic_uuid&quot; in the &quot;annot&quot; table</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_semantic_uuid_list</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_semantic_uuids</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs, qreq_ = testdata_ibs()</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs._get_all_aids()[0:1]</span>\n<span class=\"sd\">        &gt;&gt;&gt; annot_semantic_uuid_list = ibs.get_annot_semantic_uuids(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert len(aid_list) == len(annot_semantic_uuid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = annot_semantic_uuid_list</span>\n<span class=\"sd\">        [UUID(&#39;9acc1a8e-b35f-11b5-f844-9e8fd5dd7ad9&#39;)]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_SEMANTIC_UUID</span><span class=\"p\">,)</span>\n    <span class=\"n\">annot_semantic_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"s1\">&#39;rowid&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_semantic_uuid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_visual_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_visual_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_getter</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">ANNOT_VISUAL_UUID</span><span class=\"p\">)</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/uuid/visual/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_visual_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    The image uuid, annotation verticies, are theta is hashted together to</span>\n<span class=\"sd\">    compute the visual uuid.  The visual uuid does not include name or species</span>\n<span class=\"sd\">    information.</span>\n\n<span class=\"sd\">    annot_visual_uuid_list &lt;- annot.annot_visual_uuid[aid_list]</span>\n\n<span class=\"sd\">    gets data from the &quot;native&quot; column &quot;annot_visual_uuid&quot; in the &quot;annot&quot; table</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_visual_uuid_list</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_visual_uuids</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs, qreq_ = testdata_ibs()</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs._get_all_aids()[0:1]</span>\n<span class=\"sd\">        &gt;&gt;&gt; annot_visual_uuid_list = ibs.get_annot_visual_uuids(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert len(aid_list) == len(annot_visual_uuid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = annot_visual_uuid_list</span>\n<span class=\"sd\">        [UUID(&#39;8687dcb6-1f1f-fdd3-8b72-8f36f9f41905&#39;)]</span>\n\n<span class=\"sd\">        [UUID(&#39;76de0416-7c92-e1b3-4a17-25df32e9c2b4&#39;)]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_VISUAL_UUID</span><span class=\"p\">,)</span>\n    <span class=\"n\">annot_visual_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"s1\">&#39;rowid&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_visual_uuid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_verts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_verts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/vert/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_verts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        vert_list (list): the vertices that form the polygon of each chip</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/vert/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.preproc</span> <span class=\"k\">import</span> <span class=\"n\">preproc_annot</span>\n    <span class=\"n\">vertstr_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_verts&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">vert_list</span> <span class=\"o\">=</span> <span class=\"n\">preproc_annot</span><span class=\"o\">.</span><span class=\"n\">postget_annot_verts</span><span class=\"p\">(</span><span class=\"n\">vertstr_list</span><span class=\"p\">)</span>\n    <span class=\"c1\">#vert_list = [eval(vertstr, {}, {}) for vertstr in vertstr_list]</span>\n    <span class=\"k\">return</span> <span class=\"n\">vert_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_rotated_verts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_rotated_verts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/vert/rotated/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_rotated_verts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        rotated_vert_list (list): verticies after rotation by theta.</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/vert/rotated/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">vtool</span> <span class=\"k\">as</span> <span class=\"nn\">vt</span>\n    <span class=\"n\">vert_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_verts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">theta_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_thetas</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Convex bounding boxes for verticies</span>\n    <span class=\"n\">bbox_list</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"o\">.</span><span class=\"n\">bboxes_from_vert_list</span><span class=\"p\">(</span><span class=\"n\">vert_list</span><span class=\"p\">)</span>\n    <span class=\"n\">rot_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">rotation_around_bbox_mat3x3</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"p\">)</span>\n                <span class=\"k\">for</span> <span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">bbox</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">theta_list</span><span class=\"p\">,</span> <span class=\"n\">bbox_list</span><span class=\"p\">)]</span>\n    <span class=\"n\">rotated_vert_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">transform_points_with_homography</span><span class=\"p\">(</span><span class=\"n\">rot</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">verts</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n                         <span class=\"k\">for</span> <span class=\"n\">rot</span><span class=\"p\">,</span> <span class=\"n\">verts</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">rot_list</span><span class=\"p\">,</span> <span class=\"n\">vert_list</span><span class=\"p\">)]</span>\n    <span class=\"c1\">#vert_list = [eval(vertstr, {}, {}) for vertstr in vertstr_list]</span>\n    <span class=\"k\">return</span> <span class=\"n\">rotated_vert_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_yaws\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_yaws\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_getter</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">ANNOT_YAW</span><span class=\"p\">)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/yaw/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"c1\">#@profile</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_yaws</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A yaw is the yaw of the annotation in radians yaw is inverted. Will be fixed soon.</span>\n\n<span class=\"sd\">    DEPRICATE</span>\n\n<span class=\"sd\">    The following views have these angles of yaw:</span>\n<span class=\"sd\">        left side  - 0.50 tau radians</span>\n<span class=\"sd\">        front side - 0.25 tau radians</span>\n<span class=\"sd\">        right side - 0.00 tau radians</span>\n<span class=\"sd\">        back side  - 0.75 tau radians</span>\n\n<span class=\"sd\">        tau = 2 * pi</span>\n\n<span class=\"sd\">    SeeAlso:</span>\n<span class=\"sd\">        ibeis.const.VIEWTEXT_TO_YAW_RADIANS</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        yaw_list (list): the yaw (in radians) for the annotation</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_yaws</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/yaw/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[::3]</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_annot_yaws(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [3.141592653589793, 3.141592653589793, None, 3.141592653589793, None]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">yaw_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_YAW</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span>\n                          <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"n\">assume_unique</span><span class=\"p\">)</span>\n    <span class=\"c1\">#if False:</span>\n    <span class=\"c1\">#    yaw_list2 = [ibs.db.cur.execute(&#39;SELECT annot_yaw from annotations WHERE rowid=?&#39;, (aid,)).fetchone()[0] for aid in aid_list]</span>\n    <span class=\"c1\">#    # misses cases when aid_list is not unique?</span>\n    <span class=\"c1\">#    yaw_list3 = ut.take_column(ibs.db.cur.execute(&#39;SELECT annot_yaw from annotations WHERE rowid IN (%s) ORDER BY rowid ASC&#39; % (&#39;,&#39;.join(map(str, aid_list)),)).fetchall(), 0)</span>\n    <span class=\"c1\">#    sortx = ut.argsort(ut.argsort(aid_list))</span>\n    <span class=\"c1\">#    yaw_list3 = ut.take(yaw_list3, sortx)</span>\n    <span class=\"c1\">#    ut.make_index_lookup(aid_list)</span>\n    <span class=\"n\">yaw_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">yaw</span> <span class=\"k\">if</span> <span class=\"n\">yaw</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">yaw</span> <span class=\"o\">&gt;=</span> <span class=\"mf\">0.0</span> <span class=\"k\">else</span> <span class=\"kc\">None</span> <span class=\"k\">for</span> <span class=\"n\">yaw</span> <span class=\"ow\">in</span> <span class=\"n\">yaw_list</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">yaw_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_viewpoints\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_viewpoints\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/viewpoint/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_viewpoints</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        viewpoint_text (list): the viewpoint for the annotation</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/viewpoint/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">viewpoint_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_VIEWPOINT</span><span class=\"p\">,),</span>\n                                <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"n\">assume_unique</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">viewpoint_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_yaws_asfloat\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_yaws_asfloat\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_yaws_asfloat</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Ensures that Nones are returned as nans</span>\n\n<span class=\"sd\">    DEPRICATE</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">yaw_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_yaws</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">yaw_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">replace_nones</span><span class=\"p\">(</span><span class=\"n\">yaw_list</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">yaw_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_yaw_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_yaw_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/yaw/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_yaw_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;get_annot_yaw_texts&#39;</span>\n\n<span class=\"sd\">    DEPRICATE</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/yaw/text/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">yaw_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_yaws</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"n\">assume_unique</span><span class=\"p\">)</span>\n    <span class=\"n\">yaw_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ibsfuncs</span><span class=\"o\">.</span><span class=\"n\">get_yaw_viewtexts</span><span class=\"p\">(</span><span class=\"n\">yaw_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">yaw_text_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_viewpoint_int\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_viewpoint_int\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_viewpoint_int</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Pre 1.7.0</span>\n    <span class=\"c1\"># yaw_texts = ibs.get_annot_yaw_texts(aid_list, assume_unique=assume_unique)</span>\n    <span class=\"c1\"># VIEW = ibs.const.VIEW</span>\n    <span class=\"c1\"># UNKNOWN_CODE = VIEW.INT_TO_CODE[VIEW.UNKNOWN]</span>\n    <span class=\"c1\"># yaw_texts2 = (UNKNOWN_CODE if y is None else y for y in yaw_texts)</span>\n    <span class=\"c1\"># view_ints = ut.dict_take(ibs.const.VIEW.CODE_TO_INT, yaw_texts2)</span>\n    <span class=\"c1\"># return view_ints</span>\n    <span class=\"c1\"># ---------</span>\n    <span class=\"c1\"># Post 1.7.0</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_viewpoint_int&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aids</span><span class=\"p\">,</span>\n                      <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"n\">assume_unique</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_staged_flags\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_staged_flags\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/staged/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_staged_flags</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    returns if an annotation is staged</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (int):  list of annotation ids</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_staged_flag_list - True if annotation is staged</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_staged_flags</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/staged/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = get_annot_staged_flags(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(gid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_staged_flag_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span>\n                                          <span class=\"p\">(</span><span class=\"n\">ANNOT_STAGED_FLAG</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_staged_flag_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_staged_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_staged_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/staged/uuid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_staged_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_uuid_list a list of image uuids by aid</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/staged/uuid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_staged_uuid&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_uuid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_staged_user_ids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_staged_user_ids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/staged/user/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_staged_user_ids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    returns if an annotation is staged</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (int):  list of annotation ids</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_staged_user_id_list - True if annotation is staged</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_staged_user_ids</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/staged/user/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = get_annot_staged_user_ids(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(gid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_staged_user_id_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span>\n                                           <span class=\"p\">(</span><span class=\"n\">ANNOT_STAGED_USER_ID</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_staged_user_id_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_staged_metadata\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_staged_metadata\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/staged/metadata/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_staged_metadata</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">return_raw</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): annot metadata dictionary</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/staged/metadata/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">metadata_str_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_staged_metadata_json&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">metadata_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">metadata_str</span> <span class=\"ow\">in</span> <span class=\"n\">metadata_str_list</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">metadata_str</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">metadata_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">metadata_dict</span> <span class=\"o\">=</span> <span class=\"n\">metadata_str</span> <span class=\"k\">if</span> <span class=\"n\">return_raw</span> <span class=\"k\">else</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">from_json</span><span class=\"p\">(</span><span class=\"n\">metadata_str</span><span class=\"p\">)</span>\n        <span class=\"n\">metadata_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">metadata_dict</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">metadata_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_viewpoint_int\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_viewpoint_int\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_viewpoint_int</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">view_ints</span><span class=\"p\">,</span> <span class=\"n\">_code_update</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"n\">view_ints</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">view_ints</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_viewpoint_int&#39;</span><span class=\"p\">,),</span> <span class=\"n\">view_ints</span><span class=\"p\">,</span>\n               <span class=\"n\">id_iter</span><span class=\"o\">=</span><span class=\"n\">aids</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">_code_update</span><span class=\"p\">:</span>\n        <span class=\"c1\"># oops didn&#39;t realize there was an old structure</span>\n        <span class=\"n\">view_codes</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">VIEW</span><span class=\"o\">.</span><span class=\"n\">INT_TO_CODE</span><span class=\"p\">,</span> <span class=\"n\">view_ints</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_viewpoints</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">view_codes</span><span class=\"p\">,</span> <span class=\"n\">_code_update</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_viewpoint_code\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_viewpoint_code\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_viewpoint_code</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aids</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Doctest:</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[::3]</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_annot_viewpoint_code(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [&#39;left&#39;, &#39;left&#39;, &#39;unknown&#39;, &#39;left&#39;, &#39;unknown&#39;]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">view_ints</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_viewpoint_int</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">VIEW</span><span class=\"o\">.</span><span class=\"n\">INT_TO_CODE</span><span class=\"p\">,</span> <span class=\"n\">view_ints</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_ensure_viewpoint_to_code</span><span class=\"p\">(</span><span class=\"n\">view_codes</span><span class=\"p\">):</span>\n    <span class=\"n\">view_codes</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">VIEW</span><span class=\"o\">.</span><span class=\"n\">CODE</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span> <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">view_codes</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">view_codes</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_ensure_viewpoint_to_int</span><span class=\"p\">(</span><span class=\"n\">view_codes</span><span class=\"p\">):</span>\n    <span class=\"n\">view_codes</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">VIEW</span><span class=\"o\">.</span><span class=\"n\">CODE</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span> <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">view_codes</span><span class=\"p\">]</span>\n    <span class=\"n\">view_ints</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">VIEW</span><span class=\"o\">.</span><span class=\"n\">CODE_TO_INT</span><span class=\"p\">,</span> <span class=\"n\">view_codes</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">view_ints</span>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_viewpoint_code\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_viewpoint_code\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_viewpoint_code</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">view_codes</span><span class=\"p\">,</span> <span class=\"n\">_code_update</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"n\">view_ints</span> <span class=\"o\">=</span> <span class=\"n\">_ensure_viewpoint_to_int</span><span class=\"p\">(</span><span class=\"n\">view_codes</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_viewpoint_int</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">view_ints</span><span class=\"p\">,</span> <span class=\"n\">_code_update</span><span class=\"o\">=</span><span class=\"n\">_code_update</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_yaws\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_yaws\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">ANNOT_YAW</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/yaw/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_yaws</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">yaw_list</span><span class=\"p\">,</span> <span class=\"n\">input_is_degrees</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the  yaw of a list of chips by aid</span>\n\n<span class=\"sd\">    DEPRICATE</span>\n\n<span class=\"sd\">    A yaw is the yaw of the annotation in radians yaw is inverted. Will be fixed soon.</span>\n\n<span class=\"sd\">    Note:</span>\n<span class=\"sd\">        The following views have these angles of yaw:</span>\n<span class=\"sd\">            left side  - 0.00 tau radians</span>\n<span class=\"sd\">            front side - 0.25 tau radians</span>\n<span class=\"sd\">            right side - 0.50 tau radians</span>\n<span class=\"sd\">            back side  - 0.75 tau radians</span>\n<span class=\"sd\">            (tau = 2 * pi)</span>\n\n<span class=\"sd\">    SeeAlso:</span>\n<span class=\"sd\">        ibeis.const.VIEWTEXT_TO_YAW_RADIANS</span>\n\n<span class=\"sd\">    References:</span>\n<span class=\"sd\">        http://upload.wikimedia.org/wikipedia/commons/7/7e/Rollpitchyawplain.png</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/yaw/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\">#yaw_list = [-1 if yaw is None else yaw for yaw in yaw_list]</span>\n    <span class=\"k\">if</span> <span class=\"n\">input_is_degrees</span><span class=\"p\">:</span>\n        <span class=\"n\">yaw_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"k\">if</span> <span class=\"n\">yaw</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">deg_to_rad</span><span class=\"p\">(</span><span class=\"n\">yaw</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">yaw</span> <span class=\"ow\">in</span> <span class=\"n\">yaw_list</span><span class=\"p\">]</span>\n    <span class=\"c1\">#assert all([0.0 &lt;= yaw &lt; 2 * np.pi or yaw == -1.0 for yaw in yaw_list])</span>\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">yaw</span><span class=\"p\">,</span> <span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">yaw</span> <span class=\"ow\">in</span> <span class=\"n\">yaw_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_YAW</span><span class=\"p\">,),</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">update_annot_visual_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">notify_root_changed</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;yaws&#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Also set the annotation&#39;s viewpoints</span>\n    <span class=\"n\">viewpoint_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_yaw_texts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_viewpoints</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">viewpoint_list</span><span class=\"p\">,</span> <span class=\"n\">_yaw_update</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_viewpoints\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_viewpoints\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/viewpoint/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_viewpoints</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">viewpoint_list</span><span class=\"p\">,</span> <span class=\"n\">only_allow_known</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                         <span class=\"n\">_yaw_update</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">_code_update</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the viewpoint of the annotation</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/viewpoint/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">viewpoint_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">viewpoint_list</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">only_allow_known</span><span class=\"p\">:</span>\n        <span class=\"n\">isvalid</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">v</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">VIEW</span><span class=\"o\">.</span><span class=\"n\">CODE_TO_INT</span>\n                   <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">viewpoint_list</span><span class=\"p\">]</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">isvalid</span><span class=\"p\">)</span>\n        <span class=\"n\">viewpoint_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">viewpoint_list</span><span class=\"p\">,</span> <span class=\"n\">isvalid</span><span class=\"p\">)</span>\n\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">viewpoint_list</span><span class=\"p\">)</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_VIEWPOINT</span><span class=\"p\">,),</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># oops didn&#39;t realize there was a structure already here for this</span>\n    <span class=\"k\">if</span> <span class=\"n\">_code_update</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_viewpoint_code</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">viewpoint_list</span><span class=\"p\">,</span> <span class=\"n\">_code_update</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">_yaw_update</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Set yaws, if in the correct plane, else None</span>\n        <span class=\"n\">yaw_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">VIEWTEXT_TO_YAW_RADIANS</span><span class=\"p\">,</span> <span class=\"n\">viewpoint_list</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_yaws</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">yaw_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_notes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_notes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/note/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_notes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        annotation_notes_list (list): a list of annotation notes</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/note/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annotation_notes_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_NOTE</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annotation_notes_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_metadata\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_metadata\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/metadata/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_metadata</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">return_raw</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): annot metadata dictionary</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/metadata/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">metadata_str_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_metadata_json&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">metadata_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">metadata_str</span> <span class=\"ow\">in</span> <span class=\"n\">metadata_str_list</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">metadata_str</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">metadata_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">metadata_dict</span> <span class=\"o\">=</span> <span class=\"n\">metadata_str</span> <span class=\"k\">if</span> <span class=\"n\">return_raw</span> <span class=\"k\">else</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">from_json</span><span class=\"p\">(</span><span class=\"n\">metadata_str</span><span class=\"p\">)</span>\n        <span class=\"n\">metadata_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">metadata_dict</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">metadata_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_num_groundtruth\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_num_groundtruth\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_num_groundtruth</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">is_exemplar</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">noself</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                              <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): number of other chips with the same name</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_num_groundtruth</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_num_groundtruth:0</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_num_groundtruth:1</span>\n\n<span class=\"sd\">    Example1:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; noself = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_annot_num_groundtruth(ibs, aid_list, noself=noself)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]</span>\n\n<span class=\"sd\">    Example2:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; noself = False</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_annot_num_groundtruth(ibs, aid_list, noself=noself)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># TODO: Optimize</span>\n    <span class=\"n\">groundtruth_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_groundtruth</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">is_exemplar</span><span class=\"o\">=</span><span class=\"n\">is_exemplar</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">noself</span><span class=\"o\">=</span><span class=\"n\">noself</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"n\">daid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">nGt_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"n\">groundtruth_list</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">nGt_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_num_verts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_num_verts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/num/vert/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_num_verts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        nVerts_list (list): the number of vertices that form the polygon of each chip</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/num/vert/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">nVerts_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_NUM_VERTS</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">nVerts_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_parent_aid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_parent_aid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/parent/aid/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_parent_aid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): a list of parent (in terms of parts) annotation rowids.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_parent_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_PARENT_ROWID</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_parent_rowid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_part_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_part_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1toM</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/part/rowid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_part_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">is_staged</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): a list of part rowids for each image by aid</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: part_rowids_list</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/part/rowid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># FIXME: This index should when the database is defined.</span>\n    <span class=\"c1\"># Ensure that an index exists on the image column of the annotation table</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n        <span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">        CREATE INDEX IF NOT EXISTS aid_to_part_rowids ON parts (annot_rowid);</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">()</span>\n    <span class=\"c1\"># The index maxes the following query very efficient</span>\n    <span class=\"n\">part_rowids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">PART_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">PART_ROWID</span><span class=\"p\">,),</span>\n                                  <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"n\">ANNOT_ROWID</span><span class=\"p\">,</span>\n                                  <span class=\"n\">unpack_scalars</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">part_rowids_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">filter_part_set</span><span class=\"p\">(</span><span class=\"n\">part_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">is_staged</span><span class=\"o\">=</span><span class=\"n\">is_staged</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">part_rowid_list</span> <span class=\"ow\">in</span> <span class=\"n\">part_rowids_list</span>\n    <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">part_rowids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_name_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_name_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@ut</span><span class=\"o\">.</span><span class=\"n\">accepts_numpy</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_getter</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">NAME_ROWID</span><span class=\"p\">,</span> <span class=\"n\">cfgkeys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;distinguish_unknowns&#39;</span><span class=\"p\">])</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/name/rowid/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">distinguish_unknowns</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): the name id of each annotation.</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --exec-get_annot_name_rowids</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis import constants as const</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; distinguish_unknowns = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; nid_arr1 = np.array(ibs.get_annot_name_rowids(aid_list, distinguish_unknowns=distinguish_unknowns))</span>\n<span class=\"sd\">        &gt;&gt;&gt; nid_arr2 = np.array(ibs.get_annot_name_rowids(aid_list, distinguish_unknowns=False))</span>\n<span class=\"sd\">        &gt;&gt;&gt; nid_arr2 = np.array(ibs.get_annot_name_rowids(None, distinguish_unknowns=True))</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert const.UNKNOWN_LBLANNOT_ROWID == 0</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert np.all(nid_arr1[np.where(const.UNKNOWN_LBLANNOT_ROWID == nid_arr2)[0]] &lt; 0)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">NAME_ROWID</span><span class=\"p\">,)</span>\n    <span class=\"n\">nid_list_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"s1\">&#39;rowid&#39;</span><span class=\"p\">,</span> <span class=\"n\">assume_unique</span><span class=\"o\">=</span><span class=\"n\">assume_unique</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">distinguish_unknowns</span><span class=\"p\">:</span>\n        <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"kc\">None</span> <span class=\"k\">if</span> <span class=\"n\">aid</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"o\">-</span><span class=\"n\">aid</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">nid</span> <span class=\"o\">==</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_LBLANNOT_ROWID</span> <span class=\"ow\">or</span> <span class=\"n\">nid</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">nid</span>\n                    <span class=\"k\">for</span> <span class=\"n\">nid</span><span class=\"p\">,</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">nid_list_</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">)]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_LBLANNOT_ROWID</span> <span class=\"k\">if</span> <span class=\"n\">nid</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">nid</span> <span class=\"k\">for</span> <span class=\"n\">nid</span> <span class=\"ow\">in</span> <span class=\"n\">nid_list_</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">nid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_nids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_nids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/name/rowid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_nids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">distinguish_unknowns</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    alias</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/name/rowid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">distinguish_unknowns</span><span class=\"o\">=</span><span class=\"n\">distinguish_unknowns</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_name_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_name_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/name/uuid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_name_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    alias</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/name/uuid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">name_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_name_uuids</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">name_uuid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_names\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_names\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/name/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_names</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">distinguish_unknowns</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    alias</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_name_texts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span>\n                                    <span class=\"n\">distinguish_unknowns</span><span class=\"o\">=</span><span class=\"n\">distinguish_unknowns</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_name_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_name_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/name/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_name_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">distinguish_unknowns</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list or strs: name_list. e.g: [&#39;fred&#39;, &#39;sue&#39;, ...]</span>\n<span class=\"sd\">             for each annotation identifying the individual</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/name/text/</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_name_texts</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[::2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ut.repr2(get_annot_name_texts(ibs, aid_list), nl=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [&#39;____&#39;, &#39;easy&#39;, &#39;hard&#39;, &#39;jeff&#39;, &#39;____&#39;, &#39;____&#39;, &#39;zebra&#39;]</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[::2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ut.repr2(get_annot_name_texts(ibs, aid_list, True), nl=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [&#39;____1&#39;, &#39;easy&#39;, &#39;hard&#39;, &#39;jeff&#39;, &#39;____9&#39;, &#39;____11&#39;, &#39;zebra&#39;]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_name_texts</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">distinguish_unknowns</span><span class=\"p\">:</span>\n        <span class=\"n\">name_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">name</span> <span class=\"k\">if</span> <span class=\"n\">nid</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;</span><span class=\"si\">%d</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"o\">-</span><span class=\"n\">nid</span>\n                     <span class=\"k\">for</span> <span class=\"n\">nid</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">,</span> <span class=\"n\">name_list</span><span class=\"p\">)]</span>\n    <span class=\"c1\">#name_list = ibs.get_annot_lblannot_value_of_lbltype(aid_list,</span>\n    <span class=\"c1\">#const.INDIVIDUAL_KEY, ibs.get_name_texts)</span>\n    <span class=\"k\">return</span> <span class=\"n\">name_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_species\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_species\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/species/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_species</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    alias</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/species/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_species_texts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_species_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_species_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/species/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_species_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list : species_list - a list of strings [&#39;plains_zebra&#39;,</span>\n<span class=\"sd\">        &#39;grevys_zebra&#39;, ...] for each annotation</span>\n<span class=\"sd\">        identifying the species</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_species_texts</span>\n\n<span class=\"sd\">    Example1:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[1::3]</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ut.repr2(get_annot_species_texts(ibs, aid_list), nl=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [&#39;zebra_plains&#39;, &#39;zebra_plains&#39;, &#39;____&#39;, &#39;bear_polar&#39;]</span>\n\n<span class=\"sd\">    Example2:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;PZ_MTEST&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_list = get_annot_species_texts(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ut.repr2(list(set(species_list)), nl=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [&#39;zebra_plains&#39;]</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/species/text/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_species_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">speceis_text_list</span>  <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_species_texts</span><span class=\"p\">(</span><span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\">#speceis_text_list = ibs.get_annot_lblannot_value_of_lbltype(</span>\n    <span class=\"c1\">#    aid_list, const.SPECIES_KEY, ibs.get_species)</span>\n    <span class=\"k\">return</span> <span class=\"n\">speceis_text_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_species_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_species_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@ut</span><span class=\"o\">.</span><span class=\"n\">accepts_numpy</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_getter</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">SPECIES_ROWID</span><span class=\"p\">)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/species/rowid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_species_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    species_rowid_list &lt;- annot.species_rowid[aid_list]</span>\n\n<span class=\"sd\">    gets data from the &quot;native&quot; column &quot;species_rowid&quot; in the &quot;annot&quot; table</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: species_rowid_list</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/species/rowid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_ROWID</span><span class=\"p\">,)</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"s1\">&#39;rowid&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">species_rowid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_species_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_species_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/species/uuid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_species_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    species_rowid_list &lt;- annot.species_rowid[aid_list]</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: species_uuid_list</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/species/uuid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_species_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">species_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_species_uuids</span><span class=\"p\">(</span><span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">species_uuid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_image_names\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_image_names\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/image/name/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_image_names</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list of strs: gname_list the image names of each annotation</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/image/name/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">gname_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_gnames</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">gname_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_image_unixtimes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_image_unixtimes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/image/unixtime/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_image_unixtimes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: unixtime_list</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/image/unixtime/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">unixtime_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_unixtime</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">unixtime_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_image_unixtimes_asfloat\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_image_unixtimes_asfloat\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@ut</span><span class=\"o\">.</span><span class=\"n\">accepts_numpy</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/image/unixtime/float/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_image_unixtimes_asfloat</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (list):  list of annotation rowids</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: unixtime_list</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --exec-get_annot_image_unixtimes_asfloat --show --db PZ_MTEST</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; unixtime_list = get_annot_image_unixtimes_asfloat(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = (&#39;unixtime_list = %s&#39; % (str(unixtime_list),))</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.quit_if_noshow()</span>\n<span class=\"sd\">        &gt;&gt;&gt; import plottool as pt</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.show_if_requested()</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">unixtime_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_image_unixtimes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">)</span>\n    <span class=\"n\">unixtime_list</span><span class=\"p\">[</span><span class=\"n\">unixtime_list</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span>\n    <span class=\"k\">return</span> <span class=\"n\">unixtime_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_image_datetime_str\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_image_datetime_str\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_image_datetime_str</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (int):  list of annotation ids</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: datetime_list</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_image_datetime_str</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; datetime_list = get_annot_image_datetime_str(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(datetime_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">datetime_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_datetime_str</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">datetime_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_image_gps\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_image_gps\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@ut</span><span class=\"o\">.</span><span class=\"n\">accepts_numpy</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/image/gps/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_image_gps</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: unixtime_list</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/image/gps/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">gps_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_gps</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">gps_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_image_gps2\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_image_gps2\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@ut</span><span class=\"o\">.</span><span class=\"n\">accepts_numpy</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/image/gps2/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_image_gps2</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    fixes the (-1, -1) issue. returns nan instead.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">gps_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_gps2</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">gps_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_image_paths\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_image_paths\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/image/file/path/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_image_paths</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list of strs: gpath_list the image paths of each annotation</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/image/file/path/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_all_not_None</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gid_list&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">AssertionError</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[!get_annot_image_paths] aids=&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr4</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[!get_annot_image_paths] gids=&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr4</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">))</span>\n        <span class=\"k\">raise</span>\n    <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_paths</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_all_not_None</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gpath_list&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">gpath_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_image_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_image_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/image/uuid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_image_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: image_uuid_list</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_image_uuids --enableall</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/image/uuid/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[0:1]</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_annot_image_uuids(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [UUID(&#39;66ec193a-1619-b3b6-216d-1784b4833b61&#39;)]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_all_not_None</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gid_list&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">image_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_uuids</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">image_uuid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_images\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_images\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/images/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_images</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list of ndarrays: the images of each annotation</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annot_images</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[0:1]</span>\n<span class=\"sd\">        &gt;&gt;&gt; image_list = ibs.get_annot_images(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(list(map(np.shape, image_list)))</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [(715, 1047, 3)]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">image_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_images</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">image_list</span></div>\n\n\n<span class=\"c1\">#### SETTERS ####  # NOQA</span>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_bboxes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_bboxes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/bbox/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_bboxes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">bbox_list</span><span class=\"p\">,</span> <span class=\"n\">delete_thumbs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets bboxes of a list of annotations by aid,</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list of rowids): list of annotation rowids</span>\n<span class=\"sd\">        bbox_list (list of (x, y, w, h)): new bounding boxes for each aid</span>\n\n<span class=\"sd\">    Note:</span>\n<span class=\"sd\">        set_annot_bboxes is a proxy for set_annot_verts</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/bbox/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">vtool</span> <span class=\"k\">import</span> <span class=\"n\">geometry</span>\n    <span class=\"c1\"># changing the bboxes also changes the bounding polygon</span>\n    <span class=\"n\">vert_list</span> <span class=\"o\">=</span> <span class=\"n\">geometry</span><span class=\"o\">.</span><span class=\"n\">verts_list_from_bboxes_list</span><span class=\"p\">(</span><span class=\"n\">bbox_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># naively overwrite the bounding polygon with a rectangle - for now trust the user!</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_verts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">vert_list</span><span class=\"p\">,</span> <span class=\"n\">delete_thumbs</span><span class=\"o\">=</span><span class=\"n\">delete_thumbs</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_detect_confidence\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_detect_confidence\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/detect/confidence/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_detect_confidence</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">confidence_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets annotation notes</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/detect/confidence/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">confidence</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">confidence</span> <span class=\"ow\">in</span> <span class=\"n\">confidence_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_detect_confidence&#39;</span><span class=\"p\">,),</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_exemplar_flags\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_exemplar_flags\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">ANNOT_EXEMPLAR_FLAG</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">IMAGESET_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;percent_names_with_exemplar_str&#39;</span><span class=\"p\">])</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/exemplar/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_exemplar_flags</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets if an annotation is an exemplar</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/exemplar/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">flag</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">flag</span> <span class=\"ow\">in</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_EXEMPLAR_FLAG</span><span class=\"p\">,),</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_name_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_name_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">NAME_ROWID</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">IMAGESET_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;percent_names_with_exemplar_str&#39;</span><span class=\"p\">])</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/name/rowid/&#39;, methods=[&#39;PUT&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">name_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">notify_wildbook</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                          <span class=\"n\">assert_wildbook</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    name_rowid_list -&gt; annot.name_rowid[aid_list]</span>\n\n<span class=\"sd\">    Sets names/nids of a list of annotations.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n<span class=\"sd\">        name_rowid_list (list):</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[0:2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; # check clean state</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(ibs.get_annot_names(aid_list), [&#39;____&#39;, &#39;easy&#39;])</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(ibs.get_annot_exemplar_flags(aid_list), [0, 1])</span>\n<span class=\"sd\">        &gt;&gt;&gt; # run function</span>\n<span class=\"sd\">        &gt;&gt;&gt; name_list = [&#39;easy&#39;, &#39;____&#39;]</span>\n<span class=\"sd\">        &gt;&gt;&gt; name_rowid_list = ibs.get_name_rowids_from_text(name_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.set_annot_name_rowids(aid_list, name_rowid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # check results</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(ibs.get_annot_names(aid_list), [&#39;easy&#39;, &#39;____&#39;])</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(ibs.get_annot_exemplar_flags(aid_list), [0, 0])</span>\n<span class=\"sd\">        &gt;&gt;&gt; # restore database state</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.set_annot_names(aid_list, [&#39;____&#39;, &#39;easy&#39;])</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.set_annot_exemplar_flags(aid_list, [0, 1])</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(ibs.get_annot_names(aid_list), [&#39;____&#39;, &#39;easy&#39;])</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_eq(ibs.get_annot_exemplar_flags(aid_list), [0, 1])</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">name_rowid_list</span><span class=\"p\">),</span> <span class=\"s1\">&#39;misaligned&#39;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n    <span class=\"k\">if</span> <span class=\"n\">notify_wildbook</span> <span class=\"ow\">and</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">ENABLE_WILDBOOK_SIGNAL</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">wildbook_signal_annot_name_changes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">ConnectionError</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">assert_wildbook</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">IOError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Cannot connect to WB for name updates&#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\">#ibsfuncs.assert_lblannot_rowids_are_type(ibs, name_rowid_list,</span>\n    <span class=\"c1\">#ibs.lbltype_ids[const.INDIVIDUAL_KEY])</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">NAME_ROWID</span><span class=\"p\">,)</span>\n    <span class=\"c1\"># WE NEED TO PERFORM A SPECIAL CHECK. ANY ANIMAL WHICH IS GIVEN AN UNKONWN</span>\n    <span class=\"c1\"># NAME MUST HAVE ITS EXEMPLAR FLAG SET TO FALSE</span>\n    <span class=\"n\">will_be_unknown_flag_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">nid</span> <span class=\"o\">==</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_NAME_ROWID</span> <span class=\"k\">for</span> <span class=\"n\">nid</span> <span class=\"ow\">in</span> <span class=\"n\">name_rowid_list</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">will_be_unknown_flag_list</span><span class=\"p\">):</span>\n        <span class=\"c1\"># remove exemplar status from any annotations that will become unknown</span>\n        <span class=\"n\">will_be_unknown_aids</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">will_be_unknown_flag_list</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_exemplar_flags</span><span class=\"p\">(</span><span class=\"n\">will_be_unknown_aids</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">]</span> <span class=\"o\">*</span>\n                                     <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">will_be_unknown_aids</span><span class=\"p\">))</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">name_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span>\n    <span class=\"c1\"># postset nids</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">update_annot_semantic_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># TODO: flag name rowid update</span>\n    <span class=\"c1\"># TODO: flag when the actual name changes as well?</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">notify_root_changed</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;name&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_names\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_names\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/name/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_names</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">name_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the attrlbl_value of type(INDIVIDUAL_KEY) Sets names/nids of a</span>\n<span class=\"sd\">    list of annotations.</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-set_annot_names --enableall</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/name/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; name_list1 = get_annot_names(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; name_list2 = [name + &#39;_TESTAUG&#39; for name in name_list1]</span>\n<span class=\"sd\">        &gt;&gt;&gt; set_annot_names(ibs, aid_list, name_list2)</span>\n<span class=\"sd\">        &gt;&gt;&gt; name_list3 = get_annot_names(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; set_annot_names(ibs, aid_list, name_list1)</span>\n<span class=\"sd\">        &gt;&gt;&gt; name_list4 = get_annot_names(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert name_list2 == name_list3</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert name_list4 == name_list1</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert name_list4 != name_list2</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\">#ibs.get_nids_from_text</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">name_list</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">name_list</span><span class=\"p\">,</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">string_types</span><span class=\"p\">)</span>\n    <span class=\"c1\">#name_rowid_list = ibs.get_name_rowids_from_text(name_list, ensure=True)</span>\n    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">([</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;&#39;</span> <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">name_list</span><span class=\"p\">]),</span> <span class=\"p\">(</span>\n        <span class=\"s1\">&#39;cannot change name to empty string use ____ for unknown.&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">name_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_names</span><span class=\"p\">(</span><span class=\"n\">name_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">name_rowid_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_name_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_name_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_name_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">name_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    alias</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/name/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_names</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">name_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_species\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_species\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/species/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_species</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">species_text_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets species/speciesids of a list of annotations.</span>\n<span class=\"sd\">    Convenience function for set_annot_lblannot_from_value</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/species/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\">#ibs.get_nids_from_text</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_species_rowids_from_text</span><span class=\"p\">(</span><span class=\"n\">species_text_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_species_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_species_and_notify\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_species_and_notify\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_species_and_notify</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"c1\"># for gui</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_species</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">notify_observers</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_species_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_species_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">SPECIES_ROWID</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/species/rowid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_species_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    species_rowid_list -&gt; annot.species_rowid[aid_list]</span>\n\n<span class=\"sd\">    Sets species/speciesids of a list of annotations.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list</span>\n<span class=\"sd\">        species_rowid_list</span>\n\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/species/rowid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_ROWID</span><span class=\"p\">,)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">update_annot_semantic_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">notify_root_changed</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;species&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_notes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_notes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/note/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_notes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">notes_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets annotation notes</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/note/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">notes</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">notes</span> <span class=\"ow\">in</span> <span class=\"n\">notes_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_NOTE</span><span class=\"p\">,),</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_metadata\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_metadata\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/metadata/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_metadata</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">metadata_dict_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the annot&#39;s metadata using a metadata dictionary</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/metadata/</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-set_annot_metadata</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; import random</span>\n<span class=\"sd\">        &gt;&gt;&gt; # build test data</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[0:1]</span>\n<span class=\"sd\">        &gt;&gt;&gt; metadata_dict_list = [</span>\n<span class=\"sd\">        &gt;&gt;&gt;     {&#39;test&#39;: random.uniform(0.0, 1.0)},</span>\n<span class=\"sd\">        &gt;&gt;&gt; ]</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(metadata_dict_list))</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.set_annot_metadata(aid_list, metadata_dict_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # verify results</span>\n<span class=\"sd\">        &gt;&gt;&gt; metadata_dict_list_ = ibs.get_annot_metadata(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(metadata_dict_list_))</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert metadata_dict_list == metadata_dict_list_</span>\n<span class=\"sd\">        &gt;&gt;&gt; metadata_str_list = [ut.to_json(metadata_dict) for metadata_dict in metadata_dict_list]</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(metadata_str_list))</span>\n<span class=\"sd\">        &gt;&gt;&gt; metadata_str_list_ = ibs.get_annot_metadata(aid_list, return_raw=True)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(metadata_str_list_))</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert metadata_str_list == metadata_str_list_</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">metadata_str_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">metadata_dict</span> <span class=\"ow\">in</span> <span class=\"n\">metadata_dict_list</span><span class=\"p\">:</span>\n        <span class=\"n\">metadata_str</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">(</span><span class=\"n\">metadata_dict</span><span class=\"p\">)</span>\n        <span class=\"n\">metadata_str_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">metadata_str</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">metadata_str</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">metadata_str</span> <span class=\"ow\">in</span> <span class=\"n\">metadata_str_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_metadata_json&#39;</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_parent_rowid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_parent_rowid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/parent/rowid/&#39;, methods=[&#39;PUT&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_parent_rowid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">parent_aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the annotation&#39;s parent aid.</span>\n<span class=\"sd\">    TODO DEPRICATE IN FAVOR OF SEPARATE PARTS TABLE</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/parent/rowid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">parent_aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">parent_aid</span> <span class=\"ow\">in</span> <span class=\"n\">parent_aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_PARENT_ROWID</span><span class=\"p\">,),</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_thetas\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_thetas\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/theta/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_thetas</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">theta_list</span><span class=\"p\">,</span> <span class=\"n\">delete_thumbs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                     <span class=\"n\">update_visual_uuids</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">notify_root</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets thetas of a list of chips by aid</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/theta/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">theta</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">theta</span> <span class=\"ow\">in</span> <span class=\"n\">theta_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_THETA</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">delete_thumbs</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_annot_chips</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>  <span class=\"c1\"># Changing theta redefines the chips</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_annot_imgthumbs</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">update_visual_uuids</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">update_annot_visual_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">notify_root</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">notify_root_changed</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;theta&#39;</span><span class=\"p\">,</span> <span class=\"n\">force_delete</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_update_annot_rotate_fix_bbox</span><span class=\"p\">(</span><span class=\"n\">bbox</span><span class=\"p\">):</span>\n    <span class=\"p\">(</span><span class=\"n\">xtl</span><span class=\"p\">,</span> <span class=\"n\">ytl</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">bbox</span>\n    <span class=\"n\">diffx</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">round</span><span class=\"p\">((</span><span class=\"n\">w</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">h</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span><span class=\"p\">)))</span>\n    <span class=\"n\">diffy</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">round</span><span class=\"p\">((</span><span class=\"n\">h</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">w</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span><span class=\"p\">)))</span>\n    <span class=\"n\">xtl</span><span class=\"p\">,</span> <span class=\"n\">ytl</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">xtl</span> <span class=\"o\">+</span> <span class=\"n\">diffx</span><span class=\"p\">,</span> <span class=\"n\">ytl</span> <span class=\"o\">+</span> <span class=\"n\">diffy</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">w</span>\n    <span class=\"n\">bbox</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">xtl</span><span class=\"p\">,</span> <span class=\"n\">ytl</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">bbox</span>\n\n\n<div class=\"viewcode-block\" id=\"update_annot_rotate_90\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.update_annot_rotate_90\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">update_annot_rotate_90</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">direction</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.constants</span> <span class=\"k\">import</span> <span class=\"n\">PI</span><span class=\"p\">,</span> <span class=\"n\">TAU</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">direction</span><span class=\"p\">,</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">string_types</span><span class=\"p\">):</span>\n        <span class=\"n\">direction</span> <span class=\"o\">=</span> <span class=\"n\">direction</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">direction</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;l&#39;</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n    <span class=\"k\">elif</span> <span class=\"n\">direction</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;right&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]:</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">1.0</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Invalid direction supplied&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">theta_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_thetas</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">theta_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"n\">theta</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">val</span> <span class=\"o\">*</span> <span class=\"n\">PI</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"o\">%</span> <span class=\"n\">TAU</span>\n        <span class=\"k\">for</span> <span class=\"n\">theta</span> <span class=\"ow\">in</span> <span class=\"n\">theta_list</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_thetas</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">theta_list</span><span class=\"p\">)</span>\n\n    <span class=\"n\">bbox_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_bboxes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">bbox_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">_update_annot_rotate_fix_bbox</span><span class=\"p\">(</span><span class=\"n\">bbox</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">bbox</span> <span class=\"ow\">in</span> <span class=\"n\">bbox_list</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_bboxes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">bbox_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"update_annot_rotate_left_90\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.update_annot_rotate_left_90\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/rotate/left/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;POST&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">update_annot_rotate_left_90</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">update_annot_rotate_90</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"update_annot_rotate_right_90\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.update_annot_rotate_right_90\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/rotate/right/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;POST&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">update_annot_rotate_right_90</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">update_annot_rotate_90</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_verts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_verts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/vert/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_verts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">verts_list</span><span class=\"p\">,</span>\n                    <span class=\"n\">theta_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">interest_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                    <span class=\"n\">delete_thumbs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">update_visual_uuids</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"n\">notify_root</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the vertices [(x, y), ...] of a list of chips by aid</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/vert/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">with</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"s1\">&#39;set_annot_verts&#39;</span><span class=\"p\">):</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"s1\">&#39;set_annot_verts...config&#39;</span><span class=\"p\">):</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">vtool</span> <span class=\"k\">import</span> <span class=\"n\">geometry</span>\n            <span class=\"n\">nInput</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n            <span class=\"c1\"># Compute data to set</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">verts_list</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">):</span>\n                <span class=\"n\">verts_list</span> <span class=\"o\">=</span> <span class=\"n\">verts_list</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n            <span class=\"k\">for</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">vert_list</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">verts_list</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">vert_list</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">):</span>\n                    <span class=\"n\">verts_list</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">vert_list</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n            <span class=\"n\">num_verts_list</span>   <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"n\">verts_list</span><span class=\"p\">))</span>\n            <span class=\"n\">verts_as_strings</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">text_type</span><span class=\"p\">,</span> <span class=\"n\">verts_list</span><span class=\"p\">))</span>\n            <span class=\"n\">id_iter1</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n            <span class=\"c1\"># also need to set the internal number of vertices</span>\n            <span class=\"n\">val_iter1</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">num_verts</span><span class=\"p\">,</span> <span class=\"n\">verts</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">num_verts</span><span class=\"p\">,</span> <span class=\"n\">verts</span><span class=\"p\">)</span>\n                         <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">num_verts_list</span><span class=\"p\">,</span> <span class=\"n\">verts_as_strings</span><span class=\"p\">))</span>\n            <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_NUM_VERTS</span><span class=\"p\">,</span> <span class=\"n\">ANNOT_VERTS</span><span class=\"p\">,)</span>\n            <span class=\"c1\"># SET VERTS in ANNOTATION_TABLE</span>\n            <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">val_iter1</span><span class=\"p\">,</span> <span class=\"n\">id_iter1</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"n\">nInput</span><span class=\"p\">)</span>\n            <span class=\"c1\"># changing the vertices also changes the bounding boxes</span>\n            <span class=\"n\">bbox_list</span> <span class=\"o\">=</span> <span class=\"n\">geometry</span><span class=\"o\">.</span><span class=\"n\">bboxes_from_vert_list</span><span class=\"p\">(</span><span class=\"n\">verts_list</span><span class=\"p\">)</span>      <span class=\"c1\"># new bboxes</span>\n            <span class=\"n\">xtl_list</span><span class=\"p\">,</span> <span class=\"n\">ytl_list</span><span class=\"p\">,</span> <span class=\"n\">width_list</span><span class=\"p\">,</span> <span class=\"n\">height_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">bbox_list</span><span class=\"p\">))</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"s1\">&#39;set_annot_verts...bbox&#39;</span><span class=\"p\">):</span>\n            <span class=\"n\">val_iter2</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">xtl_list</span><span class=\"p\">,</span> <span class=\"n\">ytl_list</span><span class=\"p\">,</span> <span class=\"n\">width_list</span><span class=\"p\">,</span> <span class=\"n\">height_list</span><span class=\"p\">)</span>\n            <span class=\"n\">id_iter2</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n            <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_xtl&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_ytl&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_width&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_height&#39;</span><span class=\"p\">,)</span>\n            <span class=\"c1\"># SET BBOX in ANNOTATION_TABLE</span>\n            <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">val_iter2</span><span class=\"p\">,</span> <span class=\"n\">id_iter2</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"n\">nInput</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"s1\">&#39;set_annot_verts...theta&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">theta_list</span><span class=\"p\">:</span>\n                <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_thetas</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">theta_list</span><span class=\"p\">,</span> <span class=\"n\">delete_thumbs</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                     <span class=\"n\">update_visual_uuids</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">notify_root</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"s1\">&#39;set_annot_verts...interest&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">interest_list</span><span class=\"p\">:</span>\n                <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_interest</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">interest_list</span><span class=\"p\">,</span> <span class=\"n\">delete_thumbs</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"s1\">&#39;set_annot_verts...thumbs&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">delete_thumbs</span><span class=\"p\">:</span>\n                <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_annot_chips</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>  <span class=\"c1\"># INVALIDATE THUMBNAILS</span>\n                <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_annot_imgthumbs</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n\n                <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)))</span>\n                <span class=\"n\">config2_</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;thumbsize&#39;</span><span class=\"p\">:</span> <span class=\"mi\">221</span><span class=\"p\">}</span>\n                <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_image_thumbs</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">quiet</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config2_</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"s1\">&#39;set_annot_verts...uuids&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">update_visual_uuids</span><span class=\"p\">:</span>\n                <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">update_annot_visual_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"s1\">&#39;set_annot_verts...roots&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">notify_root</span><span class=\"p\">:</span>\n                <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">notify_root_changed</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;verts&#39;</span><span class=\"p\">,</span> <span class=\"n\">force_delete</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">theta_list</span><span class=\"p\">:</span>\n                    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">notify_root_changed</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;theta&#39;</span><span class=\"p\">,</span> <span class=\"n\">force_delete</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span></div>\n\n\n<span class=\"c1\"># PROBCHIP</span>\n\n<div class=\"viewcode-block\" id=\"get_annot_probchip_fpath\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_probchip_fpath\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/probchip/fpath/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_probchip_fpath</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns paths to probability images.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (list):  list of annotation rowids</span>\n<span class=\"sd\">        config2_ (dict): (default = None)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: probchip_fpath_list</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --exec-get_annot_probchip_fpath --show</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;PZ_MTEST&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[0:10]</span>\n<span class=\"sd\">        &gt;&gt;&gt; config2_ = {&#39;fw_detector&#39;: &#39;cnn&#39;}</span>\n<span class=\"sd\">        &gt;&gt;&gt; probchip_fpath_list = get_annot_probchip_fpath(ibs, aid_list, config2_)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = (&#39;probchip_fpath_list = %s&#39; % (str(probchip_fpath_list),))</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.quit_if_noshow()</span>\n<span class=\"sd\">        &gt;&gt;&gt; import plottool as pt</span>\n<span class=\"sd\">        &gt;&gt;&gt; iteract_obj = pt.interact_multi_image.MultiImageInteraction(probchip_fpath_list, nPerPage=4)</span>\n<span class=\"sd\">        &gt;&gt;&gt; iteract_obj.start()</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.show_if_requested()</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">probchip_fpath_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;probchip&#39;</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;img&#39;</span><span class=\"p\">,</span>\n                                             <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">,</span> <span class=\"n\">read_extern</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">probchip_fpath_list</span></div>\n\n\n<span class=\"c1\"># ---</span>\n<span class=\"c1\"># NEW</span>\n<span class=\"c1\"># ---</span>\n\n<div class=\"viewcode-block\" id=\"get_annot_qualities\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_qualities\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_getter</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">ANNOT_QUALITY</span><span class=\"p\">)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/quality/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_qualities</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    annot_quality_list &lt;- annot.annot_quality[aid_list]</span>\n\n<span class=\"sd\">    gets data from the &quot;native&quot; column &quot;annot_quality&quot; in the &quot;annot&quot; table</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_quality_list</span>\n\n<span class=\"sd\">    TemplateInfo:</span>\n<span class=\"sd\">        Tgetter_table_column</span>\n<span class=\"sd\">        col = annot_quality</span>\n<span class=\"sd\">        tbl = annot</span>\n\n<span class=\"sd\">    SeeAlso:</span>\n<span class=\"sd\">        ibeis.const.QUALITY_INT_TO_TEXT</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/quality/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs, qreq_ = testdata_ibs()</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs._get_all_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; eager = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; annot_quality_list = ibs.get_annot_qualities(aid_list, eager=eager)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;annot_quality_list = %r&#39; % (annot_quality_list,))</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert len(aid_list) == len(annot_quality_list)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_QUALITY</span><span class=\"p\">,)</span>\n    <span class=\"n\">annot_quality_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"s1\">&#39;rowid&#39;</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"n\">eager</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_quality_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_quality_int\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_quality_int\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_quality_int</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; new alias &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_qualities</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"n\">eager</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_qualities\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_qualities\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">ANNOT_QUALITY</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/quality/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_qualities</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">annot_quality_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    annot_quality_list -&gt; annot.annot_quality[aid_list]</span>\n\n<span class=\"sd\">    A quality is an integer representing the following types:</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list</span>\n<span class=\"sd\">        annot_quality_list</span>\n\n<span class=\"sd\">    SeeAlso:</span>\n<span class=\"sd\">        ibeis.const.QUALITY_INT_TO_TEXT</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/quality/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_QUALITY</span><span class=\"p\">,)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">annot_quality_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_quality_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_quality_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/quality/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_quality_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;get_annot_quality_texts&#39;</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/quality/text/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">quality_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_qualities</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">quality_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">QUALITY_INT_TO_TEXT</span><span class=\"p\">,</span> <span class=\"n\">quality_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">quality_text_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_isjunk\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_isjunk\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/annot/isjunk/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_isjunk</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;get_annot_isjunk&#39;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">qual_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_qualities</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\">#isjunk_list = [qual == const.QUALITY_TEXT_TO_INT[&#39;junk&#39;] for qual in qual_list]</span>\n    <span class=\"n\">isjunk_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">qual</span> <span class=\"ow\">in</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">QUALITY_TEXT_TO_INTS</span><span class=\"p\">[</span><span class=\"s1\">&#39;junk&#39;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">qual</span> <span class=\"ow\">in</span> <span class=\"n\">qual_list</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">isjunk_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_quality_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_quality_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/quality/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_quality_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">quality_text_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;set_annot_quality_texts&#39;</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/quality/text/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">isiterable</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">):</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">aid_list</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">quality_text_list</span><span class=\"p\">,</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">string_types</span><span class=\"p\">):</span>\n        <span class=\"n\">quality_text_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">quality_text_list</span><span class=\"p\">]</span>\n    <span class=\"n\">quality_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">QUALITY_TEXT_TO_INT</span><span class=\"p\">,</span> <span class=\"n\">quality_text_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_qualities</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">quality_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_yaw_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_yaw_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/yaw/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_yaw_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">yaw_text_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;set_annot_yaw_texts&#39;</span>\n\n<span class=\"sd\">    DEPRICATE</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/yaw/text/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">isiterable</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">):</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">aid_list</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">yaw_text_list</span><span class=\"p\">,</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">string_types</span><span class=\"p\">):</span>\n        <span class=\"n\">yaw_text_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">yaw_text_list</span><span class=\"p\">]</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_viewpoint_code</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">yaw_text_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_sex\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_sex\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/sex/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_sex</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;get_annot_sex&#39;</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/sex/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_nids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">sex_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_name_sex</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">sex_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_sex_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_sex_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/sex/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_sex_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;get_annot_sex_texts&#39;</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/sex/text/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_nids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">sex_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_name_sex_text</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">sex_text_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_sex\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_sex\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/sex/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_sex</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">name_sex_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;set_annot_sex&#39;</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/sex/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_nids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"n\">nid</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"k\">for</span> <span class=\"n\">nid</span> <span class=\"ow\">in</span> <span class=\"n\">nid_list</span> <span class=\"p\">]</span>\n    <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">name_sex_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">name_sex_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_name_sex</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">,</span> <span class=\"n\">name_sex_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_sex_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_sex_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/sex/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_sex_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">name_sex_text_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;set_annot_sex_texts&#39;</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/sex/text/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_nids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"n\">nid</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"k\">for</span> <span class=\"n\">nid</span> <span class=\"ow\">in</span> <span class=\"n\">nid_list</span> <span class=\"p\">]</span>\n    <span class=\"n\">nid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">name_sex_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">name_sex_text_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_name_sex_text</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">,</span> <span class=\"n\">name_sex_text_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_age_months_est_min\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_age_months_est_min\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/age/months/min/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_age_months_est_min</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    annot_age_months_est_min_list &lt;- annot.annot_age_months_est_min[aid_list]</span>\n\n<span class=\"sd\">    gets data from the &quot;native&quot; column &quot;annot_age_months_est_min&quot; in the &quot;annot&quot; table</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_age_months_est_min_list</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/age/months/min/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs, config2_ = testdata_ibs()</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs._get_all_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; eager = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; annot_age_months_est_min_list = ibs.get_annot_age_months_est_min(aid_list, eager=eager)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert len(aid_list) == len(annot_age_months_est_min_list)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_AGE_MONTHS_EST_MIN</span><span class=\"p\">,)</span>\n    <span class=\"n\">annot_age_months_est_min_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"s1\">&#39;rowid&#39;</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"n\">eager</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"n\">nInput</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_age_months_est_min_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_age_months_est_max\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_age_months_est_max\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/age/months/max/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_age_months_est_max</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    annot_age_months_est_max_list &lt;- annot.annot_age_months_est_max[aid_list]</span>\n\n<span class=\"sd\">    gets data from the &quot;native&quot; column &quot;annot_age_months_est_max&quot; in the &quot;annot&quot; table</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_age_months_est_max_list</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/age/months/max/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs, config2_ = testdata_ibs()</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs._get_all_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; eager = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; annot_age_months_est_max_list = ibs.get_annot_age_months_est_max(aid_list, eager=eager)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert len(aid_list) == len(annot_age_months_est_max_list)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_AGE_MONTHS_EST_MAX</span><span class=\"p\">,)</span>\n    <span class=\"n\">annot_age_months_est_max_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"s1\">&#39;rowid&#39;</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"n\">eager</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"n\">nInput</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_age_months_est_max_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_age_months_est\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_age_months_est\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/age/months/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_age_months_est</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    annot_age_months_est_list &lt;- annot.annot_age_months_est[aid_list]</span>\n\n<span class=\"sd\">    gets data from the annotation&#39;s native age in months</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_age_months_est_list</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/age/months/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_age_months_est_min_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_age_months_est_min</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">annot_age_months_est_max_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_age_months_est_max</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">annot_age_months_est_list</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span>\n        <span class=\"n\">annot_age_months_est_min_list</span><span class=\"p\">,</span>\n        <span class=\"n\">annot_age_months_est_max_list</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_age_months_est_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_age_months_est_min_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_age_months_est_min_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/age/months/min/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_age_months_est_min_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    annot_age_months_est_min_texts_list &lt;- annot.annot_age_months_est_min_texts[aid_list]</span>\n\n<span class=\"sd\">    gets string versions of the annotation&#39;s native min age in months</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_age_months_est_min_list</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/age/months/min/text/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_age_months_est_min_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_age_months_est_min</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">annot_age_months_est_min_text_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;Unknown&#39;</span> <span class=\"k\">if</span> <span class=\"n\">age_min</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">else</span> <span class=\"s1\">&#39;</span><span class=\"si\">%d</span><span class=\"s1\"> Months&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">age_min</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">age_min</span> <span class=\"ow\">in</span> <span class=\"n\">annot_age_months_est_min_list</span>\n    <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_age_months_est_min_text_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_age_months_est_max_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_age_months_est_max_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/age/months/max/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_age_months_est_max_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    annot_age_months_est_max_texts_list &lt;- annot.annot_age_months_est_max_texts[aid_list]</span>\n\n<span class=\"sd\">    gets string versions of the annotation&#39;s native max age in months</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_age_months_est_max_list</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/age/months/max/text/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_age_months_est_max_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_age_months_est_max</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">annot_age_months_est_max_text_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;Unknown&#39;</span> <span class=\"k\">if</span> <span class=\"n\">age_max</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">else</span> <span class=\"s1\">&#39;</span><span class=\"si\">%d</span><span class=\"s1\"> Months&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">age_max</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">age_max</span> <span class=\"ow\">in</span> <span class=\"n\">annot_age_months_est_max_list</span>\n    <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_age_months_est_max_text_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_age_months_est_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_age_months_est_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/age/months/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_age_months_est_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    annot_age_months_est_texts_list &lt;- annot.annot_age_months_est_texts[aid_list]</span>\n\n<span class=\"sd\">    gets string versions of the annotation&#39;s native combined age in months</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_age_months_est_text_list</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/age/months/text/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_age_months_est_min_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_age_months_est_min_texts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">annot_age_months_est_max_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_age_months_est_max_texts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">annot_age_months_est_text_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;</span><span class=\"si\">%s</span><span class=\"s1\"> to </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">age_min_text</span><span class=\"p\">,</span> <span class=\"n\">age_max_text</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">age_min_text</span><span class=\"p\">,</span> <span class=\"n\">age_max_text</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span>\n            <span class=\"n\">annot_age_months_est_min_text_list</span><span class=\"p\">,</span>\n            <span class=\"n\">annot_age_months_est_max_text_list</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">annot_age_months_est_text_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;UNKNOWN AGE&#39;</span> <span class=\"k\">if</span> <span class=\"n\">annot_age_months_est_text</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Unknown to Unknown&#39;</span> <span class=\"k\">else</span> <span class=\"n\">annot_age_months_est_text</span>\n        <span class=\"k\">for</span> <span class=\"n\">annot_age_months_est_text</span> <span class=\"ow\">in</span> <span class=\"n\">annot_age_months_est_text_list</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">annot_age_months_est_text_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_age_months_est_min\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_age_months_est_min\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/age/months/min/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_age_months_est_min</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">annot_age_months_est_min_list</span><span class=\"p\">,</span>\n                                 <span class=\"n\">duplicate_behavior</span><span class=\"o\">=</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    annot_age_months_est_min_list -&gt; annot.annot_age_months_est_min[aid_list]</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list</span>\n<span class=\"sd\">        annot_age_months_est_min_list</span>\n\n<span class=\"sd\">    TemplateInfo:</span>\n<span class=\"sd\">        Tsetter_native_column</span>\n<span class=\"sd\">        tbl = annot</span>\n<span class=\"sd\">        col = annot_age_months_est_min</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/age/months/min/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_AGE_MONTHS_EST_MIN</span><span class=\"p\">,)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">annot_age_months_est_min_list</span><span class=\"p\">,</span>\n               <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">duplicate_behavior</span><span class=\"o\">=</span><span class=\"n\">duplicate_behavior</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_age_months_est_max\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_age_months_est_max\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/age/months/max/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_age_months_est_max</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">annot_age_months_est_max_list</span><span class=\"p\">,</span>\n                                 <span class=\"n\">duplicate_behavior</span><span class=\"o\">=</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    annot_age_months_est_max_list -&gt; annot.annot_age_months_est_max[aid_list]</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list</span>\n<span class=\"sd\">        annot_age_months_est_max_list</span>\n\n<span class=\"sd\">    TemplateInfo:</span>\n<span class=\"sd\">        Tsetter_native_column</span>\n<span class=\"sd\">        tbl = annot</span>\n<span class=\"sd\">        col = annot_age_months_est_max</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/age/months/max/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_AGE_MONTHS_EST_MAX</span><span class=\"p\">,)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">annot_age_months_est_max_list</span><span class=\"p\">,</span>\n               <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">duplicate_behavior</span><span class=\"o\">=</span><span class=\"n\">duplicate_behavior</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_image_contributor_tag\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_image_contributor_tag\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/image/contributor/tag/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_image_contributor_tag</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;get_annot_image_contributor_tag&#39;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">contributor_tag_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_contributor_tag</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">contributor_tag_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_image_set_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_image_set_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/imageset/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_image_set_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;get_annot_image_contributor_tag&#39;</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/imageset/text/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">imagesettext_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_imagesettext</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">filter_imageset_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">([</span>\n        <span class=\"s1\">&#39;*Exemplars&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;*All Images&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;*Ungrouped Images&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">])</span>\n    <span class=\"n\">filtered_imagesettext_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">[</span>\n            <span class=\"n\">imageset</span>\n            <span class=\"k\">for</span> <span class=\"n\">imageset</span> <span class=\"ow\">in</span> <span class=\"n\">imagesettext</span>\n            <span class=\"k\">if</span> <span class=\"n\">imageset</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">filter_imageset_set</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">imagesettext</span> <span class=\"ow\">in</span> <span class=\"n\">imagesettext_list</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">imagesettext_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;,&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">imagesettext</span><span class=\"p\">))</span>\n        <span class=\"k\">for</span> <span class=\"n\">imagesettext</span> <span class=\"ow\">in</span> <span class=\"n\">filtered_imagesettext_list</span>\n    <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">imagesettext_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_rowids_from_partial_vuuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_rowids_from_partial_vuuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_rowids_from_partial_vuuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">partial_vuuid_strs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        partial_uuid_list (list):</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-get_annots_from_partial_uuids</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[::2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; vuuids = ibs.get_annot_visual_uuids(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; partial_vuuid_strs = [u[0:4] for u in map(str, vuuids)]</span>\n<span class=\"sd\">        &gt;&gt;&gt; aids_list = get_annot_rowids_from_partial_vuuids(ibs, partial_uuid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [[1], [3], [5], [7], [9], [11], [13]]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># Hackyway because I can&#39;t figure out startswith in sqlite for UUID blobs</span>\n    <span class=\"c1\"># just need to figure out how to convert a string into its corresponding byte</span>\n    <span class=\"c1\"># value, then I can do it with the referecence provided</span>\n    <span class=\"c1\"># References:</span>\n    <span class=\"c1\"># # search like with blobs</span>\n    <span class=\"c1\"># http://sqlite.1065341.n5.nabble.com/LIKE-with-BLOB-td48050.html</span>\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n    <span class=\"n\">vuuids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_visual_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">vuuid_strs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;-&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">vuuids</span><span class=\"p\">)]</span>\n    <span class=\"n\">aids_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">[</span><span class=\"n\">aid</span> <span class=\"k\">for</span> <span class=\"n\">aid</span><span class=\"p\">,</span> <span class=\"n\">vuuid</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">vuuid_strs</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">vuuid</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"n\">partial_vuuid</span><span class=\"p\">)]</span>\n        <span class=\"k\">for</span> <span class=\"n\">partial_vuuid</span> <span class=\"ow\">in</span> <span class=\"n\">partial_vuuid_strs</span>\n    <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">aids_list</span></div>\n\n    <span class=\"c1\">#partial_vuuid = partial_vuuid_strs[0]</span>\n\n    <span class=\"c1\">#res = ibs.db.cur.execute(</span>\n    <span class=\"c1\">#    &#39;&#39;&#39;</span>\n    <span class=\"c1\">#    SELECT annot_rowid from ANNOTATIONS</span>\n    <span class=\"c1\">#    WHERE annot_visual_uuid LIKE ? || &#39;%&#39;</span>\n    <span class=\"c1\">#    &#39;&#39;&#39;, (bytes(partial_vuuid),))</span>\n    <span class=\"c1\">#print(res.fetchall())</span>\n\n    <span class=\"c1\">#res = ibs.db.cur.execute(</span>\n    <span class=\"c1\">#    &#39;&#39;&#39;</span>\n    <span class=\"c1\">#    SELECT annot_rowid from ANNOTATIONS</span>\n    <span class=\"c1\">#    WHERE annot_visual_uuid LIKE ? || &#39;%&#39;</span>\n    <span class=\"c1\">#    &#39;&#39;&#39;, (partial_vuuid,))</span>\n    <span class=\"c1\">#print(res.fetchall())</span>\n\n    <span class=\"c1\">#res = ibs.db.cur.execute(</span>\n    <span class=\"c1\">#    &#39;&#39;&#39;</span>\n    <span class=\"c1\">#    SELECT annot_rowid from ANNOTATIONS</span>\n    <span class=\"c1\">#    WHERE annot_visual_uuid LIKE ? || &#39;%&#39;</span>\n    <span class=\"c1\">#    &#39;&#39;&#39;, (bytes(partial_vuuid),))</span>\n    <span class=\"c1\">#print(res.fetchall())</span>\n\n    <span class=\"c1\"># # || - is used to concat strings</span>\n\n    <span class=\"c1\">#res = ibs.db.cur.execute(</span>\n    <span class=\"c1\">#    &#39;&#39;&#39;</span>\n    <span class=\"c1\">#    SELECT annot_rowid from ANNOTATIONS</span>\n    <span class=\"c1\">#    WHERE annot_note LIKE ? || &#39;%&#39;</span>\n    <span class=\"c1\">#    &#39;&#39;&#39;, (&#39;very&#39;,))</span>\n    <span class=\"c1\">#print(res.fetchall())</span>\n    <span class=\"c1\">#pass</span>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_tag_text\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_tag_text\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_tag_text</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot; annot_tags_list &lt;- annot.annot_tags[aid_list]</span>\n\n<span class=\"sd\">    gets data from the &quot;native&quot; column &quot;annot_tags&quot; in the &quot;annot&quot; table</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: annot_tags_list</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs, config2_ = testdata_ibs()</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs._get_all_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; eager = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; annot_tags_list = ibs.get_annot_tag_text(aid_list, eager=eager)</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert len(aid_list) == len(annot_tags_list)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_TAG_TEXT</span><span class=\"p\">,)</span>\n    <span class=\"n\">annot_tags_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"s1\">&#39;rowid&#39;</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"n\">eager</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"n\">nInput</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_tags_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_tag_text\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_tag_text\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_tag_text</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">annot_tags_list</span><span class=\"p\">,</span> <span class=\"n\">duplicate_behavior</span><span class=\"o\">=</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot; annot_tags_list -&gt; annot.annot_tags[aid_list]</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list</span>\n<span class=\"sd\">        annot_tags_list</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\">#print(&#39;[ibs] set_annot_tag_text of aids=%r to tags=%r&#39; % (aid_list, annot_tags_list))</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_TAG_TEXT</span><span class=\"p\">,)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">annot_tags_list</span><span class=\"p\">,</span>\n               <span class=\"n\">id_iter</span><span class=\"p\">,</span> <span class=\"n\">duplicate_behavior</span><span class=\"o\">=</span><span class=\"n\">duplicate_behavior</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_reviewed\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_reviewed\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/reviewed/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_reviewed</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): &quot;All Instances Found&quot; flag, true if all objects of interest</span>\n<span class=\"sd\">    (animals) have an ANNOTATION in the annot</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/reviewed/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">reviewed_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_toggle_reviewed&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">reviewed_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_reviewed\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_reviewed\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/reviewed/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_reviewed</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">reviewed_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the annot all instances found bit</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/reviewed/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">reviewed</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">reviewed</span> <span class=\"ow\">in</span> <span class=\"n\">reviewed_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_toggle_reviewed&#39;</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_multiple\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_multiple\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/multiple/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_multiple</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/multiple/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; flag_list = get_annot_multiple(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = (&#39;flag_list = %s&#39; % (ut.repr2(flag_list),))</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_toggle_multiple&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">None</span> <span class=\"k\">if</span> <span class=\"n\">flag</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">flag</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">flag</span> <span class=\"ow\">in</span> <span class=\"n\">flag_list</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">flag_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_multiple\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_multiple\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/multiple/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_multiple</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the annot all instances found bit</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/multiple/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">flag</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">flag</span> <span class=\"ow\">in</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_toggle_multiple&#39;</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_interest\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_interest\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/interest/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_interest</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/interest/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; flag_list = get_annot_interest(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = (&#39;flag_list = %s&#39; % (ut.repr2(flag_list),))</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_toggle_interest&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">None</span> <span class=\"k\">if</span> <span class=\"n\">flag</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">flag</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">flag</span> <span class=\"ow\">in</span> <span class=\"n\">flag_list</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">flag_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_interest\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_interest\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/interest/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_interest</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">,</span> <span class=\"n\">quiet_delete_thumbs</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">delete_thumbs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the annot all instances found bit</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/interest/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">flag</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">flag</span> <span class=\"ow\">in</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_toggle_interest&#39;</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">delete_thumbs</span><span class=\"p\">:</span>\n        <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)))</span>\n        <span class=\"n\">config2_</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;thumbsize&#39;</span><span class=\"p\">:</span> <span class=\"mi\">221</span><span class=\"p\">}</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_image_thumbs</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">quiet</span><span class=\"o\">=</span><span class=\"n\">quiet_delete_thumbs</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config2_</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_static_encounter\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_static_encounter\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/encounter/static/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_static_encounter</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">vals</span><span class=\"p\">):</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">)</span>\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">vals</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_static_encounter&#39;</span><span class=\"p\">,),</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_static_encounter\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.get_annot_static_encounter\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/encounter/static/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_static_encounter</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aids</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_static_encounter&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aids</span><span class=\"p\">)</span></div>\n\n\n<span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">ANNOT_STAGED_FLAG</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/staged/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">_set_annot_staged_flags</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets if an annotation is staged</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/staged/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">flag</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">flag</span> <span class=\"ow\">in</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_STAGED_FLAG</span><span class=\"p\">,),</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_staged_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_staged_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/staged/uuid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_staged_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">annot_uuid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): all nids of known animals</span>\n<span class=\"sd\">        (does not include unknown names)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">annot_uuid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">annot_uuid</span> <span class=\"ow\">in</span> <span class=\"n\">annot_uuid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_staged_uuid&#39;</span><span class=\"p\">,),</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span>\n    <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">annot_uuid</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n        <span class=\"k\">for</span> <span class=\"n\">annot_uuid</span> <span class=\"ow\">in</span> <span class=\"n\">annot_uuid_list</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">_set_annot_staged_flags</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_staged_user_ids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_staged_user_ids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_invalidator</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">ANNOT_STAGED_USER_ID</span><span class=\"p\">],</span> <span class=\"n\">rowidx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/staged/user/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_staged_user_ids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">user_id_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the staged annotation user id</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/staged/user/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">user_id</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">user_id</span> <span class=\"ow\">in</span> <span class=\"n\">user_id_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ANNOT_STAGED_USER_ID</span><span class=\"p\">,),</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_staged_metadata\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.set_annot_staged_metadata\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/staged/metadata/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_staged_metadata</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">metadata_dict_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the annot&#39;s staged metadata using a metadata dictionary</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/annot/staged/metadata/</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --test-set_annot_metadata</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_annot_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; import random</span>\n<span class=\"sd\">        &gt;&gt;&gt; # build test data</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[0:1]</span>\n<span class=\"sd\">        &gt;&gt;&gt; metadata_dict_list = [</span>\n<span class=\"sd\">        &gt;&gt;&gt;     {&#39;test&#39;: random.uniform(0.0, 1.0)},</span>\n<span class=\"sd\">        &gt;&gt;&gt; ]</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(metadata_dict_list))</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.set_annot_metadata(aid_list, metadata_dict_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # verify results</span>\n<span class=\"sd\">        &gt;&gt;&gt; metadata_dict_list_ = ibs.get_annot_metadata(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(metadata_dict_list_))</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert metadata_dict_list == metadata_dict_list_</span>\n<span class=\"sd\">        &gt;&gt;&gt; metadata_str_list = [ut.to_json(metadata_dict) for metadata_dict in metadata_dict_list]</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(metadata_str_list))</span>\n<span class=\"sd\">        &gt;&gt;&gt; metadata_str_list_ = ibs.get_annot_metadata(aid_list, return_raw=True)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(metadata_str_list_))</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert metadata_str_list == metadata_str_list_</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">aid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">metadata_str_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">metadata_dict</span> <span class=\"ow\">in</span> <span class=\"n\">metadata_dict_list</span><span class=\"p\">:</span>\n        <span class=\"n\">metadata_str</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">(</span><span class=\"n\">metadata_dict</span><span class=\"p\">)</span>\n        <span class=\"n\">metadata_str_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">metadata_str</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">metadata_str</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">metadata_str</span> <span class=\"ow\">in</span> <span class=\"n\">metadata_str_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">ANNOTATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_staged_metadata_json&#39;</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<span class=\"c1\">#==========</span>\n<span class=\"c1\"># Testdata</span>\n<span class=\"c1\">#==========</span>\n\n\n<div class=\"viewcode-block\" id=\"testdata_ibs\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_annot_funcs.testdata_ibs\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">testdata_ibs</span><span class=\"p\">():</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Auto-docstr for &#39;testdata_ibs&#39;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --allexamples</span>\n<span class=\"sd\">        python -m ibeis.control.manual_annot_funcs --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/control/manual_annot_funcs", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}