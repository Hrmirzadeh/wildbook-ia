{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.control"}], "title": "ibeis.control.manual_ibeiscontrol_funcs", "body": "<h1>Source code for ibeis.control.manual_ibeiscontrol_funcs</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">import</span> <span class=\"nn\">six</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">vtool</span> <span class=\"k\">as</span> <span class=\"nn\">vt</span>\n<span class=\"c1\">#from ibeis import constants as const</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">accessor_decors</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control.controller_inject</span> <span class=\"k\">import</span> <span class=\"n\">make_ibs_register_decorator</span>\n<span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"n\">CLASS_INJECT_KEY</span><span class=\"p\">,</span> <span class=\"n\">register_ibs_method</span> <span class=\"o\">=</span> <span class=\"n\">make_ibs_register_decorator</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"new_query_request\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_ibeiscontrol_funcs.new_query_request\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">cfgdict</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                      <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">NOT_QUIET</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    alias for ibeis.algo.hots.query_request.new_ibeis_query_request</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        qaid_list (list):</span>\n<span class=\"sd\">        daid_list (list):</span>\n<span class=\"sd\">        cfgdict (None):</span>\n<span class=\"sd\">        verbose (bool):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        ibeis.QueryRequest: qreq_ -  hyper-parameters</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots</span> <span class=\"k\">import</span> <span class=\"n\">query_request</span>\n    <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">query_request</span><span class=\"o\">.</span><span class=\"n\">new_ibeis_query_request</span><span class=\"p\">(</span>\n        <span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">cfgdict</span><span class=\"o\">=</span><span class=\"n\">cfgdict</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">qreq_</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_kpts_distinctiveness\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_ibeiscontrol_funcs.get_annot_kpts_distinctiveness\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_kpts_distinctiveness</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    very hacky, but cute way to cache keypoint distinctivness</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (list):</span>\n<span class=\"sd\">        dstncvs_normer (None):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: dstncvs_list</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_ibeiscontrol_funcs --test-get_annot_kpts_distinctiveness</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # SLOW_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; # xdoctest: +SKIP</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_ibeiscontrol_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.algo.hots import distinctiveness_normalizer</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; import numpy as np</span>\n<span class=\"sd\">        &gt;&gt;&gt; config2_ = None</span>\n<span class=\"sd\">        &gt;&gt;&gt; # build test data</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids(species=const.TEST_SPECIES.ZEB_PLAIN)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # execute function</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list1 = aid_list[::2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list2 = aid_list[1::3]</span>\n<span class=\"sd\">        &gt;&gt;&gt; dstncvs_list1 = get_annot_kpts_distinctiveness(ibs, aid_list1)</span>\n<span class=\"sd\">        &gt;&gt;&gt; dstncvs_list2 = get_annot_kpts_distinctiveness(ibs, aid_list2)</span>\n<span class=\"sd\">        &gt;&gt;&gt; dstncvs_list = get_annot_kpts_distinctiveness(ibs, aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.depth_profile(dstncvs_list1))</span>\n<span class=\"sd\">        &gt;&gt;&gt; stats_dict = ut.dict_stack([ut.get_stats(dstncvs) for dstncvs in dstncvs_list])</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(stats_dict))</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert np.all(np.array(stats_dict[&#39;min&#39;]) &gt;= 0), &#39;distinctiveness was out of bounds&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; assert np.all(np.array(stats_dict[&#39;max&#39;]) &lt;= 1), &#39;distinctiveness was out of bounds&#39;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots</span> <span class=\"k\">import</span> <span class=\"n\">distinctiveness_normalizer</span> <span class=\"k\">as</span> <span class=\"n\">dcvs_normer</span>\n\n    <span class=\"c1\"># per-species disinctivness wrapper around ibeis cached function</span>\n    <span class=\"c1\"># get feature rowids</span>\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">fid_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_feat_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                                  <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                                                  <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">))</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_species_rowids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">))</span>\n    <span class=\"c1\"># Compute distinctivness separately for each species</span>\n    <span class=\"n\">unique_sids</span><span class=\"p\">,</span> <span class=\"n\">groupxs</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">group_indices</span><span class=\"p\">(</span><span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">fids_groups</span>          <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">apply_grouping</span><span class=\"p\">(</span><span class=\"n\">fid_list</span><span class=\"p\">,</span> <span class=\"n\">groupxs</span><span class=\"p\">)</span>\n    <span class=\"n\">species_text_list</span>    <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_species_texts</span><span class=\"p\">(</span><span class=\"n\">unique_sids</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Map distinctivness computation</span>\n    <span class=\"n\">normer_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">dcvs_normer</span><span class=\"o\">.</span><span class=\"n\">request_species_distinctiveness_normalizer</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"p\">)</span>\n                   <span class=\"k\">for</span> <span class=\"n\">species</span> <span class=\"ow\">in</span> <span class=\"n\">species_text_list</span><span class=\"p\">]</span>\n    <span class=\"c1\"># Reduce to get results</span>\n    <span class=\"n\">dstncvs_groups</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">get_feat_kpts_distinctiveness</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">fids</span><span class=\"p\">,</span> <span class=\"n\">dstncvs_normer</span><span class=\"o\">=</span><span class=\"n\">dstncvs_normer</span><span class=\"p\">,</span>\n                                      <span class=\"n\">species_rowid</span><span class=\"o\">=</span><span class=\"n\">sid</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">dstncvs_normer</span><span class=\"p\">,</span> <span class=\"n\">fids</span><span class=\"p\">,</span> <span class=\"n\">sid</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">normer_list</span><span class=\"p\">,</span> <span class=\"n\">fids_groups</span><span class=\"p\">,</span> <span class=\"n\">unique_sids</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">dstncvs_list</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">invert_apply_grouping</span><span class=\"p\">(</span><span class=\"n\">dstncvs_groups</span><span class=\"p\">,</span> <span class=\"n\">groupxs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">dstncvs_list</span></div>\n\n\n<span class=\"c1\">#dcvs_cfgkeys = dcvs_normer.DCVS_DEFAULT.get_varnames() + [&#39;species_rowid&#39;]</span>\n<span class=\"c1\">#dcvs_colname = dcvs_normer.DCVS_DEFAULT.name</span>\n\n<span class=\"c1\">#@accessor_decors.cache_getter(const.FEATURE_TABLE, dcvs_colname, cfgkeys=dcvs_cfgkeys, debug=None)</span>\n<div class=\"viewcode-block\" id=\"get_feat_kpts_distinctiveness\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_ibeiscontrol_funcs.get_feat_kpts_distinctiveness\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_feat_kpts_distinctiveness</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">fid_list</span><span class=\"p\">,</span> <span class=\"n\">dstncvs_normer</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">species_rowid</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"c1\">#print(&#39;[ibs] get_feat_kpts_distinctiveness fid_list=%r&#39; % (fid_list,))</span>\n    <span class=\"n\">vecs_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_feat_vecs</span><span class=\"p\">(</span><span class=\"n\">fid_list</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nInput</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"n\">dstncvs_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">None</span> <span class=\"k\">if</span> <span class=\"n\">vecs</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span>\n                    <span class=\"n\">dstncvs_normer</span><span class=\"o\">.</span><span class=\"n\">get_distinctiveness</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">vecs</span>\n                    <span class=\"ow\">in</span> <span class=\"n\">vecs_list</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">dstncvs_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"show_annot\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_ibeiscontrol_funcs.show_annot\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">show_annot</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; viz helper see ibeis.viz.viz_chip.show_chip &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.viz</span> <span class=\"k\">import</span> <span class=\"n\">viz_chip</span>\n    <span class=\"k\">return</span> <span class=\"n\">viz_chip</span><span class=\"o\">.</span><span class=\"n\">show_chip</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"show_annot_image\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_ibeiscontrol_funcs.show_annot_image\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">show_annot_image</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; viz helper see ibeis.viz.viz_chip.show_chip &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.viz</span> <span class=\"k\">import</span> <span class=\"n\">viz_image</span>\n    <span class=\"n\">gid</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_gids</span><span class=\"p\">(</span><span class=\"n\">aid</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">viz_image</span><span class=\"o\">.</span><span class=\"n\">show_image</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_ibeiscontrol_funcs</span>\n<span class=\"sd\">        python -m ibeis.control.manual_ibeiscontrol_funcs --allexamples</span>\n<span class=\"sd\">        python -m ibeis.control.manual_ibeiscontrol_funcs --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/control/manual_ibeiscontrol_funcs", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}