{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.control"}], "title": "ibeis.control.manual_wildbook_funcs", "body": "<h1>Source code for ibeis.control.manual_wildbook_funcs</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">CommandLine;</span>\n<span class=\"sd\">    # Reset IBEIS database (can skip if done)</span>\n<span class=\"sd\">    python -m ibeis.tests.reset_testdbs --reset_mtest</span>\n<span class=\"sd\">    python -m ibeis --tf reset_mtest</span>\n\n<span class=\"sd\">Notes:</span>\n<span class=\"sd\">    Moving components: java, tomcat, wildbook.war.</span>\n\n<span class=\"sd\">    python -m utool.util_inspect check_module_usage --pat=&quot;manual_wildbook_funcs.py&quot;</span>\n\n\n<span class=\"sd\">CommandLine;</span>\n<span class=\"sd\">    # Start IA server</span>\n<span class=\"sd\">    python -m ibeis --web --db PZ_MTEST</span>\n\n<span class=\"sd\">    # Reset Wildbook database</span>\n<span class=\"sd\">    python -m ibeis purge_local_wildbook</span>\n\n<span class=\"sd\">    # Install Wildbook</span>\n<span class=\"sd\">    python -m ibeis install_wildbook</span>\n\n<span class=\"sd\">    # Startup Wildbook</span>\n<span class=\"sd\">    python -m ibeis startup_wildbook_server</span>\n<span class=\"sd\">    --show</span>\n\n<span class=\"sd\">    # Poll wildbook info</span>\n<span class=\"sd\">    python -m ibeis get_wildbook_ia_url</span>\n\n<span class=\"sd\">    # Login to wildbook (can skip)</span>\n<span class=\"sd\">    python -m ibeis test_wildbook_login</span>\n\n<span class=\"sd\">    # Ship ImageSets to wildbook</span>\n<span class=\"sd\">    python -m ibeis wildbook_signal_imgsetid_list</span>\n\n<span class=\"sd\">    # Change annotations names to a single name</span>\n<span class=\"sd\">    python -m ibeis wildbook_signal_annot_name_changes:1</span>\n\n<span class=\"sd\">    # Change annotations names back to normal</span>\n<span class=\"sd\">    python -m ibeis wildbook_signal_annot_name_changes:2</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">controller_inject</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">wildbook_manager</span> <span class=\"k\">as</span> <span class=\"n\">wb_man</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control.controller_inject</span> <span class=\"k\">import</span> <span class=\"n\">make_ibs_register_decorator</span>\n<span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">DISABLE_WILDBOOK_SIGNAL</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--no-wb-signal&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">CLASS_INJECT_KEY</span><span class=\"p\">,</span> <span class=\"n\">register_ibs_method</span> <span class=\"o\">=</span> <span class=\"n\">make_ibs_register_decorator</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">register_api</span>   <span class=\"o\">=</span> <span class=\"n\">controller_inject</span><span class=\"o\">.</span><span class=\"n\">get_ibeis_flask_api</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\">#PREFERED_BROWSER = &#39;chrome&#39;</span>\n<span class=\"c1\">#webbrowser._tryorder</span>\n<span class=\"n\">PREFERED_BROWSER</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_computer_name</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;hyrule&#39;</span><span class=\"p\">:</span>\n    <span class=\"n\">PREFERED_BROWSER</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;firefox&#39;</span>\n\n\n<div class=\"viewcode-block\" id=\"get_wildbook_base_url\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_wildbook_funcs.get_wildbook_base_url\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_wildbook_base_url</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">wb_target</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">DISABLE_WILDBOOK_SIGNAL</span><span class=\"p\">:</span>\n        <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Wildbook signals are turned off via the command line&#39;</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">IOError</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"n\">wb_port</span> <span class=\"o\">=</span> <span class=\"mi\">8080</span>\n    <span class=\"n\">wb_target</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">WILDBOOK_TARGET</span> <span class=\"k\">if</span> <span class=\"n\">wb_target</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">wb_target</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">containerized</span><span class=\"p\">:</span>\n        <span class=\"n\">wb_hostname</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;nginx&#39;</span>\n        <span class=\"n\">wb_target</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">wb_hostname</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;127.0.0.1&#39;</span>\n\n    <span class=\"n\">wb_hostname</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">wb_hostname</span><span class=\"p\">)</span>\n    <span class=\"n\">wb_port</span>     <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">wb_port</span><span class=\"p\">)</span>\n    <span class=\"n\">wb_target</span>   <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">wb_target</span><span class=\"p\">)</span>\n\n    <span class=\"n\">wildbook_base_url</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://</span><span class=\"si\">%s</span><span class=\"s1\">:</span><span class=\"si\">%s</span><span class=\"s1\">/</span><span class=\"si\">%s</span><span class=\"s1\">/&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">wb_hostname</span><span class=\"p\">,</span> <span class=\"n\">wb_port</span><span class=\"p\">,</span> <span class=\"n\">wb_target</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n    <span class=\"n\">wildbook_base_url</span> <span class=\"o\">=</span> <span class=\"n\">wildbook_base_url</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s1\">&#39;/&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;USING WB BASEURL: </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">wildbook_base_url</span><span class=\"p\">,</span> <span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">wildbook_base_url</span></div>\n\n\n<div class=\"viewcode-block\" id=\"assert_ia_available_for_wb\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_wildbook_funcs.assert_ia_available_for_wb\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">assert_ia_available_for_wb</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">wb_target</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Test if we have a server alive</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">ia_url</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_wildbook_ia_url</span><span class=\"p\">(</span><span class=\"n\">wb_target</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">ia_url</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Wildbook signals are turned off via the command line&#39;</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">IOError</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">IOError</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs.assert_ia_available_for_wb] Caught IOError, returning None&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">printex</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Could not get IA url. BLINDLY CHARCHING FORWARD!&#39;</span><span class=\"p\">,</span> <span class=\"n\">iswarning</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">have_server</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">for</span> <span class=\"n\">count</span> <span class=\"ow\">in</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delayed_retry_gen</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">raise_</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">rsp</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">ia_url</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/api/test/heartbeat/&#39;</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n                <span class=\"n\">have_server</span> <span class=\"o\">=</span> <span class=\"n\">rsp</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n                <span class=\"k\">break</span>\n            <span class=\"k\">except</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">ConnectionError</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">have_server</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s1\">&#39;The image analysis server is not started.&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">have_server</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_wildbook_ia_url\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_wildbook_funcs.get_wildbook_ia_url\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_wildbook_ia_url</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">wb_target</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Where does wildbook expect us to be?</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis get_wildbook_ia_url</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_wildbook_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;PZ_MTEST&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ia_url = ibs.get_wildbook_ia_url()</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;ia_url = %r&#39; % (ia_url,))</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">wb_url</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_wildbook_base_url</span><span class=\"p\">(</span><span class=\"n\">wb_target</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">IOError</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs.get_wildbook_ia_url] Caught IOError, returning None&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">wb_url</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/ia?status&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">status</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s1\">&#39;Could not get IA status from wildbook&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">json_response</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n    <span class=\"n\">ia_url</span> <span class=\"o\">=</span> <span class=\"n\">json_response</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;iaURL&#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\">#print(&#39;response = %r&#39; % (response,))</span>\n    <span class=\"k\">return</span> <span class=\"n\">ia_url</span></div>\n\n\n<div class=\"viewcode-block\" id=\"wildbook_signal_annot_name_changes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_wildbook_funcs.wildbook_signal_annot_name_changes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/wildbook/signal/annot/name/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">wildbook_signal_annot_name_changes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">wb_target</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                                       <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (int):  list of annotation ids(default = None)</span>\n<span class=\"sd\">        tomcat_dpath (None): (default = None)</span>\n<span class=\"sd\">        wb_target (None): (default = None)</span>\n<span class=\"sd\">        dryrun (bool): (default = False)</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis wildbook_signal_annot_name_changes:0 --dryrun</span>\n<span class=\"sd\">        python -m ibeis wildbook_signal_annot_name_changes:1 --dryrun</span>\n<span class=\"sd\">        python -m ibeis wildbook_signal_annot_name_changes:1</span>\n<span class=\"sd\">        python -m ibeis wildbook_signal_annot_name_changes:2</span>\n\n<span class=\"sd\">    Setup:</span>\n<span class=\"sd\">        &gt;&gt;&gt; wb_target = None</span>\n<span class=\"sd\">        &gt;&gt;&gt; dryrun = ut.get_argflag(&#39;--dryrun&#39;)</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_wildbook_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;PZ_MTEST&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; #gid_list = ibs.get_valid_gids()[0:10]</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = ibs.get_valid_gids()[3:5]</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ut.flatten(ibs.get_image_aids(gid_list))</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Test case where some names change, some do not. There are no new names.</span>\n<span class=\"sd\">        &gt;&gt;&gt; old_nid_list = ibs.get_annot_name_rowids(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; new_nid_list = ut.list_roll(old_nid_list, 1)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.set_annot_name_rowids(aid_list, new_nid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ibs.wildbook_signal_annot_name_changes(aid_list, wb_target, dryrun)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.set_annot_name_rowids(aid_list, old_nid_list)</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_wildbook_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;PZ_MTEST&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; #gid_list = ibs.get_valid_gids()[0:10]</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = ibs.get_valid_gids()[3:5]</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ut.flatten(ibs.get_image_aids(gid_list))</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Test case where all names change to one known name</span>\n<span class=\"sd\">        &gt;&gt;&gt; #old_nid_list = ibs.get_annot_name_rowids(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; #new_nid_list = [old_nid_list[0]] * len(old_nid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; old_nid_list = [1, 2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; new_nid_list = [1, 1]</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;old_nid_list = %r&#39; % (old_nid_list,))</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;new_nid_list = %r&#39; % (new_nid_list,))</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.set_annot_name_rowids(aid_list, new_nid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ibs.wildbook_signal_annot_name_changes(aid_list, wb_target, dryrun)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Undo changes here (not undone in wildbook)</span>\n<span class=\"sd\">        &gt;&gt;&gt; #ibs.set_annot_name_rowids(aid_list, old_nid_list)</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_wildbook_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=&#39;PZ_MTEST&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = ibs.get_valid_gids()[3:5]</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ut.flatten(ibs.get_image_aids(gid_list))</span>\n<span class=\"sd\">        &gt;&gt;&gt; old_nid_list = [1, 2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.set_annot_name_rowids(aid_list, old_nid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Signal what currently exists (should put them back to normal)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ibs.wildbook_signal_annot_name_changes(aid_list, wb_target, dryrun)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs.wildbook_signal_annot_name_changes] signaling annot name changes to wildbook&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">wb_url</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_wildbook_base_url</span><span class=\"p\">(</span><span class=\"n\">wb_target</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">IOError</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs.wildbook_signal_annot_name_changes] Caught IOError, returning None&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">assert_ia_available_for_wb</span><span class=\"p\">(</span><span class=\"n\">wb_target</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">if</span> <span class=\"n\">aid_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">(</span><span class=\"n\">is_known</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"n\">annot_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">annot_name_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_name_texts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">grouped_uuids</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">group_items</span><span class=\"p\">(</span><span class=\"n\">annot_uuid_list</span><span class=\"p\">,</span> <span class=\"n\">annot_name_text_list</span><span class=\"p\">)</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">wb_url</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/ia&#39;</span>\n    <span class=\"n\">payloads</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span><span class=\"s1\">&#39;resolver&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;assignNameToAnnotations&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;name&#39;</span><span class=\"p\">:</span> <span class=\"n\">new_name</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;annotationIds&#39;</span> <span class=\"p\">:</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">lmap</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">annot_uuids</span><span class=\"p\">),</span>\n        <span class=\"p\">}}}</span>\n        <span class=\"k\">for</span> <span class=\"n\">new_name</span><span class=\"p\">,</span> <span class=\"n\">annot_uuids</span> <span class=\"ow\">in</span> <span class=\"n\">grouped_uuids</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">status_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">json_payload</span> <span class=\"ow\">in</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ProgressIter</span><span class=\"p\">(</span><span class=\"n\">payloads</span><span class=\"p\">,</span> <span class=\"n\">lbl</span><span class=\"o\">=</span><span class=\"s1\">&#39;submitting URL&#39;</span><span class=\"p\">,</span> <span class=\"n\">freq</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[_send] URL=</span><span class=\"si\">%r</span><span class=\"s1\"> with json_payload=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">json_payload</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span>\n            <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"n\">json_payload</span><span class=\"p\">)</span>\n            <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">status</span><span class=\"p\">:</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Failed to push new names&#39;</span><span class=\"p\">)</span>\n                <span class=\"c1\"># print(response.text)</span>\n        <span class=\"n\">status_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">status_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"wildbook_signal_name_changes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_wildbook_funcs.wildbook_signal_name_changes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/wildbook/signal/name/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">wildbook_signal_name_changes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">nid_list</span><span class=\"p\">,</span> <span class=\"n\">new_name_list</span><span class=\"p\">,</span> <span class=\"n\">wb_target</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                                 <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        nid_list (int):  list of name ids</span>\n<span class=\"sd\">        new_name_list (str):  list of corresponding names</span>\n<span class=\"sd\">        wb_target (None): (default = None)</span>\n<span class=\"sd\">        dryrun (bool): (default = False)</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis wildbook_signal_name_changes:0 --dryrun</span>\n<span class=\"sd\">        python -m ibeis wildbook_signal_name_changes:1 --dryrun</span>\n<span class=\"sd\">        python -m ibeis wildbook_signal_name_changes:1</span>\n<span class=\"sd\">        python -m ibeis wildbook_signal_name_changes:2</span>\n\n<span class=\"sd\">    Setup:</span>\n<span class=\"sd\">        &gt;&gt;&gt; wb_target = None</span>\n<span class=\"sd\">        &gt;&gt;&gt; dryrun = ut.get_argflag(&#39;--dryrun&#39;)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs.wildbook_signal_name_changes] signaling name changes to wildbook&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">wb_url</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_wildbook_base_url</span><span class=\"p\">(</span><span class=\"n\">wb_target</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">IOError</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs.wildbook_signal_name_changes] Caught IOError, returning None&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">assert_ia_available_for_wb</span><span class=\"p\">(</span><span class=\"n\">wb_target</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"n\">current_name_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_name_texts</span><span class=\"p\">(</span><span class=\"n\">nid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">combined_list</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">new_name_list</span><span class=\"p\">,</span> <span class=\"n\">current_name_list</span><span class=\"p\">)),</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">wb_url</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/ia&#39;</span>\n    <span class=\"n\">json_payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;resolver&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;renameIndividuals&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;new&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">_</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">combined_list</span><span class=\"p\">],</span>\n                <span class=\"s1\">&#39;old&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">_</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">combined_list</span><span class=\"p\">],</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">status_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[_send] URL=</span><span class=\"si\">%r</span><span class=\"s1\"> with json_payload=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">json_payload</span><span class=\"p\">))</span>\n    <span class=\"k\">if</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span>\n        <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"n\">json_payload</span><span class=\"p\">)</span>\n        <span class=\"n\">response_json</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n        <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span> <span class=\"ow\">and</span> <span class=\"n\">response_json</span><span class=\"p\">[</span><span class=\"s1\">&#39;success&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">status</span><span class=\"p\">:</span>\n            <span class=\"n\">status_list</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Failed to update names&#39;</span><span class=\"p\">)</span>\n            <span class=\"c1\"># print(response.text)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">name_response</span> <span class=\"ow\">in</span> <span class=\"n\">response_json</span><span class=\"p\">[</span><span class=\"s1\">&#39;results&#39;</span><span class=\"p\">]:</span>\n                <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">name_response</span><span class=\"p\">[</span><span class=\"s1\">&#39;success&#39;</span><span class=\"p\">]</span>\n                <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">name_response</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n                <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">status</span> <span class=\"ow\">or</span> <span class=\"s1\">&#39;unknown MarkedIndividual&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">error</span>\n                <span class=\"n\">status_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">)</span>\n        <span class=\"c1\"># ut.embed()</span>\n    <span class=\"k\">return</span> <span class=\"n\">status_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"wildbook_get_existing_names\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_wildbook_funcs.wildbook_get_existing_names\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">wildbook_get_existing_names</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">wb_target</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs.wildbook_get_existing_names] getting existing names out of wildbook&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">wb_url</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_wildbook_base_url</span><span class=\"p\">(</span><span class=\"n\">wb_target</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">IOError</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs.wildbook_get_existing_names] Caught IOError, returning None&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">assert_ia_available_for_wb</span><span class=\"p\">(</span><span class=\"n\">wb_target</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">wb_url</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/rest/org.ecocean.MarkedIndividual&#39;</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n    <span class=\"n\">response_json</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">wildbook_existing_name_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">_</span><span class=\"p\">[</span><span class=\"s1\">&#39;individualID&#39;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">response_json</span><span class=\"p\">]</span>\n        <span class=\"n\">wildbook_existing_name_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">wildbook_existing_name_list</span><span class=\"p\">))</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"n\">wildbook_existing_name_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">return</span> <span class=\"n\">wildbook_existing_name_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"wildbook_signal_imgsetid_list\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_wildbook_funcs.wildbook_signal_imgsetid_list\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/wildbook/signal/imageset/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">wildbook_signal_imgsetid_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">imgsetid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                                  <span class=\"n\">set_shipped_flag</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                  <span class=\"n\">open_url_on_complete</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                  <span class=\"n\">wb_target</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Exports specified imagesets to wildbook. This is a synchronous call.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        imgsetid_list (list): (default = None)</span>\n<span class=\"sd\">        set_shipped_flag (bool): (default = True)</span>\n<span class=\"sd\">        open_url_on_complete (bool): (default = True)</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: PUT</span>\n<span class=\"sd\">        URL:    /api/wildbook/signal/imageset/</span>\n\n<span class=\"sd\">    Ignore:</span>\n<span class=\"sd\">        cd $CODE_DIR/Wildbook/tmp</span>\n\n<span class=\"sd\">        # Ensure IA server is up</span>\n<span class=\"sd\">        python -m ibeis --web --db PZ_MTEST</span>\n\n<span class=\"sd\">        # Reset IBEIS database</span>\n<span class=\"sd\">        python -m ibeis.tests.reset_testdbs --reset_mtest</span>\n<span class=\"sd\">        python -m ibeis  reset_mtest</span>\n\n<span class=\"sd\">        # Completely remove Wildbook database</span>\n<span class=\"sd\">        python -m ibeis  purge_local_wildbook</span>\n\n<span class=\"sd\">        # Install Wildbook</span>\n<span class=\"sd\">        python -m ibeis  install_wildbook</span>\n\n<span class=\"sd\">        # Startup Wildbook</span>\n<span class=\"sd\">        python -m ibeis  startup_wildbook_server</span>\n\n<span class=\"sd\">        # Login to wildbook</span>\n<span class=\"sd\">        python -m ibeis  test_wildbook_login</span>\n\n<span class=\"sd\">        # Ship ImageSets to wildbook</span>\n<span class=\"sd\">        python -m ibeis  wildbook_signal_imgsetid_list</span>\n\n<span class=\"sd\">        # Change annotations names to a single name</span>\n<span class=\"sd\">        python -m ibeis  wildbook_signal_annot_name_changes:1</span>\n\n<span class=\"sd\">        # Change annotations names back to normal</span>\n<span class=\"sd\">        python -m ibeis  wildbook_signal_annot_name_changes:2</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis wildbook_signal_imgsetid_list</span>\n<span class=\"sd\">        python -m ibeis wildbook_signal_imgsetid_list --dryrun</span>\n<span class=\"sd\">        python -m ibeis wildbook_signal_imgsetid_list --break</span>\n\n<span class=\"sd\">    SeeAlso:</span>\n<span class=\"sd\">        ~/local/build_scripts/init_wildbook.sh</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_wildbook_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; dryrun = ut.get_argflag(&#39;--dryrun&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; wb_target = None</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Need to start a web server for wildbook to hook into</span>\n<span class=\"sd\">        &gt;&gt;&gt; defaultdb = &#39;PZ_MTEST&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(defaultdb=defaultdb)</span>\n<span class=\"sd\">        &gt;&gt;&gt; #gid_list = ibs.get_valid_gids()[0:10]</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = ibs.get_valid_gids()[3:6]</span>\n<span class=\"sd\">        &gt;&gt;&gt; new_imgsetid = ibs.create_new_imageset_from_images(gid_list)  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; imgsetid = new_imgsetid</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;new imageset uuid = %r&#39; % (ibs.get_imageset_uuid(new_imgsetid),))</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;new imageset text = %r&#39; % (ibs.get_imageset_text(new_imgsetid),))</span>\n<span class=\"sd\">        &gt;&gt;&gt; imgsetid_list = [new_imgsetid]</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.set_imageset_processed_flags([new_imgsetid], [1])</span>\n<span class=\"sd\">        &gt;&gt;&gt; gid_list = ibs.get_imageset_gids(new_imgsetid)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.set_image_reviewed(gid_list, [1] * len(gid_list))</span>\n<span class=\"sd\">        &gt;&gt;&gt; set_shipped_flag = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; open_url_on_complete = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; if ut.get_argflag(&#39;--bg&#39;):</span>\n<span class=\"sd\">        &gt;&gt;&gt;     web_ibs = ibeis.opendb_bg_web(defaultdb)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ibs.wildbook_signal_imgsetid_list(imgsetid_list, set_shipped_flag, open_url_on_complete, wb_target, dryrun)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # cleanup</span>\n<span class=\"sd\">        &gt;&gt;&gt; #ibs.delete_imagesets(new_imgsetid)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        &gt;&gt;&gt; if ut.get_argflag(&#39;--bg&#39;):</span>\n<span class=\"sd\">        &gt;&gt;&gt;     web_ibs.terminate2()</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">wb_url</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_wildbook_base_url</span><span class=\"p\">(</span><span class=\"n\">wb_target</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">IOError</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs.wildbook_signal_imgsetid_list] Caught IOError, returning None&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">assert_ia_available_for_wb</span><span class=\"p\">(</span><span class=\"n\">wb_target</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">imgsetid_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">imgsetid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_imgsetids</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Check to make sure imagesets are ok:</span>\n    <span class=\"k\">for</span> <span class=\"n\">imgsetid</span> <span class=\"ow\">in</span> <span class=\"n\">imgsetid_list</span><span class=\"p\">:</span>\n        <span class=\"c1\"># First, check if imageset can be pushed</span>\n        <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_imageset_aids</span><span class=\"p\">(</span><span class=\"n\">imgsetid</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n            <span class=\"s1\">&#39;ImageSet imgsetid=</span><span class=\"si\">%r</span><span class=\"s1\"> cannot be shipped with0 annots&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">imgsetid</span><span class=\"p\">,))</span>\n        <span class=\"n\">unknown_flags</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">is_aid_unknown</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n        <span class=\"n\">unnamed_aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">unknown_flags</span><span class=\"p\">)</span>\n        <span class=\"n\">unnamed_ok_aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">filter_annots_general</span><span class=\"p\">(</span>\n            <span class=\"n\">unnamed_aid_list</span><span class=\"p\">,</span>\n            <span class=\"n\">minqual</span><span class=\"o\">=</span><span class=\"s1\">&#39;ok&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">nUnnamedOk</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">unnamed_ok_aid_list</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">nUnnamedOk</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;ImageSet imgsetid=</span><span class=\"si\">%r</span><span class=\"s1\">1 cannot be shipped becuase &#39;</span>\n             <span class=\"s1\">&#39;annotation(s) </span><span class=\"si\">%r</span><span class=\"s1\"> with an identifiable quality have &#39;</span>\n             <span class=\"s1\">&#39;not been named&#39;</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">imgsetid</span><span class=\"p\">,</span> <span class=\"n\">unnamed_ok_aid_list</span><span class=\"p\">,</span> <span class=\"p\">))</span>\n\n    <span class=\"c1\"># Call Wildbook url to signal update</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs.wildbook_signal_imgsetid_list] ship imgsetid_list = </span><span class=\"si\">%r</span><span class=\"s1\"> to wildbook&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n        <span class=\"n\">imgsetid_list</span><span class=\"p\">,</span> <span class=\"p\">))</span>\n    <span class=\"n\">imageset_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_imageset_uuid</span><span class=\"p\">(</span><span class=\"n\">imgsetid_list</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs.wildbook_signal_imgsetid_list] ship imgset_uuid_list = </span><span class=\"si\">%r</span><span class=\"s1\"> to wildbook&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n        <span class=\"n\">imageset_uuid_list</span><span class=\"p\">,</span> <span class=\"p\">))</span>\n\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">wb_url</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/ia&#39;</span>\n    <span class=\"n\">dbname</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get_db_init_uuid</span><span class=\"p\">()</span>\n    <span class=\"n\">occur_url_fmt</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">wb_url</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/occurrence.jsp?number=</span><span class=\"si\">{uuid}</span><span class=\"s1\">&amp;dbname=</span><span class=\"si\">{dbname}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\">#enc_url_fmt = (wb_url + &#39;/encounters/encounter.jsp?number={uuid}&#39;)</span>\n\n    <span class=\"c1\"># Check and push &#39;done&#39; imagesets</span>\n    <span class=\"n\">status_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">imgsetid</span><span class=\"p\">,</span> <span class=\"n\">imageset_uuid</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">imgsetid_list</span><span class=\"p\">,</span> <span class=\"n\">imageset_uuid_list</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[_send] URL=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"p\">))</span>\n        <span class=\"n\">json_payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;resolver&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;fromIAImageSet&#39;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">imageset_uuid</span><span class=\"p\">)</span> <span class=\"p\">}}</span>\n        <span class=\"k\">if</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span>\n            <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"n\">json_payload</span><span class=\"p\">)</span>\n            <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;response = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,))</span>\n            <span class=\"k\">if</span> <span class=\"n\">set_shipped_flag</span><span class=\"p\">:</span>\n                <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_imageset_shipped_flags</span><span class=\"p\">([</span><span class=\"n\">imgsetid</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">status</span><span class=\"p\">])</span>\n                <span class=\"k\">if</span> <span class=\"n\">status</span> <span class=\"ow\">and</span> <span class=\"n\">open_url_on_complete</span><span class=\"p\">:</span>\n                    <span class=\"n\">view_occur_url</span> <span class=\"o\">=</span> <span class=\"n\">occur_url_fmt</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"o\">=</span><span class=\"n\">imageset_uuid</span><span class=\"p\">,</span> <span class=\"n\">dbname</span><span class=\"o\">=</span><span class=\"n\">dbname</span><span class=\"p\">)</span>\n                    <span class=\"n\">_browser</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_prefered_browser</span><span class=\"p\">(</span><span class=\"n\">PREFERED_BROWSER</span><span class=\"p\">)</span>\n                    <span class=\"n\">_browser</span><span class=\"o\">.</span><span class=\"n\">open_new_tab</span><span class=\"p\">(</span><span class=\"n\">view_occur_url</span><span class=\"p\">)</span>\n        <span class=\"n\">status_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">)</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">update_special_imagesets</span><span class=\"p\">()</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">notify_observers</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">status_list</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_wildbook_funcs</span>\n<span class=\"sd\">        python -m ibeis.control.manual_wildbook_funcs --allexamples</span>\n<span class=\"sd\">        python -m ibeis.control.manual_wildbook_funcs --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/control/manual_wildbook_funcs", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}