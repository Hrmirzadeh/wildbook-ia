{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.control"}], "title": "ibeis.control.STAGING_SCHEMA", "body": "<h1>Source code for ibeis.control.STAGING_SCHEMA</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Module Licence and docstring</span>\n\n<span class=\"sd\">TODO: ideally the ibeis.constants module would not be used here</span>\n<span class=\"sd\">and each function would use its own constant variables that are suffixed</span>\n<span class=\"sd\">with the last version number that they existed in</span>\n\n<span class=\"sd\">CommandLine:</span>\n<span class=\"sd\">    python -m ibeis.control.STAGING_SCHEMA --test-autogen_staging_schema</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">constants</span> <span class=\"k\">as</span> <span class=\"n\">const</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">STAGING_SCHEMA_CURRENT</span>\n    <span class=\"n\">UPDATE_CURRENT</span>  <span class=\"o\">=</span> <span class=\"n\">STAGING_SCHEMA_CURRENT</span><span class=\"o\">.</span><span class=\"n\">update_current</span>\n    <span class=\"n\">VERSION_CURRENT</span> <span class=\"o\">=</span> <span class=\"n\">STAGING_SCHEMA_CURRENT</span><span class=\"o\">.</span><span class=\"n\">VERSION_CURRENT</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"n\">UPDATE_CURRENT</span>  <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">VERSION_CURRENT</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;[dbcache] NO STAGING_SCHEMA_CURRENT AUTO-GENERATED!&quot;</span><span class=\"p\">)</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">profile</span>\n\n\n<span class=\"n\">REVIEW_ROWID</span>        <span class=\"o\">=</span> <span class=\"s1\">&#39;review_rowid&#39;</span>\n<span class=\"n\">TEST_ROWID</span>          <span class=\"o\">=</span> <span class=\"s1\">&#39;test_rowid&#39;</span>\n\n\n<span class=\"c1\"># =======================</span>\n<span class=\"c1\"># Schema Version 1.0.0</span>\n<span class=\"c1\"># =======================</span>\n\n\n<div class=\"viewcode-block\" id=\"update_1_0_0\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.STAGING_SCHEMA.update_1_0_0\">[docs]</a><span class=\"nd\">@profile</span>\n<span class=\"k\">def</span> <span class=\"nf\">update_1_0_0</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">add_table</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">REVIEW_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;review_rowid&#39;</span><span class=\"p\">,</span>                 <span class=\"s1\">&#39;INTEGER PRIMARY KEY&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_1_rowid&#39;</span><span class=\"p\">,</span>                <span class=\"s1\">&#39;INTEGER NOT NULL&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;annot_2_rowid&#39;</span><span class=\"p\">,</span>                <span class=\"s1\">&#39;INTEGER NOT NULL&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;review_count&#39;</span><span class=\"p\">,</span>                 <span class=\"s1\">&#39;INTEGER NOT NULL&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;review_decision&#39;</span><span class=\"p\">,</span>              <span class=\"s1\">&#39;INTEGER NOT NULL&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;review_time_posix&#39;</span><span class=\"p\">,</span>            <span class=\"s1\">&#39;&#39;&#39;INTEGER DEFAULT (CAST(STRFTIME(&#39;</span><span class=\"si\">%s</span><span class=\"s1\">&#39;, &#39;NOW&#39;, &#39;UTC&#39;) AS INTEGER))&#39;&#39;&#39;</span><span class=\"p\">),</span>  <span class=\"c1\"># this should probably be UCT</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;review_identity&#39;</span><span class=\"p\">,</span>              <span class=\"s1\">&#39;TEXT&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;review_tags&#39;</span><span class=\"p\">,</span>                  <span class=\"s1\">&#39;TEXT&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">),</span>\n        <span class=\"n\">superkeys</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s1\">&#39;annot_1_rowid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;annot_2_rowid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;review_count&#39;</span><span class=\"p\">)],</span>\n        <span class=\"n\">docstr</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;&#39;</span>\n<span class=\"s1\">        Used to store completed user review states of two matched annotations</span>\n<span class=\"s1\">        &#39;&#39;&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"update_1_0_1\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.STAGING_SCHEMA.update_1_0_1\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">update_1_0_1</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">modify_table</span><span class=\"p\">(</span>\n        <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">REVIEW_TABLE</span><span class=\"p\">,</span>\n        <span class=\"n\">add_columns</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;review_user_confidence&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;INTEGER&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">],</span>\n        <span class=\"n\">rename_columns</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;review_identity&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;review_user_identity&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"update_1_0_2\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.STAGING_SCHEMA.update_1_0_2\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">update_1_0_2</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">modify_table</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">REVIEW_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span>                   <span class=\"s1\">&#39;review_uuid&#39;</span><span class=\"p\">,</span>                    <span class=\"s1\">&#39;UUID&#39;</span><span class=\"p\">,</span>    <span class=\"kc\">None</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span>                <span class=\"s1\">&#39;review_client_start_time_posix&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;INTEGER&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span>                <span class=\"s1\">&#39;review_client_end_time_posix&#39;</span><span class=\"p\">,</span>   <span class=\"s1\">&#39;INTEGER&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span>                <span class=\"s1\">&#39;review_server_start_time_posix&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;INTEGER&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;review_time_posix&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;review_server_end_time_posix&#39;</span><span class=\"p\">,</span>   <span class=\"s1\">&#39;INTEGER&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">))</span></div>\n\n\n<div class=\"viewcode-block\" id=\"post_1_0_2\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.STAGING_SCHEMA.post_1_0_2\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">post_1_0_2</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">ibs</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">uuid</span>\n        <span class=\"n\">review_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">_get_all_review_rowids</span><span class=\"p\">()</span>\n        <span class=\"n\">review_uuid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">review_rowid_list</span><span class=\"p\">))]</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">_set_review_uuids</span><span class=\"p\">(</span><span class=\"n\">review_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">review_uuid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">modify_table</span><span class=\"p\">(</span>\n        <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">REVIEW_TABLE</span><span class=\"p\">,</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"s1\">&#39;review_uuid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;UUID NOT NULL&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"update_1_0_3\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.STAGING_SCHEMA.update_1_0_3\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">update_1_0_3</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">modify_table</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">REVIEW_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;review_decision&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;review_evidence_decision&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;INTEGER&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span>              <span class=\"s1\">&#39;review_meta_decision&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;INTEGER&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">))</span></div>\n\n\n<div class=\"viewcode-block\" id=\"update_1_1_0\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.STAGING_SCHEMA.update_1_1_0\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">update_1_1_0</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">add_table</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;test_rowid&#39;</span><span class=\"p\">,</span>                   <span class=\"s1\">&#39;INTEGER PRIMARY KEY&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;test_uuid&#39;</span><span class=\"p\">,</span>                    <span class=\"s1\">&#39;UUID&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;test_user_identity&#39;</span><span class=\"p\">,</span>           <span class=\"s1\">&#39;TEXT&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;test_challenge_json&#39;</span><span class=\"p\">,</span>          <span class=\"s1\">&#39;TEXT&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;test_response_json&#39;</span><span class=\"p\">,</span>           <span class=\"s1\">&#39;TEXT&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;test_result&#39;</span><span class=\"p\">,</span>                  <span class=\"s1\">&#39;INTEGER&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;test_time_posix&#39;</span><span class=\"p\">,</span>            <span class=\"s1\">&#39;&#39;&#39;INTEGER DEFAULT (CAST(STRFTIME(&#39;</span><span class=\"si\">%s</span><span class=\"s1\">&#39;, &#39;NOW&#39;, &#39;UTC&#39;) AS INTEGER))&#39;&#39;&#39;</span><span class=\"p\">),</span>  <span class=\"c1\"># this should probably be UCT</span>\n    <span class=\"p\">),</span>\n        <span class=\"n\">superkeys</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s1\">&#39;test_uuid&#39;</span><span class=\"p\">,)],</span>\n        <span class=\"n\">docstr</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;&#39;</span>\n<span class=\"s1\">        Used to store tests given to the user, their responses, and their results</span>\n<span class=\"s1\">        &#39;&#39;&#39;</span><span class=\"p\">)</span></div>\n\n\n<span class=\"c1\"># ========================</span>\n<span class=\"c1\"># Valid Versions &amp; Mapping</span>\n<span class=\"c1\"># ========================</span>\n\n<span class=\"c1\"># TODO: do we save a backup with the older version number in the file name?</span>\n\n\n<span class=\"n\">base</span> <span class=\"o\">=</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">BASE_DATABASE_VERSION</span>\n<span class=\"n\">VALID_VERSIONS</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">odict</span><span class=\"p\">([</span>\n    <span class=\"c1\">#version:    (Pre-Update Function,  Update Function,    Post-Update Function)</span>\n    <span class=\"p\">(</span><span class=\"n\">base</span>   <span class=\"p\">,</span>    <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span>                 <span class=\"kc\">None</span><span class=\"p\">,</span>               <span class=\"kc\">None</span>                <span class=\"p\">)),</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;1.0.0&#39;</span><span class=\"p\">,</span>    <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span>                 <span class=\"n\">update_1_0_0</span><span class=\"p\">,</span>       <span class=\"kc\">None</span>                <span class=\"p\">)),</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;1.0.1&#39;</span><span class=\"p\">,</span>    <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span>                 <span class=\"n\">update_1_0_1</span><span class=\"p\">,</span>       <span class=\"kc\">None</span>                <span class=\"p\">)),</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;1.0.2&#39;</span><span class=\"p\">,</span>    <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span>                 <span class=\"n\">update_1_0_2</span><span class=\"p\">,</span>       <span class=\"n\">post_1_0_2</span>          <span class=\"p\">)),</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;1.0.3&#39;</span><span class=\"p\">,</span>    <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span>                 <span class=\"n\">update_1_0_3</span><span class=\"p\">,</span>       <span class=\"kc\">None</span>                <span class=\"p\">)),</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;1.1.0&#39;</span><span class=\"p\">,</span>    <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span>                 <span class=\"n\">update_1_1_0</span><span class=\"p\">,</span>       <span class=\"kc\">None</span>                <span class=\"p\">)),</span>\n<span class=\"p\">])</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">SeeAlso:</span>\n<span class=\"sd\">    When updating versions need to test and modify in</span>\n<span class=\"sd\">    IBEISController._init_sqldbcore</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n\n\n<span class=\"n\">LEGACY_UPDATE_FUNCTIONS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"p\">]</span>\n\n\n<div class=\"viewcode-block\" id=\"autogen_staging_schema\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.STAGING_SCHEMA.autogen_staging_schema\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">autogen_staging_schema</span><span class=\"p\">():</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    autogen_staging_schema</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.STAGING_SCHEMA --test-autogen_staging_schema</span>\n<span class=\"sd\">        python -m ibeis.control.STAGING_SCHEMA --test-autogen_staging_schema --diff=1</span>\n<span class=\"sd\">        python -m ibeis.control.STAGING_SCHEMA --test-autogen_staging_schema -n=-1</span>\n<span class=\"sd\">        python -m ibeis.control.STAGING_SCHEMA --test-autogen_staging_schema -n=0</span>\n<span class=\"sd\">        python -m ibeis.control.STAGING_SCHEMA --test-autogen_staging_schema -n=1</span>\n<span class=\"sd\">        python -m ibeis.control.STAGING_SCHEMA --force-incremental-db-update</span>\n<span class=\"sd\">        python -m ibeis.control.STAGING_SCHEMA --test-autogen_staging_schema --write</span>\n<span class=\"sd\">        python -m ibeis.control.STAGING_SCHEMA --test-autogen_staging_schema --force-incremental-db-update --dump-autogen-schema</span>\n<span class=\"sd\">        python -m ibeis.control.STAGING_SCHEMA --test-autogen_staging_schema --force-incremental-db-update</span>\n\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.STAGING_SCHEMA import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; autogen_staging_schema()</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">STAGING_SCHEMA</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">_sql_helpers</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argval</span><span class=\"p\">(</span><span class=\"s1\">&#39;-n&#39;</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">schema_spec</span> <span class=\"o\">=</span> <span class=\"n\">STAGING_SCHEMA</span>\n    <span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">_sql_helpers</span><span class=\"o\">.</span><span class=\"n\">autogenerate_nth_schema_version</span><span class=\"p\">(</span><span class=\"n\">schema_spec</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">db</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    python -m ibeis.algo.preproc.preproc_chip</span>\n<span class=\"sd\">    python -m ibeis.control.STAGING_SCHEMA --allexamples</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/control/STAGING_SCHEMA", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}