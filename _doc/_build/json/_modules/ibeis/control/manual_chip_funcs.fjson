{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.control"}], "title": "ibeis.control.manual_chip_funcs", "body": "<h1>Source code for ibeis.control.manual_chip_funcs</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">six</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">six.moves</span> <span class=\"k\">import</span> <span class=\"nb\">zip</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"k\">import</span> <span class=\"n\">join</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">constants</span> <span class=\"k\">as</span> <span class=\"n\">const</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">accessor_decors</span><span class=\"p\">,</span> <span class=\"n\">controller_inject</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control.controller_inject</span> <span class=\"k\">import</span> <span class=\"n\">make_ibs_register_decorator</span>\n<span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">CLASS_INJECT_KEY</span><span class=\"p\">,</span> <span class=\"n\">register_ibs_method</span> <span class=\"o\">=</span> <span class=\"n\">make_ibs_register_decorator</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">register_api</span>   <span class=\"o\">=</span> <span class=\"n\">controller_inject</span><span class=\"o\">.</span><span class=\"n\">get_ibeis_flask_api</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">ANNOT_ROWID</span>   <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_rowid&#39;</span>\n<span class=\"n\">CHIP_ROWID</span>    <span class=\"o\">=</span> <span class=\"s1\">&#39;chip_rowid&#39;</span>\n<span class=\"n\">FEAT_VECS</span>     <span class=\"o\">=</span> <span class=\"s1\">&#39;feature_vecs&#39;</span>\n<span class=\"n\">FEAT_KPTS</span>     <span class=\"o\">=</span> <span class=\"s1\">&#39;feature_keypoints&#39;</span>\n<span class=\"n\">FEAT_NUM_FEAT</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;feature_num_feats&#39;</span>\n<span class=\"n\">CONFIG_ROWID</span>  <span class=\"o\">=</span> <span class=\"s1\">&#39;config_rowid&#39;</span>\n\n<span class=\"c1\"># ---------------------</span>\n<span class=\"c1\"># ROOT LEAF FUNCTIONS</span>\n<span class=\"c1\"># ---------------------</span>\n\n<span class=\"n\">NEW_DEPC</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_chip_fpath\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_chip_funcs.get_annot_chip_fpath\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># register_api(&#39;/api/chip/fpath/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_chip_fpath</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                         <span class=\"n\">check_external_storage</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">num_retries</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns the cached chip uri based off of the current</span>\n<span class=\"sd\">    configuration.</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        chip_fpath_list (list): cfpaths defined by ANNOTATIONs</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/chip/fpath/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;chips&#39;</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;img&#39;</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">,</span>\n                              <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"n\">ensure</span><span class=\"p\">,</span> <span class=\"n\">read_extern</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_chips\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_chip_funcs.get_annot_chips\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/chip/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_chips</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (int):  list of annotation ids</span>\n<span class=\"sd\">        ensure (bool):  eager evaluation if True</span>\n<span class=\"sd\">        config2_ (QueryRequest):  query request object with hyper-parameters</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: chip_list</span>\n\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_chip_funcs get_annot_chips</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/chip/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_chip_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[0:5]</span>\n<span class=\"sd\">        &gt;&gt;&gt; config2_ = {&#39;dim_size&#39;: 450, &#39;resize_dim&#39;: &#39;area&#39;}</span>\n<span class=\"sd\">        &gt;&gt;&gt; chip_list = get_annot_chips(ibs, aid_list, config2_)</span>\n<span class=\"sd\">        &gt;&gt;&gt; chip_sum_list = [chip.sum() for chip in chip_list]</span>\n<span class=\"sd\">        &gt;&gt;&gt; target = [96053500, 65152954, 67223241, 109358624, 73995960]</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_almost_eq(chip_sum_list, target, 2000)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(chip_sum_list)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;chips&#39;</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;img&#39;</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">,</span>\n                              <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"n\">ensure</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_chip_sizes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_chip_funcs.get_annot_chip_sizes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\">#@cache_getter(const.ANNOTATION_TABLE, &#39;chipsizes&#39;)</span>\n<span class=\"c1\"># @register_api(&#39;/api/chip/sizes/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_chip_sizes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (int):  list of annotation ids</span>\n<span class=\"sd\">        ensure (bool):  eager evaluation if True</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: chipsz_list - the (width, height) of computed annotation chips.</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_chip_funcs get_annot_chip_sizes</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_chip_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; # build test data</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[0:3]</span>\n<span class=\"sd\">        &gt;&gt;&gt; ensure = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; config2_ = {&#39;dim_size&#39;: 450, &#39;resize_dim&#39;: &#39;area&#39;}</span>\n<span class=\"sd\">        &gt;&gt;&gt; # execute function</span>\n<span class=\"sd\">        &gt;&gt;&gt; chipsz_list = get_annot_chip_sizes(ibs, aid_list, ensure, config2_=config2_)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # verify results</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(chipsz_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [(545, 372), (603, 336), (520, 390)]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;chips&#39;</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;width&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;height&#39;</span><span class=\"p\">),</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"n\">ensure</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_chip_dlensqrd\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_chip_funcs.get_annot_chip_dlensqrd\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_chip_dlensqrd</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        aid_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: topx2_dlen_sqrd</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_chip_funcs get_annot_chip_dlensqrd</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/chip/dlensqrd/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_chip_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; config2_ = {&#39;dim_size&#39;: 450, &#39;resize_dim&#39;: &#39;area&#39;}</span>\n<span class=\"sd\">        &gt;&gt;&gt; topx2_dlen_sqrd = ibs.get_annot_chip_dlensqrd(aid_list, config2_=config2_)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(topx2_dlen_sqrd)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [435409, 476505, 422500, 422500, 422500, 437924, 405000, 405000, 447805, 420953, 405008, 406265, 512674]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">topx2_dlen_sqrd</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">((</span><span class=\"n\">w</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">h</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chip_sizes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">topx2_dlen_sqrd</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_chip_thumbpath\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_chip_funcs.get_annot_chip_thumbpath\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/chip/thumbpath/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_chip_thumbpath</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">thumbsize</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    just constructs the path. does not compute it. that is done by</span>\n<span class=\"sd\">    api_thumb_delegate</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/chip/thumbpath/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">thumbsize</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">thumbsize</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">other_cfg</span><span class=\"o\">.</span><span class=\"n\">thumb_size</span>\n    <span class=\"n\">thumb_dpath</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">thumb_dpath</span>\n    <span class=\"n\">thumb_suffix</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;_&#39;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">thumbsize</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">CHIP_THUMB_SUFFIX</span>\n    <span class=\"n\">annot_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_visual_uuids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">thumbpath_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">thumb_dpath</span><span class=\"p\">,</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">text_type</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">thumb_suffix</span><span class=\"p\">)</span>\n                      <span class=\"k\">for</span> <span class=\"n\">uuid</span> <span class=\"ow\">in</span> <span class=\"n\">annot_uuid_list</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">thumbpath_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_chip_thumbtup\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_chip_funcs.get_annot_chip_thumbtup\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/chip/thumbtup/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_chip_thumbtup</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">thumbsize</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    get chip thumb info</span>\n<span class=\"sd\">    The return type of this is interpreted and computed in</span>\n<span class=\"sd\">    ~/code/guitool/guitool/api_thumb_delegate.py</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list  (list):</span>\n<span class=\"sd\">        thumbsize (int):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: thumbtup_list - [(thumb_path, img_path, imgsize, bboxes, thetas)]</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_chip_funcs --test-get_annot_chip_thumbtup</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/chip/thumbtup/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_chip_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[1:2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; thumbsize = 128</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_annot_chip_thumbtup(ibs, aid_list, thumbsize)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\">#isiterable = isinstance(aid_list, (list, tuple, np.ndarray))</span>\n    <span class=\"c1\">#if not isiterable:</span>\n    <span class=\"c1\">#   aid_list = [aid_list]</span>\n    <span class=\"c1\"># HACK TO MAKE CHIPS COMPUTE</span>\n    <span class=\"c1\">#cid_list = ibs.get _annot_chip_rowids(aid_list, ensure=True)  # NOQA</span>\n    <span class=\"c1\">#thumbsize = 256</span>\n    <span class=\"k\">if</span> <span class=\"n\">thumbsize</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">thumbsize</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">other_cfg</span><span class=\"o\">.</span><span class=\"n\">thumb_size</span>\n    <span class=\"n\">thumb_gpaths</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chip_thumbpath</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">thumbsize</span><span class=\"o\">=</span><span class=\"n\">thumbsize</span><span class=\"p\">,</span>\n                                                <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">)</span>\n    <span class=\"c1\">#print(thumb_gpaths)</span>\n    <span class=\"n\">chip_paths</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chip_fpath</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">)</span>\n    <span class=\"n\">chipsize_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chip_sizes</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">)</span>\n    <span class=\"n\">thumbtup_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"n\">thumb_path</span><span class=\"p\">,</span> <span class=\"n\">chip_path</span><span class=\"p\">,</span> <span class=\"n\">chipsize</span><span class=\"p\">,</span> <span class=\"p\">[],</span> <span class=\"p\">[],</span> <span class=\"p\">[])</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">thumb_path</span><span class=\"p\">,</span> <span class=\"n\">chip_path</span><span class=\"p\">,</span> <span class=\"n\">chipsize</span><span class=\"p\">)</span> <span class=\"ow\">in</span>\n        <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">thumb_gpaths</span><span class=\"p\">,</span> <span class=\"n\">chip_paths</span><span class=\"p\">,</span> <span class=\"n\">chipsize_list</span><span class=\"p\">,)</span>\n    <span class=\"p\">]</span>\n    <span class=\"c1\">#if not isiterable:</span>\n    <span class=\"c1\">#    return thumbtup_list[0]</span>\n    <span class=\"k\">return</span> <span class=\"n\">thumbtup_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_chip_thumb_path2\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_chip_funcs.get_annot_chip_thumb_path2\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_chip_thumb_path2</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">thumbsize</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    get chip thumb info</span>\n<span class=\"sd\">    The return type of this is interpreted and computed in</span>\n<span class=\"sd\">    ~/code/guitool/guitool/api_thumb_delegate.py</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list  (list):</span>\n<span class=\"sd\">        thumbsize (int):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: thumbtup_list - [(thumb_path, img_path, imgsize, bboxes, thetas)]</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_chip_funcs --test-get_annot_chip_thumbtup</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/chip/thumbtup/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_chip_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()[1:2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; thumbsize = 128</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_annot_chip_thumbtup(ibs, aid_list, thumbsize)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">thumbsize</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{}</span> <span class=\"k\">if</span> <span class=\"n\">config</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">&#39;thumbsize&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">thumbsize</span>\n    <span class=\"n\">imgpath_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;chipthumb&#39;</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;img&#39;</span><span class=\"p\">,</span>\n                                      <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">read_extern</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">imgpath_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"delete_annot_chips\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_chip_funcs.delete_annot_chips\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">deleter</span>\n<span class=\"c1\"># @register_api(&#39;/api/chip/&#39;, methods=[&#39;DELETE&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">delete_annot_chips</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Clears annotation data (does not remove the annotation)</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: DELETE</span>\n<span class=\"sd\">        URL:    /api/chip/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># FIXME: Should config2_ be passed down?</span>\n    <span class=\"c1\"># Not sure why it isn&#39;t currently</span>\n    <span class=\"n\">thumbpath_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chip_thumbpath</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\">#print(thumbpath_list)</span>\n    <span class=\"c1\">#ut.remove_fpaths(thumbpath_list, quiet=quiet, lbl=&#39;chip_thumbs&#39;)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">remove_existing_fpaths</span><span class=\"p\">(</span><span class=\"n\">thumbpath_list</span><span class=\"p\">,</span> <span class=\"n\">quiet</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">lbl</span><span class=\"o\">=</span><span class=\"s1\">&#39;chip_thumbs&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">delete_property</span><span class=\"p\">(</span><span class=\"s1\">&#39;chips&#39;</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_part_chips\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_chip_funcs.get_part_chips\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/pchip/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_part_chips</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">part_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">eager</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        part_rowid_list (int):  list of part ids</span>\n<span class=\"sd\">        ensure (bool):  eager evaluation if True</span>\n<span class=\"sd\">        config2_ (QueryRequest):  query request object with hyper-parameters</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: chip_list</span>\n\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_chip_funcs get_part_chips</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/pchip/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_chip_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = aid_list[:10]</span>\n<span class=\"sd\">        &gt;&gt;&gt; bbox_list = ibs.get_annot_bboxes(aid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; bbox_list = [</span>\n<span class=\"sd\">        &gt;&gt;&gt;     (xtl + 100, ytl + 100, w - 100, h - 100)</span>\n<span class=\"sd\">        &gt;&gt;&gt;     for xtl, ytl, w, h in bbox_list</span>\n<span class=\"sd\">        &gt;&gt;&gt; ]</span>\n<span class=\"sd\">        &gt;&gt;&gt; part_rowid_list = ibs.add_parts(aid_list, bbox_list=bbox_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; config2_ = {&#39;dim_size&#39;: 450, &#39;resize_dim&#39;: &#39;area&#39;}</span>\n<span class=\"sd\">        &gt;&gt;&gt; chip_list = get_part_chips(ibs, part_rowid_list, config2_)</span>\n<span class=\"sd\">        &gt;&gt;&gt; chip_sum_list = [chip.sum() for chip in chip_list]</span>\n<span class=\"sd\">        &gt;&gt;&gt; target = [86763970, 62020065, 61333964, 111418156, 63593594, 51404427, 139395045, 84060806, 41257586, 89658838]</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.assert_almost_eq(chip_sum_list, target, 2000)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(chip_sum_list)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_part</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;pchips&#39;</span><span class=\"p\">,</span> <span class=\"n\">part_rowid_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;img&#39;</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">,</span>\n                              <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"n\">ensure</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"testdata_ibs\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_chip_funcs.testdata_ibs\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">testdata_ibs</span><span class=\"p\">():</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">config2_</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">config2_</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_chip_funcs</span>\n<span class=\"sd\">        python -m ibeis.control.manual_chip_funcs --allexamples</span>\n<span class=\"sd\">        python -m ibeis.control.manual_chip_funcs --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/control/manual_chip_funcs", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}