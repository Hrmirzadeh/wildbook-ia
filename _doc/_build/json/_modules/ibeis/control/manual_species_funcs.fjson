{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.control"}], "title": "ibeis.control.manual_species_funcs", "body": "<h1>Source code for ibeis.control.manual_species_funcs</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">python -c &quot;import utool as ut; ut.write_modscript_alias(&#39;Tgen.sh&#39;, &#39;ibeis.templates.template_generator&#39;)&quot;</span>\n<span class=\"sd\">sh Tgen.sh --key species --invert --Tcfg with_getters=True with_setters=False --modfname manual_species_funcs</span>\n\n<span class=\"sd\"># TODO: Fix this name it is too special case</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uuid</span>\n<span class=\"kn\">import</span> <span class=\"nn\">functools</span>\n<span class=\"kn\">import</span> <span class=\"nn\">six</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"kn\">from</span> <span class=\"nn\">six.moves</span> <span class=\"k\">import</span> <span class=\"nb\">range</span><span class=\"p\">,</span> <span class=\"nb\">zip</span><span class=\"p\">,</span> <span class=\"nb\">map</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"c1\">#import numpy as np</span>\n<span class=\"c1\">#import vtool as vt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">constants</span> <span class=\"k\">as</span> <span class=\"n\">const</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">accessor_decors</span><span class=\"p\">,</span> <span class=\"n\">controller_inject</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control.controller_inject</span> <span class=\"k\">import</span> <span class=\"n\">make_ibs_register_decorator</span>\n<span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">CLASS_INJECT_KEY</span><span class=\"p\">,</span> <span class=\"n\">register_ibs_method</span> <span class=\"o\">=</span> <span class=\"n\">make_ibs_register_decorator</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">register_api</span>   <span class=\"o\">=</span> <span class=\"n\">controller_inject</span><span class=\"o\">.</span><span class=\"n\">get_ibeis_flask_api</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">SPECIES_ROWID</span>   <span class=\"o\">=</span> <span class=\"s1\">&#39;species_rowid&#39;</span>\n<span class=\"n\">SPECIES_UUID</span>    <span class=\"o\">=</span> <span class=\"s1\">&#39;species_uuid&#39;</span>\n<span class=\"n\">SPECIES_TEXT</span>    <span class=\"o\">=</span> <span class=\"s1\">&#39;species_text&#39;</span>\n<span class=\"n\">SPECIES_NICE</span>    <span class=\"o\">=</span> <span class=\"s1\">&#39;species_nice&#39;</span>\n<span class=\"n\">SPECIES_CODE</span>    <span class=\"o\">=</span> <span class=\"s1\">&#39;species_code&#39;</span>\n<span class=\"n\">SPECIES_NOTE</span>    <span class=\"o\">=</span> <span class=\"s1\">&#39;species_note&#39;</span>\n<span class=\"n\">SPECIES_ENABLED</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;species_toggle_enabled&#39;</span>\n\n\n<span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">ider</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/species/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">_get_all_species_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): all nids of known animals</span>\n<span class=\"sd\">        (does not include unknown names)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\">#all_known_species_rowids = ibs._get_all_known_lblannot_rowids(const.SPECIES_KEY)</span>\n    <span class=\"n\">all_known_species_rowids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get_all_rowids</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">all_known_species_rowids</span>\n\n\n<div class=\"viewcode-block\" id=\"get_all_species_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.get_all_species_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">ider</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_all_species_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): all nids of known animals</span>\n<span class=\"sd\">        (does not include unknown names)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">_get_all_species_rowids</span><span class=\"p\">()</span>\n    <span class=\"n\">species_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_species_texts</span><span class=\"p\">(</span><span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">species_text_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_all_species_nice\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.get_all_species_nice\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">ider</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_all_species_nice</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): all nids of known animals</span>\n<span class=\"sd\">        (does not include unknown names)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">_get_all_species_rowids</span><span class=\"p\">()</span>\n    <span class=\"n\">species_nice_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_species_nice</span><span class=\"p\">(</span><span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">species_nice_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"sanitize_species_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.sanitize_species_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"c1\">#@register_api(&#39;/api/species/sanitize/&#39;, methods=[&#39;PUT&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">sanitize_species_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_text_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    changes unknown species to the unknown value</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (IBEISController):  ibeis controller object</span>\n<span class=\"sd\">        species_text_list (list):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: species_text_list_</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_species_funcs --test-sanitize_species_texts</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: POST</span>\n<span class=\"sd\">        URL:    /api/species/sanitize</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_species_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; # build test data</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_text_list = [&#39;foo&#39;, &#39;bar&#39;, &#39;zebra_plains&#39;]</span>\n<span class=\"sd\">        &gt;&gt;&gt; # execute function</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_text_list_ = sanitize_species_texts(ibs, species_text_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # verify results</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ut.repr2(species_text_list_, nl=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [&#39;foo&#39;, &#39;bar&#39;, &#39;zebra_plains&#39;]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># valid_species = ibs.get_all_species_texts()</span>\n    <span class=\"c1\"># ibsfuncs.assert_valid_species_texts(ibs, species_text_list, iswarning=True)</span>\n    <span class=\"c1\"># def _sanitize_species_text(species_text):</span>\n    <span class=\"c1\">#     if species_text is None:</span>\n    <span class=\"c1\">#         return None</span>\n    <span class=\"c1\">#     elif species_text in valid_species:</span>\n    <span class=\"c1\">#         return species_text</span>\n    <span class=\"c1\">#     else:</span>\n    <span class=\"c1\">#         return const.UNKNOWN</span>\n    <span class=\"c1\"># species_text_list_ = [_sanitize_species_text(species_text)</span>\n    <span class=\"c1\">#                       for species_text in species_text_list]</span>\n    <span class=\"c1\"># # old but same logic</span>\n    <span class=\"c1\"># #species_text_list_ = [None if species_text is None else</span>\n    <span class=\"c1\"># #                      species_text if species_text in valid_species else</span>\n    <span class=\"c1\"># #                      const.UNKNOWN</span>\n    <span class=\"c1\"># #                      for species_text in species_text_list]</span>\n    <span class=\"c1\"># # oldest different logic</span>\n    <span class=\"c1\"># #species_text_list_ = [None</span>\n    <span class=\"c1\"># #                      if species_text is None or species_text == const.UNKNOWN</span>\n    <span class=\"c1\"># #                      else species_text.lower()</span>\n    <span class=\"c1\"># #                      for species_text in species_text_list]</span>\n    <span class=\"c1\"># #species_text_list_ = [species_text if species_text in valid_species else None</span>\n    <span class=\"c1\"># #                      for species_text in species_text_list_]</span>\n    <span class=\"c1\"># return species_text_list_</span>\n    <span class=\"k\">return</span> <span class=\"n\">species_text_list</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_convert_species_nice_to_text</span><span class=\"p\">(</span><span class=\"n\">species_nice_list</span><span class=\"p\">):</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">re</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_convert</span><span class=\"p\">(</span><span class=\"n\">nice</span><span class=\"p\">):</span>\n        <span class=\"n\">nice</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">&#39;[ ]+&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;_&#39;</span><span class=\"p\">,</span> <span class=\"n\">nice</span><span class=\"p\">)</span>\n        <span class=\"n\">nice</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">&#39;[^a-zA-Z0-9_\\+]+&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">nice</span><span class=\"p\">)</span>\n        <span class=\"n\">nice</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">&#39;[_]+&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;_&#39;</span><span class=\"p\">,</span> <span class=\"n\">nice</span><span class=\"p\">)</span>\n        <span class=\"n\">nice</span> <span class=\"o\">=</span> <span class=\"n\">nice</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">nice</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span> <span class=\"n\">_convert</span><span class=\"p\">(</span><span class=\"n\">species_nice</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">species_nice</span> <span class=\"ow\">in</span> <span class=\"n\">species_nice_list</span> <span class=\"p\">]</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_convert_species_nice_to_code</span><span class=\"p\">(</span><span class=\"n\">species_nice_list</span><span class=\"p\">):</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">re</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_convert</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span>\n        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">&#39;[_]+&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39; &#39;</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">)</span>\n        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">()</span>\n        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">&#39;[^A-Z0-9\\+]+&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">text</span>\n    <span class=\"n\">species_text_list</span> <span class=\"o\">=</span> <span class=\"n\">_convert_species_nice_to_text</span><span class=\"p\">(</span><span class=\"n\">species_nice_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span> <span class=\"n\">_convert</span><span class=\"p\">(</span><span class=\"n\">species_text</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">species_text</span> <span class=\"ow\">in</span> <span class=\"n\">species_text_list</span> <span class=\"p\">]</span>\n\n\n<div class=\"viewcode-block\" id=\"add_species\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.add_species\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">adder</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/species/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;POST&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_species</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_nice_list</span><span class=\"p\">,</span> <span class=\"n\">species_text_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">species_code_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">species_uuid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">species_note_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">skip_cleaning</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Adds a list of species.</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: speciesid_list - species rowids</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: POST</span>\n<span class=\"sd\">        URL:    /api/species/</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_species_funcs --test-add_species</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_species_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; import utool as ut</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_text_list = [</span>\n<span class=\"sd\">        ...     &#39;jaguar&#39;, &#39;zebra_plains&#39;, &#39;zebra_plains&#39;, &#39;____&#39;, &#39;TYPO&#39;,</span>\n<span class=\"sd\">        ...     &#39;____&#39;, &#39;zebra_grevys&#39;, &#39;bear_polar+head&#39;]</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_rowid_list = ibs.add_species(species_text_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(list(zip(species_text_list, species_rowid_list))))</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.print_species_table()</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_text = ibs.get_species_texts(species_rowid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Ensure we leave testdb1 in a clean state</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.delete_species(ibs.get_species_rowids_from_text([&#39;jaguar&#39;, &#39;TYPO&#39;]))</span>\n<span class=\"sd\">        &gt;&gt;&gt; all_species_rowids = ibs._get_all_species_rowids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; result =  ut.repr2(species_text, nl=False) + &#39;\\n&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; result += ut.repr2(all_species_rowids, nl=False) + &#39;\\n&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; result += ut.repr2(ibs.get_species_texts(all_species_rowids), nl=False) + &#39;\\n&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; result += ut.repr2(ibs.get_species_codes(all_species_rowids), nl=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [&#39;jaguar&#39;, &#39;zebra_plains&#39;, &#39;zebra_plains&#39;, &#39;____&#39;, &#39;typo&#39;, &#39;____&#39;, &#39;zebra_grevys&#39;, &#39;bear_polar+head&#39;]</span>\n<span class=\"sd\">        [1, 2, 3, 6]</span>\n<span class=\"sd\">        [&#39;zebra_plains&#39;, &#39;zebra_grevys&#39;, &#39;bear_polar&#39;, &#39;bear_polar+head&#39;]</span>\n<span class=\"sd\">        [&#39;PZ&#39;, &#39;GZ&#39;, &#39;PB&#39;, &#39;BP+H&#39;]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"c1\"># Strip all spaces</span>\n    <span class=\"n\">species_nice_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span> <span class=\"k\">if</span> <span class=\"n\">_</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">species_nice_list</span> <span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">species_text_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">species_text_list</span> <span class=\"o\">=</span> <span class=\"n\">_convert_species_nice_to_text</span><span class=\"p\">(</span><span class=\"n\">species_nice_list</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">species_code_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">species_code_list</span> <span class=\"o\">=</span> <span class=\"n\">_convert_species_nice_to_code</span><span class=\"p\">(</span><span class=\"n\">species_nice_list</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">species_note_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">species_note_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">species_text_list</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">species_uuid_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">species_uuid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">species_text_list</span><span class=\"p\">))]</span>\n\n    <span class=\"c1\"># Sanatize to remove invalid names</span>\n    <span class=\"n\">flag_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span>\n        <span class=\"n\">species_nice</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">species_nice</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;_&#39;</span><span class=\"p\">,</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span><span class=\"p\">,</span> <span class=\"s1\">&#39;none&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;None&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">species_nice</span> <span class=\"ow\">in</span> <span class=\"n\">species_nice_list</span>\n    <span class=\"p\">])</span>\n    <span class=\"n\">species_uuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filterfalse_items</span><span class=\"p\">(</span><span class=\"n\">species_uuid_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">species_nice_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filterfalse_items</span><span class=\"p\">(</span><span class=\"n\">species_nice_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">species_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filterfalse_items</span><span class=\"p\">(</span><span class=\"n\">species_text_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">species_code_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filterfalse_items</span><span class=\"p\">(</span><span class=\"n\">species_code_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">species_note_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">filterfalse_items</span><span class=\"p\">(</span><span class=\"n\">species_note_list</span><span class=\"p\">,</span> <span class=\"n\">flag_list</span><span class=\"p\">)</span>\n\n    <span class=\"n\">superkey_paramx</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,)</span>\n    <span class=\"c1\"># TODO Allow for better ensure=False without using partial</span>\n    <span class=\"c1\"># Just autogenerate these functions</span>\n    <span class=\"n\">get_rowid_from_superkey</span> <span class=\"o\">=</span> <span class=\"n\">functools</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_species_rowids_from_text</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">SPECIES_UUID</span><span class=\"p\">,</span> <span class=\"n\">SPECIES_TEXT</span><span class=\"p\">,</span> <span class=\"n\">SPECIES_NICE</span><span class=\"p\">,</span> <span class=\"n\">SPECIES_CODE</span><span class=\"p\">,</span> <span class=\"n\">SPECIES_NOTE</span><span class=\"p\">]</span>\n    <span class=\"n\">params_iter</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">species_uuid_list</span><span class=\"p\">,</span> <span class=\"n\">species_text_list</span><span class=\"p\">,</span> <span class=\"n\">species_nice_list</span><span class=\"p\">,</span> <span class=\"n\">species_code_list</span><span class=\"p\">,</span> <span class=\"n\">species_note_list</span><span class=\"p\">))</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">add_cleanly</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">params_iter</span><span class=\"p\">,</span>\n                                             <span class=\"n\">get_rowid_from_superkey</span><span class=\"p\">,</span> <span class=\"n\">superkey_paramx</span><span class=\"p\">)</span>\n    <span class=\"n\">temp_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">flag_list</span><span class=\"p\">))</span>\n    <span class=\"n\">temp_list</span><span class=\"p\">[</span><span class=\"n\">flag_list</span> <span class=\"o\">==</span> <span class=\"kc\">False</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">temp_list</span><span class=\"p\">[</span><span class=\"n\">flag_list</span> <span class=\"o\">==</span> <span class=\"kc\">True</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_SPECIES_ROWID</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">temp_list</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">species_rowid_list</span>\n\n    <span class=\"c1\"># Clean species</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">skip_cleaning</span><span class=\"p\">:</span>\n        <span class=\"n\">species_mapping_dict</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">_clean_species</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">species_mapping_dict</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">species_mapping_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">species_rowid</span><span class=\"p\">,</span> <span class=\"n\">species_rowid</span><span class=\"p\">)</span>\n                <span class=\"k\">for</span> <span class=\"n\">species_rowid</span> <span class=\"ow\">in</span> <span class=\"n\">species_rowid_list</span>\n            <span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">species_rowid_list</span></div>\n    <span class=\"c1\">#value_list = ibs.sanitize_species_texts(species_text_list)</span>\n    <span class=\"c1\">#lbltype_rowid = ibs.lbltype_ids[const.SPECIES_KEY]</span>\n    <span class=\"c1\">#lbltype_rowid_list = [lbltype_rowid] * len(species_text_list)</span>\n    <span class=\"c1\">#species_rowid_list = ibs.add_lblannots(lbltype_rowid_list, value_list, species_note_list)</span>\n    <span class=\"c1\">##species_rowid_list = [const.UNKNOWN_SPECIES_ROWID if rowid is None else</span>\n    <span class=\"c1\">#                      rowid for rowid in species_rowid_list]</span>\n    <span class=\"c1\">#return species_rowid_list</span>\n\n\n<div class=\"viewcode-block\" id=\"delete_species\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.delete_species\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">deleter</span>\n<span class=\"c1\">#@cache_invalidator(const.SPECIES_TABLE)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/species/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;DELETE&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">delete_species</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    deletes species from the database</span>\n\n<span class=\"sd\">    CAREFUL. YOU PROBABLY DO NOT WANT TO USE THIS</span>\n<span class=\"sd\">    at least ensure that no annot is associated with any of these species rowids</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: DELETE</span>\n<span class=\"sd\">        URL:    /api/species/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">VERBOSE</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs] deleting </span><span class=\"si\">%d</span><span class=\"s1\"> speciess&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">species_rowid_list</span><span class=\"p\">))</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">delete_rowids</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span></div>\n    <span class=\"c1\">#ibs.delete_lblannots(species_rowid_list)</span>\n\n\n<div class=\"viewcode-block\" id=\"delete_empty_species\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.delete_empty_species\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">deleter</span>\n<span class=\"k\">def</span> <span class=\"nf\">delete_empty_species</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    deletes empty species from the database</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">species_text_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_all_species_texts</span><span class=\"p\">())</span>\n    <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n    <span class=\"n\">used_species_text_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_species_texts</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">))</span>\n    <span class=\"n\">unused_species_text_set</span> <span class=\"o\">=</span> <span class=\"n\">species_text_set</span> <span class=\"o\">-</span> <span class=\"n\">used_species_text_set</span>\n    <span class=\"n\">unused_species_text_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">unused_species_text_set</span><span class=\"p\">)</span>\n    <span class=\"n\">unused_species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_species_rowids_from_text</span><span class=\"p\">(</span><span class=\"n\">unused_species_text_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_species</span><span class=\"p\">(</span><span class=\"n\">unused_species_rowid_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_species_rowids_from_text\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.get_species_rowids_from_text\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/species/rowid/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_species_rowids_from_text</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_text_list</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        species_rowid_list (list): Creates one if it doesnt exist</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_species_funcs --test-get_species_rowids_from_text:0</span>\n<span class=\"sd\">        python -m ibeis.control.manual_species_funcs --test-get_species_rowids_from_text:1</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/species/rowid/text/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_species_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; import utool as ut</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_text_list = [</span>\n<span class=\"sd\">        ...     u&#39;jaguar&#39;, u&#39;zebra_plains&#39;, u&#39;zebra_plains&#39;, &#39;____&#39;, &#39;TYPO&#39;,</span>\n<span class=\"sd\">        ...     &#39;____&#39;, u&#39;zebra_grevys&#39;, u&#39;bear_polar&#39;]</span>\n<span class=\"sd\">        &gt;&gt;&gt; ensure = False</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_rowid_list = ibs.get_species_rowids_from_text(species_text_list, ensure)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(list(zip(species_text_list, species_rowid_list))))</span>\n<span class=\"sd\">        &gt;&gt;&gt; ensure = True</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_rowid_list = ibs.get_species_rowids_from_text(species_text_list, ensure)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(ut.repr2(list(zip(species_text_list, species_rowid_list))))</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.print_species_table()</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_text = ibs.get_species_texts(species_rowid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Ensure we leave testdb1 in a clean state</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs.delete_species(ibs.get_species_rowids_from_text([&#39;jaguar&#39;, &#39;TYPO&#39;]))</span>\n<span class=\"sd\">        &gt;&gt;&gt; all_species_rowids = ibs._get_all_species_rowids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ut.repr2(species_text, nl=False) + &#39;\\n&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; result += ut.repr2(all_species_rowids, nl=False) + &#39;\\n&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; result += ut.repr2(ibs.get_species_texts(all_species_rowids), nl=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [&#39;jaguar&#39;, &#39;zebra_plains&#39;, &#39;zebra_plains&#39;, &#39;____&#39;, &#39;typo&#39;, &#39;____&#39;, &#39;zebra_grevys&#39;, &#39;bear_polar&#39;]</span>\n<span class=\"sd\">        [1, 2, 3]</span>\n<span class=\"sd\">        [&#39;zebra_plains&#39;, &#39;zebra_grevys&#39;, &#39;bear_polar&#39;]</span>\n\n<span class=\"sd\">    [u&#39;jaguar&#39;, u&#39;zebra_plains&#39;, u&#39;zebra_plains&#39;, &#39;____&#39;, &#39;____&#39;, &#39;____&#39;, u&#39;zebra_grevys&#39;, u&#39;bear_polar&#39;]</span>\n<span class=\"sd\">    [8, 9, 10]</span>\n<span class=\"sd\">    [u&#39;zebra_plains&#39;, u&#39;zebra_grevys&#39;, u&#39;bear_polar&#39;]</span>\n\n<span class=\"sd\">    Example1:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_species_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; import utool as ut  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_text_list = [</span>\n<span class=\"sd\">        ...     u&#39;jaguar&#39;, u&#39;zebra_plains&#39;, u&#39;zebra_plains&#39;, &#39;____&#39;, &#39;TYPO&#39;,</span>\n<span class=\"sd\">        ...     &#39;____&#39;, u&#39;zebra_grevys&#39;, u&#39;bear_polar&#39;]</span>\n<span class=\"sd\">        &gt;&gt;&gt; ensure = False</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_rowid_list = ibs.get_species_rowids_from_text(species_text_list, ensure)</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">ensure</span><span class=\"p\">:</span>\n        <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_species</span><span class=\"p\">(</span><span class=\"n\">species_text_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">species_text_list_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">sanitize_species_texts</span><span class=\"p\">(</span><span class=\"n\">species_text_list</span><span class=\"p\">)</span>\n        <span class=\"c1\">#lbltype_rowid = ibs.lbltype_ids[const.SPECIES_KEY]</span>\n        <span class=\"c1\">#lbltype_rowid_list = [lbltype_rowid] * len(species_text_list_)</span>\n        <span class=\"c1\">#species_rowid_list = ibs.get_lblannot_rowid_from_superkey(lbltype_rowid_list, species_text_list_)</span>\n        <span class=\"c1\"># Ugg species and names need their own table</span>\n        <span class=\"c1\">#species_rowid_list = [const.UNKNOWN_SPECIES_ROWID if rowid is None else</span>\n        <span class=\"c1\">#                      rowid for rowid in species_rowid_list]</span>\n        <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_ROWID</span><span class=\"p\">,),</span> <span class=\"n\">species_text_list_</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"n\">SPECIES_TEXT</span><span class=\"p\">)</span>\n        <span class=\"c1\"># BIG HACK FOR ENFORCING UNKNOWN SPECIESS HAVE ROWID 0</span>\n        <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_SPECIES_ROWID</span> <span class=\"k\">if</span> <span class=\"n\">text</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">text</span> <span class=\"o\">==</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span> <span class=\"k\">else</span> <span class=\"n\">rowid</span>\n                               <span class=\"k\">for</span> <span class=\"n\">rowid</span><span class=\"p\">,</span> <span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">species_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">species_text_list_</span><span class=\"p\">)]</span>\n    <span class=\"k\">return</span> <span class=\"n\">species_rowid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_species_rowids_from_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.get_species_rowids_from_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/species/rowid/uuid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_species_rowids_from_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_uuid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        species_rowid_list (list): Creates one if it doesnt exist</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_species_funcs --test-get_species_rowids_from_text:0</span>\n<span class=\"sd\">        python -m ibeis.control.manual_species_funcs --test-get_species_rowids_from_text:1</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/species/rowid/uuid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_ROWID</span><span class=\"p\">,),</span> <span class=\"n\">species_uuid_list</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"n\">SPECIES_UUID</span><span class=\"p\">)</span>\n    <span class=\"n\">species_rowid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_SPECIES_ROWID</span> <span class=\"k\">if</span> <span class=\"n\">text</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">text</span> <span class=\"o\">==</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span> <span class=\"k\">else</span> <span class=\"n\">rowid</span>\n                           <span class=\"k\">for</span> <span class=\"n\">rowid</span><span class=\"p\">,</span> <span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">species_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">species_uuid_list</span><span class=\"p\">)]</span>\n    <span class=\"k\">return</span> <span class=\"n\">species_rowid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_species_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.get_species_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/species/uuid/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_species_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): uuids_list - species uuids</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/species/uuid/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">uuids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_UUID</span><span class=\"p\">,),</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\">#notes_list = ibs.get_lblannot_notes(nid_list)</span>\n    <span class=\"k\">return</span> <span class=\"n\">uuids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_species_texts\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.get_species_texts\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_getter</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"n\">SPECIES_TEXT</span><span class=\"p\">)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/species/text/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_species_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: species_text_list text names</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_species_funcs --test-get_species_texts --enableall</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/species/text/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_species_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_rowid_list = ibs._get_all_species_rowids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_species_texts(ibs, species_rowid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ut.repr2(result)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [&#39;zebra_plains&#39;, &#39;zebra_grevys&#39;, &#39;bear_polar&#39;]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># FIXME: use standalone species table</span>\n    <span class=\"c1\">#species_text_list = ibs.get_lblannot_values(species_rowid_list, const.SPECIES_KEY)</span>\n    <span class=\"n\">species_text_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_TEXT</span><span class=\"p\">,),</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">species_text_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span>\n                         <span class=\"k\">if</span> <span class=\"n\">rowid</span> <span class=\"o\">==</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_SPECIES_ROWID</span> <span class=\"k\">else</span> <span class=\"n\">species_text</span>\n                         <span class=\"k\">for</span> <span class=\"n\">species_text</span><span class=\"p\">,</span> <span class=\"n\">rowid</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">species_text_list</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)]</span>\n    <span class=\"n\">species_text_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span> <span class=\"k\">if</span> <span class=\"n\">code</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">code</span> <span class=\"k\">for</span> <span class=\"n\">code</span> <span class=\"ow\">in</span> <span class=\"n\">species_text_list</span> <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">species_text_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_species_nice\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.get_species_nice\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">cache_getter</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"n\">SPECIES_NICE</span><span class=\"p\">)</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/species/nice/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_species_nice</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list: species_text_list nice names</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_species_funcs --test-get_species_nice --enableall</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/species/nice/</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.control.manual_species_funcs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs._clean_species()</span>\n<span class=\"sd\">        &gt;&gt;&gt; species_rowid_list = ibs._get_all_species_rowids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = get_species_nice(ibs, species_rowid_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ut.repr2(result)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        [&#39;Zebra (Plains)&#39;, &quot;Zebra (Grevy&#39;s)&quot;, &#39;Polar Bear&#39;]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># FIXME: use standalone species table</span>\n    <span class=\"c1\">#species_nice_list = ibs.get_lblannot_values(species_rowid_list, const.SPECIES_KEY)</span>\n    <span class=\"n\">species_nice_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_NICE</span><span class=\"p\">,),</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">species_nice_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span>\n                         <span class=\"k\">if</span> <span class=\"n\">rowid</span> <span class=\"o\">==</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_SPECIES_ROWID</span> <span class=\"k\">else</span> <span class=\"n\">species_nice</span>\n                         <span class=\"k\">for</span> <span class=\"n\">species_nice</span><span class=\"p\">,</span> <span class=\"n\">rowid</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">species_nice_list</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)]</span>\n\n    <span class=\"n\">species_nice_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"s1\">&#39;Unknown&#39;</span> <span class=\"k\">if</span> <span class=\"n\">code</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">code</span> <span class=\"k\">for</span> <span class=\"n\">code</span> <span class=\"ow\">in</span> <span class=\"n\">species_nice_list</span> <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">species_nice_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_species_codes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.get_species_codes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/species/code/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_species_codes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): code_list - species codes</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/species/code/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">species_code_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_CODE</span><span class=\"p\">,),</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">species_code_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"s1\">&#39;UNKNOWN&#39;</span> <span class=\"k\">if</span> <span class=\"n\">code</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">code</span> <span class=\"k\">for</span> <span class=\"n\">code</span> <span class=\"ow\">in</span> <span class=\"n\">species_code_list</span> <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">species_code_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_species_notes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.get_species_notes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/species/note/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__api_plural_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_species_notes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): notes_list - species notes</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/species/note/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">notes_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_NOTE</span><span class=\"p\">,),</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\">#notes_list = ibs.get_lblannot_notes(nid_list)</span>\n    <span class=\"k\">return</span> <span class=\"n\">notes_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_species_enabled\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.get_species_enabled\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">getter_1to1</span>\n<span class=\"c1\"># @register_api(&#39;/api/species/enabled/&#39;, methods=[&#39;GET&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_species_enabled</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): &quot;Species Enabled&quot; flag, true if the species is enabled</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">enabled_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_ENABLED</span><span class=\"p\">,),</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">enabled_list</span></div>\n\n\n<span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"k\">def</span> <span class=\"nf\">_set_species_texts</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">species_text_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the species nice names</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">species_rowid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">species_rowid</span> <span class=\"ow\">in</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">enabled</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">enabled</span> <span class=\"ow\">in</span> <span class=\"n\">species_text_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_TEXT</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"k\">def</span> <span class=\"nf\">_set_species_nice</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">species_nice_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the species nice names</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">species_rowid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">species_rowid</span> <span class=\"ow\">in</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">enabled</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">enabled</span> <span class=\"ow\">in</span> <span class=\"n\">species_nice_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_NICE</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"k\">def</span> <span class=\"nf\">_set_species_code</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">species_code_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the species nice names</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">species_rowid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">species_rowid</span> <span class=\"ow\">in</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">enabled</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">enabled</span> <span class=\"ow\">in</span> <span class=\"n\">species_code_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_CODE</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"set_species_enabled\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_species_funcs.set_species_enabled\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@accessor_decors</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n<span class=\"c1\"># @register_api(&#39;/api/species/enabled/&#39;, methods=[&#39;PUT&#39;])</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_species_enabled</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">enabled_list</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Sets the species all instances enabled bit</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">species_rowid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">species_rowid</span> <span class=\"ow\">in</span> <span class=\"n\">species_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">enabled</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">enabled</span> <span class=\"ow\">in</span> <span class=\"n\">enabled_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">SPECIES_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">SPECIES_ENABLED</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_species_funcs</span>\n<span class=\"sd\">        python -m ibeis.control.manual_species_funcs --allexamples</span>\n<span class=\"sd\">        python -m ibeis.control.manual_species_funcs --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/control/manual_species_funcs", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}