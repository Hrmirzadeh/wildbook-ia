{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.control"}], "title": "ibeis.control.manual_lblannot_funcs", "body": "<h1>Source code for ibeis.control.manual_lblannot_funcs</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uuid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">six.moves</span> <span class=\"k\">import</span> <span class=\"nb\">range</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis</span> <span class=\"k\">import</span> <span class=\"n\">constants</span> <span class=\"k\">as</span> <span class=\"n\">const</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.other</span> <span class=\"k\">import</span> <span class=\"n\">ibsfuncs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control.accessor_decors</span> <span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">adder</span><span class=\"p\">,</span> <span class=\"n\">deleter</span><span class=\"p\">,</span> <span class=\"n\">setter</span><span class=\"p\">,</span> <span class=\"n\">getter_1to1</span><span class=\"p\">,</span> <span class=\"n\">getter_1toM</span><span class=\"p\">,</span> <span class=\"n\">default_decorator</span><span class=\"p\">,</span> <span class=\"n\">ider</span><span class=\"p\">)</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control.controller_inject</span> <span class=\"k\">import</span> <span class=\"n\">make_ibs_register_decorator</span>\n<span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">CLASS_INJECT_KEY</span><span class=\"p\">,</span> <span class=\"n\">register_ibs_method</span> <span class=\"o\">=</span> <span class=\"n\">make_ibs_register_decorator</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">LBLANNOT_VALUE</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;lblannot_value&#39;</span>\n\n\n<span class=\"c1\">#@ider</span>\n<span class=\"c1\">#def _get_all_alr_rowids(ibs):</span>\n<span class=\"c1\">#    all_alr_rowids = ibs.db.get_all_rowids(const.AL_RELATION_TABLE)</span>\n<span class=\"c1\">#    return all_alr_rowids</span>\n\n\n<span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@ider</span>\n<span class=\"k\">def</span> <span class=\"nf\">_get_all_lblannot_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">):</span>\n    <span class=\"n\">all_lblannot_rowids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get_all_rowids</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">LBLANNOT_TABLE</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">all_lblannot_rowids</span>\n\n\n<div class=\"viewcode-block\" id=\"add_annot_relationship\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.add_annot_relationship\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@adder</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_annot_relationship</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">,</span>\n                           <span class=\"n\">alr_confidence_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Adds a relationship between annots and lblannots</span>\n<span class=\"sd\">        (annotations and labels of annotations)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">alr_confidence_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">alr_confidence_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_rowid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;lblannot_rowid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;alr_confidence&#39;</span><span class=\"p\">,)</span>\n    <span class=\"n\">params_iter</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">alr_confidence_list</span><span class=\"p\">))</span>\n    <span class=\"n\">get_rowid_from_superkey</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_alrid_from_superkey</span>\n    <span class=\"n\">superkey_paramx</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># TODO HAVE SQL GIVE YOU THESE NUMBERS</span>\n    <span class=\"n\">alrid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">add_cleanly</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">AL_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">params_iter</span><span class=\"p\">,</span>\n                                    <span class=\"n\">get_rowid_from_superkey</span><span class=\"p\">,</span> <span class=\"n\">superkey_paramx</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">alrid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"add_lblannots\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.add_lblannots\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@adder</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_lblannots</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">lbltype_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">value_list</span><span class=\"p\">,</span> <span class=\"n\">note_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">lblannot_uuid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Adds new lblannots (labels of annotations)</span>\n<span class=\"sd\">    creates a new uuid for any new pair(type, value)</span>\n<span class=\"sd\">    #TODO: reverse order of rowid_list value_list in input</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">note_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">note_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Get random uuids</span>\n    <span class=\"k\">if</span> <span class=\"n\">lblannot_uuid_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">lblannot_uuid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_list</span><span class=\"p\">))]</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;lblannot_uuid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;lbltype_rowid&#39;</span><span class=\"p\">,</span> <span class=\"n\">LBLANNOT_VALUE</span><span class=\"p\">,</span> <span class=\"s1\">&#39;lblannot_note&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">params_iter</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">lblannot_uuid_list</span><span class=\"p\">,</span> <span class=\"n\">lbltype_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">value_list</span><span class=\"p\">,</span> <span class=\"n\">note_list</span><span class=\"p\">))</span>\n    <span class=\"n\">get_rowid_from_superkey</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_lblannot_rowid_from_superkey</span>\n    <span class=\"n\">superkey_paramx</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">lblannot_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">add_cleanly</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">LBLANNOT_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">params_iter</span><span class=\"p\">,</span>\n                                             <span class=\"n\">get_rowid_from_superkey</span><span class=\"p\">,</span> <span class=\"n\">superkey_paramx</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">lblannot_rowid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_lblannot_rowid_from_superkey\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_lblannot_rowid_from_superkey\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_lblannot_rowid_from_superkey</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">lbltype_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">value_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list):  lblannot_rowid_list from the superkey (lbltype, value)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;lblannot_rowid&#39;</span><span class=\"p\">,)</span>\n    <span class=\"n\">params_iter</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">lbltype_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">value_list</span><span class=\"p\">)</span>\n    <span class=\"n\">where_clause</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;lbltype_rowid=? AND lblannot_value=?&#39;</span>\n    <span class=\"n\">lblannot_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get_where</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">LBLANNOT_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">params_iter</span><span class=\"p\">,</span> <span class=\"n\">where_clause</span><span class=\"p\">)</span>\n    <span class=\"c1\"># BIG HACK FOR ENFORCING UNKNOWN LBLANNOTS HAVE ROWID 0</span>\n    <span class=\"n\">lblannot_rowid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN_LBLANNOT_ROWID</span> <span class=\"k\">if</span> <span class=\"n\">val</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">UNKNOWN</span> <span class=\"k\">else</span> <span class=\"n\">rowid</span>\n                           <span class=\"k\">for</span> <span class=\"n\">rowid</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">lblannot_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">value_list</span><span class=\"p\">)]</span>\n    <span class=\"k\">return</span> <span class=\"n\">lblannot_rowid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"delete_annot_relations\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.delete_annot_relations\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@deleter</span>\n<span class=\"k\">def</span> <span class=\"nf\">delete_annot_relations</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Deletes the relationship between an annotation and a label &quot;&quot;&quot;</span>\n    <span class=\"n\">alrids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_alrids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">alrid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">alrids_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">delete_rowids</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">AL_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">alrid_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"delete_annot_relations_oftype\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.delete_annot_relations_oftype\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@deleter</span>\n<span class=\"k\">def</span> <span class=\"nf\">delete_annot_relations_oftype</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">_lbltype</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Deletes the relationship between an annotation and a label &quot;&quot;&quot;</span>\n    <span class=\"n\">alrids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_alrids_oftype</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">lbltype_ids</span><span class=\"p\">[</span><span class=\"n\">_lbltype</span><span class=\"p\">])</span>\n    <span class=\"n\">alrid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">alrids_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">delete_rowids</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">AL_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">alrid_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"delete_lblannots\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.delete_lblannots\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@deleter</span>\n<span class=\"k\">def</span> <span class=\"nf\">delete_lblannots</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; deletes lblannots from the database &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">VERBOSE</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibs] deleting </span><span class=\"si\">%d</span><span class=\"s1\"> lblannots&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">lblannot_rowid_list</span><span class=\"p\">))</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">delete_rowids</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">LBLANNOT_TABLE</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_alr_annot_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_alr_annot_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_alr_annot_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">alrid_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        alrid_list (list of rowids): annot + label relationship rows</span>\n<span class=\"sd\">    get the annot_rowid belonging to each relationship &quot;&quot;&quot;</span>\n    <span class=\"n\">annot_rowids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">AL_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_rowid&#39;</span><span class=\"p\">,),</span> <span class=\"n\">alrid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">annot_rowids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_alr_annot_rowids_from_lblannot_rowid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_alr_annot_rowids_from_lblannot_rowid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@default_decorator</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_alr_annot_rowids_from_lblannot_rowid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    This is a 1toM getter</span>\n\n<span class=\"sd\">    Get annotation rowids of labels. There may be more than one annotation</span>\n<span class=\"sd\">    per label.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        lblannot_rowid_list (list): of lblannot (labels of annotations) rowids</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        aids_list (list): of lists annotation rowids</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\">#verbose = len(lblannot_rowid_list) &gt; 20</span>\n    <span class=\"c1\"># TODO: Optimize IF POSSIBLE</span>\n    <span class=\"c1\"># FIXME: SLOW</span>\n    <span class=\"c1\">#if verbose:</span>\n    <span class=\"c1\">#    print(ut.get_caller_name(N=list(range(0, 20))))</span>\n    <span class=\"n\">where_clause</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;lblannot_rowid=?&#39;</span>\n    <span class=\"n\">params_iter</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">lblannot_rowid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">lblannot_rowid</span> <span class=\"ow\">in</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">]</span>\n    <span class=\"n\">aids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get_where</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">AL_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_rowid&#39;</span><span class=\"p\">,),</span> <span class=\"n\">params_iter</span><span class=\"p\">,</span>\n                                 <span class=\"n\">where_clause</span><span class=\"p\">,</span> <span class=\"n\">unpack_scalars</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">aids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_alr_confidence\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_alr_confidence\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_alr_confidence</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">alrid_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        alrid_list (list of rowids): annot + label relationship rows</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        alr_confidence_list (list of rowids): confidence in an annotation relationship</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">alr_confidence_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">AL_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;alr_confidence&#39;</span><span class=\"p\">,),</span> <span class=\"n\">alrid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">alr_confidence_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_alr_lblannot_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_alr_lblannot_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_alr_lblannot_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">alrid_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        alrid_list (list of rowids): annot + label relationship rows</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        lblannot_rowids_list (list of rowids): label rowids (of annotations)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">lblannot_rowids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">AL_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;lblannot_rowid&#39;</span><span class=\"p\">,),</span> <span class=\"n\">alrid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">lblannot_rowids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_alrid_from_superkey\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_alrid_from_superkey\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_alrid_from_superkey</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        aid_list (list): list of annotation row-ids</span>\n<span class=\"sd\">        lblannot_rowid_list (list): list of lblannot row-ids</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        alrid_list (list): annot-label relationship id list</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;annot_rowid&#39;</span><span class=\"p\">,)</span>\n    <span class=\"n\">params_iter</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">where_clause</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;annot_rowid=? AND lblannot_rowid=?&#39;</span>\n    <span class=\"n\">alrid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get_where</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">AL_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">params_iter</span><span class=\"p\">,</span> <span class=\"n\">where_clause</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">alrid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_lblannot_value_of_lbltype\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_annot_lblannot_value_of_lbltype\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_lblannot_value_of_lbltype</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">_lbltype</span><span class=\"p\">,</span> <span class=\"n\">lblannot_value_getter</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        lblannot_value_list (list): a list of strings [&#39;fred&#39;, &#39;sue&#39;, ...] for each chip</span>\n<span class=\"sd\">        identifying the animal</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">lbltype_dict_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_lblannot_rowids_oftype</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">_lbltype</span><span class=\"p\">)</span>\n    <span class=\"n\">DEFAULT_VALUE</span> <span class=\"o\">=</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">KEY_DEFAULTS</span><span class=\"p\">[</span><span class=\"n\">_lbltype</span><span class=\"p\">]</span>\n    <span class=\"c1\"># FIXME: Use filters and unflat maps</span>\n    <span class=\"n\">lblannot_value_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">lblannot_value_getter</span><span class=\"p\">(</span><span class=\"n\">lblannot_rowids</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                           <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">lblannot_rowids</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"n\">DEFAULT_VALUE</span>\n                           <span class=\"k\">for</span> <span class=\"n\">lblannot_rowids</span> <span class=\"ow\">in</span> <span class=\"n\">lbltype_dict_list</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">lblannot_value_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_lblannot_lbltypes_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_lblannot_lbltypes_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_lblannot_lbltypes_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"n\">lbltype_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">LBLANNOT_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;lbltype_rowid&#39;</span><span class=\"p\">,),</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">lbltype_rowid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_lblannot_notes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_lblannot_notes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_lblannot_notes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"n\">lblannotnotes_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">LBLANNOT_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;lblannot_note&#39;</span><span class=\"p\">,),</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">lblannotnotes_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_lblannot_rowid_from_uuid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_lblannot_rowid_from_uuid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_lblannot_rowid_from_uuid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">lblannot_uuid_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    UNSAFE</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        lblannot_rowid_list from the superkey (lbltype, value)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">AssertionError</span><span class=\"p\">(</span><span class=\"s2\">&quot;CALL TO get_lblannot_rowid_from_uuid IS UNSAFE.  USE get_lblannot_rowid_from_superkey&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;lblannot_rowid&#39;</span><span class=\"p\">,)</span>\n    <span class=\"n\">params_iter</span> <span class=\"o\">=</span> <span class=\"n\">lblannot_uuid_list</span>\n    <span class=\"n\">id_colname</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;lblannot_uuid&#39;</span>\n    <span class=\"n\">lblannot_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">LBLANNOT_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">params_iter</span><span class=\"p\">,</span> <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"n\">id_colname</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">lblannot_rowid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_lblannot_uuids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_lblannot_uuids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_lblannot_uuids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"n\">lblannotuuid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">LBLANNOT_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;lblannot_uuid&#39;</span><span class=\"p\">,),</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">lblannotuuid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_lblannot_values\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_lblannot_values\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1to1</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_lblannot_values</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">_lbltype</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        text lblannots</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\">#TODO: Remove keyword argument</span>\n    <span class=\"c1\">#ibsfuncs.assert_lblannot_rowids_are_type(ibs, lblannot_rowid_list,  ibs.lbltype_ids[_lbltype])</span>\n    <span class=\"n\">lblannot_value_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">LBLANNOT_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">LBLANNOT_VALUE</span><span class=\"p\">,),</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">lblannot_value_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_alr_confidence\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.set_alr_confidence\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@setter</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_alr_confidence</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">alrid_list</span><span class=\"p\">,</span> <span class=\"n\">confidence_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; sets annotation-lblannot-relationship confidence &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">alrid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">alrid</span> <span class=\"ow\">in</span> <span class=\"n\">alrid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">confidence</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">confidence</span> <span class=\"ow\">in</span> <span class=\"n\">confidence_list</span><span class=\"p\">)</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;alr_confidence&#39;</span><span class=\"p\">,)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">AL_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_alr_lblannot_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.set_alr_lblannot_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@setter</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_alr_lblannot_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">alrid_list</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Associates whatever annotation is at row(alrid) with a new</span>\n<span class=\"sd\">    lblannot_rowid. (effectively changes the label value of the rowid)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">alrid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">alrid</span> <span class=\"ow\">in</span> <span class=\"n\">alrid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">lblannot_rowid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">lblannot_rowid</span> <span class=\"ow\">in</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">colnames</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;lblannot_rowid&#39;</span><span class=\"p\">,)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">AL_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"p\">,</span> <span class=\"n\">val_iter</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_lblannot_from_rowid\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.set_annot_lblannot_from_rowid\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@setter</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_lblannot_from_rowid</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">_lbltype</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Sets items/lblannot_rowids of a list of annotations.&quot;&quot;&quot;</span>\n    <span class=\"c1\"># Get the alrids_list for the aids, using the lbltype as a filter</span>\n    <span class=\"n\">alrids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_alrids_oftype</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">lbltype_ids</span><span class=\"p\">[</span><span class=\"n\">_lbltype</span><span class=\"p\">])</span>\n    <span class=\"c1\"># Find the aids which already have relationships (of _lbltype)</span>\n    <span class=\"n\">setflag_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">alrids</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">for</span> <span class=\"n\">alrids</span> <span class=\"ow\">in</span> <span class=\"n\">alrids_list</span><span class=\"p\">]</span>\n    <span class=\"c1\"># Add the relationship if it doesn&#39;t exist</span>\n    <span class=\"n\">aid_list_to_add</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_dirty_items</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">setflag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">lblannot_rowid_list_to_add</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_dirty_items</span><span class=\"p\">(</span><span class=\"n\">lblannot_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">setflag_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># set the existing relationship if one already exists</span>\n    <span class=\"n\">alrids_list_to_set</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">alrids_list</span><span class=\"p\">,</span> <span class=\"n\">setflag_list</span><span class=\"p\">)</span>\n    <span class=\"n\">lblannot_rowid_list_to_set</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">lblannot_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">setflag_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Assert each annot has only one relationship of this type</span>\n    <span class=\"n\">ibsfuncs</span><span class=\"o\">.</span><span class=\"n\">assert_singleton_relationship</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">alrids_list_to_set</span><span class=\"p\">)</span>\n    <span class=\"n\">alrid_list_to_set</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">alrids_list_to_set</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Add the new relationships</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_annot_relationship</span><span class=\"p\">(</span><span class=\"n\">aid_list_to_add</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list_to_add</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Set the old relationships</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_alr_lblannot_rowids</span><span class=\"p\">(</span><span class=\"n\">alrid_list_to_set</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list_to_set</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_annot_lblannot_from_value\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.set_annot_lblannot_from_value\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@setter</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_annot_lblannot_from_value</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">value_list</span><span class=\"p\">,</span> <span class=\"n\">_lbltype</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Associates the annot and lblannot of a specific type and value</span>\n<span class=\"sd\">    Adds the lblannot if it doesnt exist.</span>\n<span class=\"sd\">    Wrapper around convenience function for set_annot_from_lblannot_rowid</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">assert</span> <span class=\"n\">value_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n    <span class=\"k\">assert</span> <span class=\"n\">_lbltype</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n    <span class=\"k\">if</span> <span class=\"n\">ensure</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"c1\"># a value consisting of an empty string or all spaces is set to the default</span>\n    <span class=\"n\">DEFAULT_VALUE</span> <span class=\"o\">=</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">KEY_DEFAULTS</span><span class=\"p\">[</span><span class=\"n\">_lbltype</span><span class=\"p\">]</span>\n    <span class=\"n\">EMPTY_KEY</span> <span class=\"o\">=</span> <span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">EMPTY_KEY</span>\n    <span class=\"c1\"># setting a name to DEFAULT_VALUE or EMPTY is equivalent to unnaming it</span>\n    <span class=\"n\">value_list_</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">DEFAULT_VALUE</span> <span class=\"k\">if</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">EMPTY_KEY</span> <span class=\"k\">else</span> <span class=\"n\">value</span> <span class=\"k\">for</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">value_list</span><span class=\"p\">]</span>\n    <span class=\"n\">notdefault_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">value</span> <span class=\"o\">!=</span> <span class=\"n\">DEFAULT_VALUE</span> <span class=\"k\">for</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">value_list_</span><span class=\"p\">]</span>\n    <span class=\"n\">aid_list_to_delete</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_dirty_items</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">notdefault_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Set all the valid valids</span>\n    <span class=\"n\">aids_to_set</span>   <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">notdefault_list</span><span class=\"p\">)</span>\n    <span class=\"n\">values_to_set</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">value_list_</span><span class=\"p\">,</span> <span class=\"n\">notdefault_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_annot_relations_oftype</span><span class=\"p\">(</span><span class=\"n\">aid_list_to_delete</span><span class=\"p\">,</span> <span class=\"n\">_lbltype</span><span class=\"p\">)</span>\n    <span class=\"c1\"># remove the relationships that have now been unnamed</span>\n    <span class=\"c1\"># Convert names into lblannot_rowid</span>\n    <span class=\"c1\"># FIXME: This function should not be able to set label realationships</span>\n    <span class=\"c1\"># to labels that have not been added!!</span>\n    <span class=\"c1\"># This is an inefficient way of getting lblannot_rowids!</span>\n    <span class=\"n\">lbltype_rowid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">lbltype_ids</span><span class=\"p\">[</span><span class=\"n\">_lbltype</span><span class=\"p\">]]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values_to_set</span><span class=\"p\">)</span>\n    <span class=\"c1\"># auto ensure</span>\n    <span class=\"n\">lblannot_rowid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_lblannots</span><span class=\"p\">(</span><span class=\"n\">lbltype_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">values_to_set</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Call set_annot_from_lblannot_rowid to finish the conditional adding</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_annot_lblannot_from_rowid</span><span class=\"p\">(</span><span class=\"n\">aids_to_set</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">_lbltype</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_lblannot_notes\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.set_lblannot_notes\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_lblannot_notes</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">value_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Updates the value for lblannots. Note this change applies to</span>\n<span class=\"sd\">    all annotations related to this lblannot_rowid</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">rowid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">rowid</span> <span class=\"ow\">in</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">value</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">value_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">LBLANNOT_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;lblannot_note&#39;</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"set_lblannot_values\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.set_lblannot_values\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_lblannot_values</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">,</span> <span class=\"n\">value_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Updates the value for lblannots. Note this change applies to</span>\n<span class=\"sd\">    all annotations related to this lblannot_rowid</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">id_iter</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">rowid</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">rowid</span> <span class=\"ow\">in</span> <span class=\"n\">lblannot_rowid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">val_list</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">value</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">value_list</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">LBLANNOT_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">LBLANNOT_VALUE</span><span class=\"p\">,),</span> <span class=\"n\">val_list</span><span class=\"p\">,</span> <span class=\"n\">id_iter</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_alrids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_annot_alrids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1toM</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_alrids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; FIXME: __name__</span>\n<span class=\"sd\">    Get all the relationship ids belonging to the input annotations</span>\n<span class=\"sd\">    if lblannot lbltype is specified the relationship ids are filtered to</span>\n<span class=\"sd\">    be only of a specific lbltype/category/type</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">alrids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">AL_RELATION_TABLE</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;alr_rowid&#39;</span><span class=\"p\">,),</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span>\n                             <span class=\"n\">id_colname</span><span class=\"o\">=</span><span class=\"s1\">&#39;annot_rowid&#39;</span><span class=\"p\">,</span> <span class=\"n\">unpack_scalars</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">alrids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_alrids_oftype\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_annot_alrids_oftype\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1toM</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_alrids_oftype</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">lbltype_rowid</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Get all the relationship ids belonging to the input annotations where the</span>\n<span class=\"sd\">    relationship ids are filtered to be only of a specific lbltype/category/type</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">alrids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_alrids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Get lblannot_rowid of each relationship</span>\n    <span class=\"n\">lblannot_rowids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibsfuncs</span><span class=\"o\">.</span><span class=\"n\">unflat_map</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_alr_lblannot_rowids</span><span class=\"p\">,</span> <span class=\"n\">alrids_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Get the type of each lblannot</span>\n    <span class=\"n\">lbltype_rowids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibsfuncs</span><span class=\"o\">.</span><span class=\"n\">unflat_map</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_lblannot_lbltypes_rowids</span><span class=\"p\">,</span>\n                                              <span class=\"n\">lblannot_rowids_list</span><span class=\"p\">)</span>\n    <span class=\"c1\"># only want the nids of individuals, not species, for example</span>\n    <span class=\"n\">valids_list</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">typeid</span> <span class=\"o\">==</span> <span class=\"n\">lbltype_rowid</span> <span class=\"k\">for</span> <span class=\"n\">typeid</span> <span class=\"ow\">in</span> <span class=\"n\">rowids</span><span class=\"p\">]</span>\n                   <span class=\"k\">for</span> <span class=\"n\">rowids</span> <span class=\"ow\">in</span> <span class=\"n\">lbltype_rowids_list</span><span class=\"p\">]</span>\n    <span class=\"n\">alrids_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">alrids</span><span class=\"p\">,</span> <span class=\"n\">valids</span><span class=\"p\">)</span>\n                   <span class=\"k\">for</span> <span class=\"n\">alrids</span><span class=\"p\">,</span> <span class=\"n\">valids</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">alrids_list</span><span class=\"p\">,</span> <span class=\"n\">valids_list</span><span class=\"p\">)]</span>\n    <span class=\"k\">def</span> <span class=\"nf\">resolution_func_first</span><span class=\"p\">(</span><span class=\"n\">alrid_list</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span> <span class=\"n\">alrid_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"p\">]</span>\n\n    <span class=\"n\">alrids_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">resolution_func_first</span><span class=\"p\">(</span><span class=\"n\">alrid_list</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">alrid_list</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span> <span class=\"k\">else</span>\n        <span class=\"n\">alrid_list</span>\n        <span class=\"k\">for</span> <span class=\"n\">alrid_list</span> <span class=\"ow\">in</span> <span class=\"n\">alrids_list</span>\n    <span class=\"p\">]</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">all</span><span class=\"p\">([</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">alrid_list</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">alrid_list</span> <span class=\"ow\">in</span> <span class=\"n\">alrids_list</span><span class=\"p\">]),</span>\\\n        <span class=\"p\">(</span><span class=\"s2\">&quot;More than one type per lbltype.  ALRIDS: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">alrids_list</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n         <span class=\"s2\">&quot;, ROW: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">lbltype_rowid</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;, KEYS:&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">lbltype_ids</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">alrids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_lblannot_rowids\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_annot_lblannot_rowids\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1toM</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_lblannot_rowids</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): the name id of each annotation. &quot;&quot;&quot;</span>\n    <span class=\"c1\"># Get all the annotation lblannot relationships</span>\n    <span class=\"c1\"># filter out only the ones which specify names</span>\n    <span class=\"n\">alrids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_alrids</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">lblannot_rowids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibsfuncs</span><span class=\"o\">.</span><span class=\"n\">unflat_map</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_alr_lblannot_rowids</span><span class=\"p\">,</span> <span class=\"n\">alrids_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">lblannot_rowids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_annot_lblannot_rowids_oftype\"><a class=\"viewcode-back\" href=\"../../../../ibeis.control/#ibeis.control.manual_lblannot_funcs.get_annot_lblannot_rowids_oftype\">[docs]</a><span class=\"nd\">@register_ibs_method</span>\n<span class=\"nd\">@getter_1toM</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_annot_lblannot_rowids_oftype</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">_lbltype</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        list_ (list): the name id of each annotation. &quot;&quot;&quot;</span>\n    <span class=\"c1\"># Get all the annotation lblannot relationships</span>\n    <span class=\"c1\"># filter out only the ones which specify names</span>\n    <span class=\"k\">assert</span> <span class=\"n\">_lbltype</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">&#39;should be using lbltype_rowids anyway&#39;</span>\n    <span class=\"n\">alrids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_alrids_oftype</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">lbltype_ids</span><span class=\"p\">[</span><span class=\"n\">_lbltype</span><span class=\"p\">])</span>\n    <span class=\"n\">lblannot_rowids_list</span> <span class=\"o\">=</span> <span class=\"n\">ibsfuncs</span><span class=\"o\">.</span><span class=\"n\">unflat_map</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_alr_lblannot_rowids</span><span class=\"p\">,</span> <span class=\"n\">alrids_list</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">lblannot_rowids_list</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.control.manual_lblannot_funcs</span>\n<span class=\"sd\">        python -m ibeis.control.manual_lblannot_funcs --allexamples</span>\n<span class=\"sd\">        python -m ibeis.control.manual_lblannot_funcs --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/control/manual_lblannot_funcs", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}