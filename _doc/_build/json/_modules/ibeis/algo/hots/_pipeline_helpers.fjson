{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "ibeis"}, {"link": "../../", "title": "ibeis.algo"}, {"link": "../", "title": "ibeis.algo.hots"}], "title": "ibeis.algo.hots._pipeline_helpers", "body": "<h1>Source code for ibeis.algo.hots._pipeline_helpers</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">VERB_PIPELINE</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">((</span><span class=\"s1\">&#39;--verb-pipeline&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--verb-pipe&#39;</span><span class=\"p\">))</span> <span class=\"ow\">or</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">VERYVERBOSE</span>\n<span class=\"n\">VERB_TESTDATA</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--verb-testdata&#39;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">VERYVERBOSE</span>\n\n\n<div class=\"viewcode-block\" id=\"testrun_pipeline_upto\"><a class=\"viewcode-back\" href=\"../../../../../ibeis.algo.hots/#ibeis.algo.hots._pipeline_helpers.testrun_pipeline_upto\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">stop_node</span><span class=\"o\">=</span><span class=\"s1\">&#39;end&#39;</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Main tester function. Runs the pipeline by mirroring</span>\n<span class=\"sd\">    `request_ibeis_query_L0`, but stops at a requested breakpoint and returns</span>\n<span class=\"sd\">    the local variables.</span>\n\n<span class=\"sd\">    convinience: runs pipeline for tests</span>\n<span class=\"sd\">    this should mirror request_ibeis_query_L0</span>\n\n<span class=\"sd\">    Ignore:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # TODO: autogenerate</span>\n<span class=\"sd\">        &gt;&gt;&gt; # The following is a stub that starts the autogeneration process</span>\n<span class=\"sd\">        &gt;&gt;&gt; import utool as ut</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.algo.hots import pipeline</span>\n<span class=\"sd\">        &gt;&gt;&gt; source = ut.get_func_sourcecode(pipeline.request_ibeis_query_L0,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                 strip_docstr=True, stripdef=True,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                 strip_comments=True)</span>\n<span class=\"sd\">        &gt;&gt;&gt; import re</span>\n<span class=\"sd\">        &gt;&gt;&gt; source = re.sub(r&#39;^\\s*$\\n&#39;, &#39;&#39;, source, flags=re.MULTILINE)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(source)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.replace_between_tags(source, &#39;&#39;, sentinal)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"p\">(</span>\n        <span class=\"n\">nearest_neighbors</span><span class=\"p\">,</span> <span class=\"n\">baseline_neighbor_filter</span><span class=\"p\">,</span> <span class=\"n\">weight_neighbors</span><span class=\"p\">,</span>\n        <span class=\"n\">build_chipmatches</span><span class=\"p\">,</span> <span class=\"n\">spatial_verification</span><span class=\"p\">,</span>\n        <span class=\"c1\"># vsone_reranking,</span>\n        <span class=\"n\">build_impossible_daids_list</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;RUN PIPELINE UPTO: </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">stop_node</span><span class=\"p\">,))</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n\n    <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">lazy_load</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"c1\">#---</span>\n    <span class=\"k\">if</span> <span class=\"n\">stop_node</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;build_impossible_daids_list&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">locals</span><span class=\"p\">()</span>\n    <span class=\"n\">impossible_daids_list</span><span class=\"p\">,</span> <span class=\"n\">Kpad_list</span> <span class=\"o\">=</span> <span class=\"n\">build_impossible_daids_list</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n    <span class=\"c1\">#---</span>\n    <span class=\"k\">if</span> <span class=\"n\">stop_node</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;nearest_neighbors&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">locals</span><span class=\"p\">()</span>\n    <span class=\"n\">nns_list</span> <span class=\"o\">=</span> <span class=\"n\">nearest_neighbors</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span><span class=\"p\">,</span>\n                                 <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"c1\">#---</span>\n    <span class=\"k\">if</span> <span class=\"n\">stop_node</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;baseline_neighbor_filter&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">locals</span><span class=\"p\">()</span>\n    <span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">baseline_neighbor_filter</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span>\n                                             <span class=\"n\">impossible_daids_list</span><span class=\"p\">,</span>\n                                             <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"c1\">#---</span>\n    <span class=\"k\">if</span> <span class=\"n\">stop_node</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">locals</span><span class=\"p\">()</span>\n    <span class=\"n\">weight_ret</span> <span class=\"o\">=</span> <span class=\"n\">weight_neighbors</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"n\">filtkey_list</span><span class=\"p\">,</span> <span class=\"n\">filtweights_list</span><span class=\"p\">,</span> <span class=\"n\">filtvalids_list</span><span class=\"p\">,</span> <span class=\"n\">filtnormks_list</span> <span class=\"o\">=</span> <span class=\"n\">weight_ret</span>\n    <span class=\"c1\">#---</span>\n    <span class=\"k\">if</span> <span class=\"n\">stop_node</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;filter_neighbors&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">AssertionError</span><span class=\"p\">(</span><span class=\"s1\">&#39;no longer exists&#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\">#---</span>\n    <span class=\"k\">if</span> <span class=\"n\">stop_node</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;build_chipmatches&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">locals</span><span class=\"p\">()</span>\n    <span class=\"n\">cm_list_FILT</span> <span class=\"o\">=</span> <span class=\"n\">build_chipmatches</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span>\n                                     <span class=\"n\">filtkey_list</span><span class=\"p\">,</span> <span class=\"n\">filtweights_list</span><span class=\"p\">,</span>\n                                     <span class=\"n\">filtvalids_list</span><span class=\"p\">,</span> <span class=\"n\">filtnormks_list</span><span class=\"p\">,</span>\n                                     <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"c1\">#---</span>\n    <span class=\"k\">if</span> <span class=\"n\">stop_node</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;spatial_verification&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">locals</span><span class=\"p\">()</span>\n    <span class=\"n\">cm_list_SVER</span> <span class=\"o\">=</span> <span class=\"n\">spatial_verification</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list_FILT</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">stop_node</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;end&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">locals</span><span class=\"p\">()</span>\n\n    <span class=\"k\">assert</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;unknown stop_node=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">stop_node</span><span class=\"p\">,)</span>\n\n    <span class=\"c1\">#qaid2_svtups = qreq_.metadata[&#39;qaid2_svtups&#39;]</span>\n    <span class=\"k\">return</span> <span class=\"nb\">locals</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"testdata_pre\"><a class=\"viewcode-back\" href=\"../../../../../ibeis.algo.hots/#ibeis.algo.hots._pipeline_helpers.testdata_pre\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">testdata_pre</span><span class=\"p\">(</span><span class=\"n\">stopnode</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">],</span>\n                 <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:qindex=0:1,dindex=0:5&#39;</span><span class=\"p\">],</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    New (1-1-2016) generic pipeline node testdata getter</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        stopnode (str): name of pipeline function to be tested</span>\n<span class=\"sd\">        defaultdb (str): (default = u&#39;testdb1&#39;)</span>\n<span class=\"sd\">        p (list): (default = [u&#39;default:&#39;])</span>\n<span class=\"sd\">        a (list): (default = [u&#39;default:qsize=1,dsize=4&#39;])</span>\n<span class=\"sd\">        **kwargs: passed to testdata_qreq_</span>\n<span class=\"sd\">            qaid_override, daid_override</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        tuple: (ibs, qreq_, args)</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.algo.hots._pipeline_helpers --exec-testdata_pre --show</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.algo.hots._pipeline_helpers import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; stopnode = &#39;build_chipmatches&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; defaultdb = &#39;testdb1&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; p = [&#39;default:&#39;]</span>\n<span class=\"sd\">        &gt;&gt;&gt; a = [&#39;default:qindex=0:1,dindex=0:5&#39;]</span>\n<span class=\"sd\">        &gt;&gt;&gt; qreq_, args = testdata_pre(stopnode, defaultdb, p, a)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots</span> <span class=\"k\">import</span> <span class=\"n\">pipeline</span>\n    <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"n\">defaultdb</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">stopnode</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">stopnode</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;end&#39;</span> <span class=\"p\">:</span>\n        <span class=\"n\">argnames</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;cm_list_SVER&#39;</span><span class=\"p\">]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">pipeline</span><span class=\"p\">,</span> <span class=\"n\">stopnode</span><span class=\"p\">)</span>\n        <span class=\"n\">argnames</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argnames</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Hack to ignore qreq_, and verbose</span>\n    <span class=\"k\">for</span> <span class=\"n\">ignore</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;qreq_&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ibs&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;verbose&#39;</span><span class=\"p\">]:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">argnames</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">ignore</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n    <span class=\"n\">tupname</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;_Ret_&#39;</span> <span class=\"o\">+</span> <span class=\"n\">stopnode</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take_asnametup</span><span class=\"p\">(</span><span class=\"n\">locals_</span><span class=\"p\">,</span> <span class=\"n\">argnames</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">tupname</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span></div>\n\n\n<span class=\"c1\">#+--- OTHER TESTDATA FUNCS ---</span>\n\n\n<div class=\"viewcode-block\" id=\"testdata_sparse_matchinfo_nonagg\"><a class=\"viewcode-back\" href=\"../../../../../ibeis.algo.hots/#ibeis.algo.hots._pipeline_helpers.testdata_sparse_matchinfo_nonagg\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">testdata_sparse_matchinfo_nonagg</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">]):</span>\n    <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;build_chipmatches&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"n\">defaultdb</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">)</span>\n    <span class=\"n\">internal_index</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"k\">if</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">vsone</span> <span class=\"k\">else</span> <span class=\"mi\">0</span>\n    <span class=\"c1\"># qaid = qreq_.qaids[0]</span>\n    <span class=\"c1\"># daid = qreq_.daids[1]</span>\n    <span class=\"n\">qaid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">daid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">nns</span>                 <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">nns_list</span><span class=\"p\">[</span><span class=\"n\">internal_index</span><span class=\"p\">]</span>\n    <span class=\"c1\"># neighb_idx, neighb_dist = args.nns_list[internal_index]</span>\n    <span class=\"n\">neighb_valid0</span>         <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">nnvalid0_list</span><span class=\"p\">[</span><span class=\"n\">internal_index</span><span class=\"p\">]</span>\n    <span class=\"n\">neighb_score_list</span>     <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">filtweights_list</span><span class=\"p\">[</span><span class=\"n\">internal_index</span><span class=\"p\">]</span>\n    <span class=\"n\">neighb_valid_list</span>     <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">filtvalids_list</span><span class=\"p\">[</span><span class=\"n\">internal_index</span><span class=\"p\">]</span>\n    <span class=\"n\">neighb_normk</span>          <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">filtnormks_list</span><span class=\"p\">[</span><span class=\"n\">internal_index</span><span class=\"p\">]</span>\n    <span class=\"n\">Knorm</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">Knorm</span>\n    <span class=\"n\">fsv_col_lbls</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">filtkey_list</span>\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">nns</span><span class=\"p\">,</span> <span class=\"n\">neighb_valid0</span><span class=\"p\">,</span> <span class=\"n\">neighb_score_list</span><span class=\"p\">,</span>\n            <span class=\"n\">neighb_valid_list</span><span class=\"p\">,</span> <span class=\"n\">neighb_normk</span><span class=\"p\">,</span> <span class=\"n\">Knorm</span><span class=\"p\">,</span> <span class=\"n\">fsv_col_lbls</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">daid</span><span class=\"p\">,</span> <span class=\"n\">args</span></div>\n\n\n<div class=\"viewcode-block\" id=\"testdata_pre_baselinefilter\"><a class=\"viewcode-back\" href=\"../../../../../ibeis.algo.hots/#ibeis.algo.hots._pipeline_helpers.testdata_pre_baselinefilter\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">testdata_pre_baselinefilter</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">&#39;vsmany&#39;</span><span class=\"p\">):</span>\n    <span class=\"n\">cfgdict</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"n\">codename</span><span class=\"p\">)</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_cfg_lbl</span><span class=\"p\">(</span><span class=\"n\">cfgdict</span><span class=\"p\">)</span>\n    <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"n\">defaultdb</span><span class=\"p\">,</span> <span class=\"n\">default_qaids</span><span class=\"o\">=</span><span class=\"n\">qaid_list</span><span class=\"p\">,</span>\n                                 <span class=\"n\">default_daids</span><span class=\"o\">=</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">)</span>\n    <span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"s1\">&#39;baseline_neighbor_filter&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">locals_</span><span class=\"p\">,</span>\n                                                   <span class=\"p\">[</span><span class=\"s1\">&#39;nns_list&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;impossible_daids_list&#39;</span><span class=\"p\">])</span>\n    <span class=\"k\">return</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"testdata_pre_sver\"><a class=\"viewcode-back\" href=\"../../../../../ibeis.algo.hots/#ibeis.algo.hots._pipeline_helpers.testdata_pre_sver\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">testdata_pre_sver</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.algo.hots._pipeline_helpers import *  # NOQA</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># TODO: testdata_pre(&#39;sver&#39;)</span>\n    <span class=\"c1\">#from ibeis.algo import Config</span>\n    <span class=\"n\">cfgdict</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">()</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_cfg_lbl</span><span class=\"p\">(</span><span class=\"n\">cfgdict</span><span class=\"p\">)</span>\n    <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"n\">defaultdb</span><span class=\"p\">,</span> <span class=\"n\">default_qaids</span><span class=\"o\">=</span><span class=\"n\">qaid_list</span><span class=\"p\">,</span>\n                                 <span class=\"n\">default_daids</span><span class=\"o\">=</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n    <span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"s1\">&#39;spatial_verification&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">locals_</span><span class=\"p\">[</span><span class=\"s1\">&#39;cm_list_FILT&#39;</span><span class=\"p\">]</span>\n    <span class=\"c1\">#nnfilts_list   = locals_[&#39;nnfilts_list&#39;]</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"testdata_post_sver\"><a class=\"viewcode-back\" href=\"../../../../../ibeis.algo.hots/#ibeis.algo.hots._pipeline_helpers.testdata_post_sver\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">testdata_post_sver</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">&#39;vsmany&#39;</span><span class=\"p\">,</span> <span class=\"n\">cfgdict</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.algo.hots._pipeline_helpers import *  # NOQA</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># TODO: testdata_pre(&#39;end&#39;)</span>\n    <span class=\"c1\">#from ibeis.algo import Config</span>\n    <span class=\"k\">if</span> <span class=\"n\">cfgdict</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">cfgdict</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"n\">codename</span><span class=\"p\">)</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_cfg_lbl</span><span class=\"p\">(</span><span class=\"n\">cfgdict</span><span class=\"p\">)</span>\n    <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"n\">defaultdb</span><span class=\"p\">,</span> <span class=\"n\">default_qaids</span><span class=\"o\">=</span><span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">default_daids</span><span class=\"o\">=</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">)</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n    <span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"s1\">&#39;end&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">locals_</span><span class=\"p\">[</span><span class=\"s1\">&#39;cm_list_SVER&#39;</span><span class=\"p\">]</span>\n    <span class=\"c1\">#nnfilts_list   = locals_[&#39;nnfilts_list&#39;]</span>\n    <span class=\"k\">return</span> <span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span></div>\n\n\n<span class=\"c1\">#L_______</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.algo.hots._pipeline_helpers</span>\n<span class=\"sd\">        python -m ibeis.algo.hots._pipeline_helpers --allexamples</span>\n<span class=\"sd\">        python -m ibeis.algo.hots._pipeline_helpers --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/algo/hots/_pipeline_helpers", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}