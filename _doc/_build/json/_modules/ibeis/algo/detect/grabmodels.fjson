{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "ibeis"}, {"link": "../../", "title": "ibeis.algo"}, {"link": "../", "title": "ibeis.algo.detect"}], "title": "ibeis.algo.detect.grabmodels", "body": "<h1>Source code for ibeis.algo.detect.grabmodels</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">import</span> <span class=\"nn\">six</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"k\">import</span> <span class=\"n\">exists</span><span class=\"p\">,</span> <span class=\"n\">join</span><span class=\"p\">,</span> <span class=\"n\">realpath</span>\n<span class=\"p\">(</span><span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"s1\">&#39;[grabmodels]&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\">#DETECTMODELS_DIR = realpath(join(dirname(__file__), &#39;rf&#39;))</span>\n<span class=\"n\">DEFAULT_DETECTMODELS_DIR</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_app_resource_dir</span><span class=\"p\">(</span><span class=\"s1\">&#39;ibeis&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;detectmodels&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">DETECTOR_KEY_RF</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;rf&#39;</span>\n\n<span class=\"n\">MODEL_ALGO_SUBDIRS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"n\">DETECTOR_KEY_RF</span><span class=\"p\">:</span>  <span class=\"s1\">&#39;rf&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">MODEL_URLS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"n\">DETECTOR_KEY_RF</span><span class=\"p\">:</span> <span class=\"s1\">&#39;https://cthulhu.dyn.wildme.io/public/models/rf.v3.zip&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_expand_modeldir</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"o\">=</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; returns default unless another path is specified &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">modeldir</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;default&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">modeldir</span> <span class=\"o\">=</span> <span class=\"n\">DEFAULT_DETECTMODELS_DIR</span>\n    <span class=\"k\">return</span> <span class=\"n\">modeldir</span>\n\n\n<div class=\"viewcode-block\" id=\"get_species_trees_paths\"><a class=\"viewcode-back\" href=\"../../../../../ibeis.algo.detect/#ibeis.algo.detect.grabmodels.get_species_trees_paths\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_species_trees_paths</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"p\">,</span> <span class=\"n\">modeldir</span><span class=\"o\">=</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        species (?):</span>\n<span class=\"sd\">        modeldir (str):</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        ?: trees_path</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.algo.detect.grabmodels --test-get_species_trees_paths</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.algo.detect.grabmodels import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; # build test data</span>\n<span class=\"sd\">        &gt;&gt;&gt; species = ibeis.const.TEST_SPECIES.ZEB_PLAIN</span>\n<span class=\"sd\">        &gt;&gt;&gt; modeldir = &#39;default&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; # execute function</span>\n<span class=\"sd\">        &gt;&gt;&gt; trees_path = get_species_trees_paths(species, modeldir)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # verify results</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = str(trees_path)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">modeldir</span> <span class=\"o\">=</span> <span class=\"n\">_expand_modeldir</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">)</span>\n    <span class=\"n\">algosubdir</span> <span class=\"o\">=</span> <span class=\"n\">MODEL_ALGO_SUBDIRS</span><span class=\"p\">[</span><span class=\"n\">DETECTOR_KEY_RF</span><span class=\"p\">]</span>\n    <span class=\"n\">rf_model_dir</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">,</span> <span class=\"n\">algosubdir</span><span class=\"p\">)</span>\n    <span class=\"n\">trees_path</span>   <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">rf_model_dir</span><span class=\"p\">,</span> <span class=\"n\">species</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">trees_path</span></div>\n\n\n<div class=\"viewcode-block\" id=\"iter_algo_modeldirs\"><a class=\"viewcode-back\" href=\"../../../../../ibeis.algo.detect/#ibeis.algo.detect.grabmodels.iter_algo_modeldirs\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">iter_algo_modeldirs</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"o\">=</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">,</span> <span class=\"n\">ensurebase</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"n\">modeldir</span> <span class=\"o\">=</span> <span class=\"n\">_expand_modeldir</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">ensurebase</span><span class=\"p\">:</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">algo</span><span class=\"p\">,</span> <span class=\"n\">algosubdir</span> <span class=\"ow\">in</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">iteritems</span><span class=\"p\">(</span><span class=\"n\">MODEL_ALGO_SUBDIRS</span><span class=\"p\">):</span>\n        <span class=\"k\">yield</span> <span class=\"n\">algo</span><span class=\"p\">,</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">,</span> <span class=\"n\">algosubdir</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"assert_models\"><a class=\"viewcode-back\" href=\"../../../../../ibeis.algo.detect/#ibeis.algo.detect.grabmodels.assert_models\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">assert_models</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"o\">=</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">algo</span><span class=\"p\">,</span> <span class=\"n\">algo_modeldir</span> <span class=\"ow\">in</span> <span class=\"n\">iter_algo_modeldirs</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">):</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assertpath</span><span class=\"p\">(</span><span class=\"n\">algo_modeldir</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span></div>\n        <span class=\"c1\">#assert ut.checkpath(algo_modeldir, verbose=True), (&#39;algo_modeldir=%r does not exist&#39; % algo_modeldir)</span>\n\n\n<div class=\"viewcode-block\" id=\"ensure_models\"><a class=\"viewcode-back\" href=\"../../../../../ibeis.algo.detect/#ibeis.algo.detect.grabmodels.ensure_models\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">ensure_models</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"o\">=</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        modeldir (str):</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.algo.detect.grabmodels --test-ensure_models</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.algo.detect.grabmodels import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; modeldir = &#39;default&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = ensure_models(modeldir)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">modeldir</span> <span class=\"o\">=</span> <span class=\"n\">_expand_modeldir</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">algo</span><span class=\"p\">,</span> <span class=\"n\">algo_modeldir</span> <span class=\"ow\">in</span> <span class=\"n\">iter_algo_modeldirs</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">,</span> <span class=\"n\">ensurebase</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">algo_modeldir</span><span class=\"p\">):</span>\n            <span class=\"n\">_download_model</span><span class=\"p\">(</span><span class=\"n\">algo</span><span class=\"p\">,</span> <span class=\"n\">modeldir</span><span class=\"p\">)</span>\n    <span class=\"n\">assert_models</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"redownload_models\"><a class=\"viewcode-back\" href=\"../../../../../ibeis.algo.detect/#ibeis.algo.detect.grabmodels.redownload_models\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">redownload_models</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"o\">=</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        modeldir (str): (default = &#39;default&#39;)</span>\n<span class=\"sd\">        verbose (bool):  verbosity flag(default = True)</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.algo.detect.grabmodels --test-redownload_models</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # SCRIPT</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.algo.detect.grabmodels import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = redownload_models()</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[grabmodels] redownload_detection_models&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">modeldir</span> <span class=\"o\">=</span> <span class=\"n\">_expand_modeldir</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">)</span>\n    <span class=\"n\">ensure_models</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"o\">=</span><span class=\"n\">modeldir</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">verbose</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[grabmodels] finished redownload_detection_models&#39;</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_download_model</span><span class=\"p\">(</span><span class=\"n\">algo</span><span class=\"p\">,</span> <span class=\"n\">algo_modeldir</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Download and overwrites models</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">zip_fpath</span> <span class=\"o\">=</span> <span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">algo_modeldir</span><span class=\"p\">,</span> <span class=\"n\">algo</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;.zip&#39;</span><span class=\"p\">))</span>\n    <span class=\"c1\"># Download and unzip model</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[grabmodels] Downloading model_dir=</span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">zip_fpath</span><span class=\"p\">)</span>\n    <span class=\"n\">model_link</span> <span class=\"o\">=</span> <span class=\"n\">MODEL_URLS</span><span class=\"p\">[</span><span class=\"n\">algo</span><span class=\"p\">]</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">download_url</span><span class=\"p\">(</span><span class=\"n\">model_link</span><span class=\"p\">,</span> <span class=\"n\">zip_fpath</span><span class=\"p\">)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">unzip_file</span><span class=\"p\">(</span><span class=\"n\">zip_fpath</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Cleanup</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">zip_fpath</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n\n<span class=\"sd\">    modeldir = ibs.get_detect_modeldir()</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.algo.detect.grabmodels</span>\n<span class=\"sd\">        python -m ibeis.algo.detect.grabmodels --allexamples</span>\n<span class=\"sd\">        python -m ibeis.algo.detect.grabmodels --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/algo/detect/grabmodels", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}