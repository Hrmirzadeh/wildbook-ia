{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}], "title": "ibeis.web.apis", "body": "<h1>Source code for ibeis.web.apis</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Dependencies: flask, tornado</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"k\">import</span> <span class=\"n\">join</span><span class=\"p\">,</span> <span class=\"n\">exists</span>\n<span class=\"kn\">import</span> <span class=\"nn\">zipfile</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">io</span> <span class=\"k\">import</span> <span class=\"n\">BytesIO</span>\n<span class=\"kn\">from</span> <span class=\"nn\">six.moves</span> <span class=\"k\">import</span> <span class=\"n\">cStringIO</span> <span class=\"k\">as</span> <span class=\"n\">StringIO</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"k\">import</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">current_app</span><span class=\"p\">,</span> <span class=\"n\">send_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.control</span> <span class=\"k\">import</span> <span class=\"n\">controller_inject</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.web</span> <span class=\"k\">import</span> <span class=\"n\">appfuncs</span> <span class=\"k\">as</span> <span class=\"n\">appf</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">import</span> <span class=\"nn\">vtool</span> <span class=\"k\">as</span> <span class=\"nn\">vt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uuid</span> <span class=\"k\">as</span> <span class=\"nn\">uuid_module</span>\n<span class=\"kn\">import</span> <span class=\"nn\">six</span>\n<span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">register_api</span>   <span class=\"o\">=</span> <span class=\"n\">controller_inject</span><span class=\"o\">.</span><span class=\"n\">get_ibeis_flask_api</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">register_route</span> <span class=\"o\">=</span> <span class=\"n\">controller_inject</span><span class=\"o\">.</span><span class=\"n\">get_ibeis_flask_route</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"web_embed\"><a class=\"viewcode-back\" href=\"../../../../ibeis.web/#ibeis.web.apis.web_embed\">[docs]</a><span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/embed/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">web_embed</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">current_app</span><span class=\"o\">.</span><span class=\"n\">ibs</span>  <span class=\"c1\"># NOQA</span>\n\n    <span class=\"k\">if</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.graph.state</span> <span class=\"k\">import</span> <span class=\"n\">POSTV</span>\n\n        <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;action&#39;</span>      <span class=\"p\">:</span> <span class=\"s1\">&#39;update_task_thresh&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;task&#39;</span>        <span class=\"p\">:</span> <span class=\"s1\">&#39;match_state&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;decision&#39;</span>    <span class=\"p\">:</span> <span class=\"n\">POSTV</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;value&#39;</span>       <span class=\"p\">:</span> <span class=\"mf\">0.95</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">graph_uuid</span> <span class=\"ow\">in</span> <span class=\"n\">current_app</span><span class=\"o\">.</span><span class=\"n\">GRAPH_CLIENT_DICT</span><span class=\"p\">:</span>\n            <span class=\"n\">graph_client</span> <span class=\"o\">=</span> <span class=\"n\">current_app</span><span class=\"o\">.</span><span class=\"n\">GRAPH_CLIENT_DICT</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">graph_uuid</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">graph_client</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">graph_client</span><span class=\"o\">.</span><span class=\"n\">futures</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n            <span class=\"n\">future</span> <span class=\"o\">=</span> <span class=\"n\">graph_client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"p\">)</span>  <span class=\"c1\"># NOQA</span>\n            <span class=\"c1\"># future.result()  # Guarantee that this has happened before calling refresh</span>\n\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">embed</span><span class=\"p\">()</span></div>\n\n\n<span class=\"c1\"># Special function that is a route only to ignore the JSON response, but is</span>\n<span class=\"c1\"># actually (and should be) an API call</span>\n<div class=\"viewcode-block\" id=\"image_src_api\"><a class=\"viewcode-back\" href=\"../../../../ibeis.web/#ibeis.web.apis.image_src_api\">[docs]</a><span class=\"nd\">@register_route</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/image/src/&lt;rowid&gt;/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__route_prefix_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">__route_authenticate__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">image_src_api</span><span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">thumbnail</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">fresh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns the image file of image &lt;gid&gt;</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # WEB_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.web.app import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs = ibeis.opendb_bg_web(&#39;testdb1&#39;, start_job_queue=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs.send_ibeis_request(&#39;/api/image/src/&#39;, type_=&#39;get&#39;, gid=1)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(resp)</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs.terminate2()</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/image/src/&lt;rowid&gt;/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"k\">import</span> <span class=\"n\">Image</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">thumbnail</span> <span class=\"o\">=</span> <span class=\"n\">thumbnail</span> <span class=\"ow\">or</span> <span class=\"s1\">&#39;thumbnail&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">args</span> <span class=\"ow\">or</span> <span class=\"s1\">&#39;thumbnail&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">form</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">current_app</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n    <span class=\"k\">if</span> <span class=\"n\">thumbnail</span><span class=\"p\">:</span>\n        <span class=\"n\">gpath</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_thumbpath</span><span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"p\">,</span> <span class=\"n\">ensure_paths</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">fresh</span> <span class=\"o\">=</span> <span class=\"n\">fresh</span> <span class=\"ow\">or</span> <span class=\"s1\">&#39;fresh&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">args</span> <span class=\"ow\">or</span> <span class=\"s1\">&#39;fresh&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">form</span>\n        <span class=\"k\">if</span> <span class=\"n\">fresh</span><span class=\"p\">:</span>\n            <span class=\"c1\">#import os</span>\n            <span class=\"c1\">#os.remove(gpath)</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">gpath</span><span class=\"p\">)</span>\n            <span class=\"n\">gpath</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_thumbpath</span><span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"p\">,</span> <span class=\"n\">ensure_paths</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">gpath</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_paths</span><span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Load image</span>\n    <span class=\"k\">assert</span> <span class=\"n\">gpath</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">&#39;image path should not be None&#39;</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"n\">gpath</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s1\">&#39;auto&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">appf</span><span class=\"o\">.</span><span class=\"n\">resize_via_web_parameters</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"p\">::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Encode image</span>\n    <span class=\"n\">image_pil</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">fromarray</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">PY2</span><span class=\"p\">:</span>\n        <span class=\"n\">img_io</span> <span class=\"o\">=</span> <span class=\"n\">StringIO</span><span class=\"p\">()</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">img_io</span> <span class=\"o\">=</span> <span class=\"n\">BytesIO</span><span class=\"p\">()</span>\n    <span class=\"n\">image_pil</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">img_io</span><span class=\"p\">,</span> <span class=\"s1\">&#39;JPEG&#39;</span><span class=\"p\">,</span> <span class=\"n\">quality</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">img_io</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">send_file</span><span class=\"p\">(</span><span class=\"n\">img_io</span><span class=\"p\">,</span> <span class=\"n\">mimetype</span><span class=\"o\">=</span><span class=\"s1\">&#39;image/jpeg&#39;</span><span class=\"p\">)</span></div>\n    <span class=\"c1\"># return send_file(gpath, mimetype=&#39;application/unknown&#39;)</span>\n\n\n<span class=\"c1\"># Special function that is a route only to ignore the JSON response, but is</span>\n<span class=\"c1\"># actually (and should be) an API call</span>\n<div class=\"viewcode-block\" id=\"annot_src_api\"><a class=\"viewcode-back\" href=\"../../../../ibeis.web/#ibeis.web.apis.annot_src_api\">[docs]</a><span class=\"nd\">@register_route</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/annot/src/&lt;rowid&gt;/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__route_prefix_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">__route_authenticate__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">annot_src_api</span><span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">fresh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns the image file of annot &lt;aid&gt;</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # WEB_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.web.app import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs = ibeis.opendb_bg_web(&#39;testdb1&#39;, start_job_queue=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs.send_ibeis_request(&#39;/api/annot/src/&#39;, type_=&#39;get&#39;, aid=1)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(resp)</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs.terminate2()</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/src/&lt;rowid&gt;/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"k\">import</span> <span class=\"n\">Image</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">current_app</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n    <span class=\"n\">gpath</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chip_fpath</span><span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Load image</span>\n    <span class=\"k\">assert</span> <span class=\"n\">gpath</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">&#39;image path should not be None&#39;</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"n\">gpath</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s1\">&#39;auto&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">appf</span><span class=\"o\">.</span><span class=\"n\">resize_via_web_parameters</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"p\">::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Encode image</span>\n    <span class=\"n\">image_pil</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">fromarray</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">PY2</span><span class=\"p\">:</span>\n        <span class=\"n\">img_io</span> <span class=\"o\">=</span> <span class=\"n\">StringIO</span><span class=\"p\">()</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">img_io</span> <span class=\"o\">=</span> <span class=\"n\">BytesIO</span><span class=\"p\">()</span>\n    <span class=\"n\">image_pil</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">img_io</span><span class=\"p\">,</span> <span class=\"s1\">&#39;JPEG&#39;</span><span class=\"p\">,</span> <span class=\"n\">quality</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">img_io</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">send_file</span><span class=\"p\">(</span><span class=\"n\">img_io</span><span class=\"p\">,</span> <span class=\"n\">mimetype</span><span class=\"o\">=</span><span class=\"s1\">&#39;image/jpeg&#39;</span><span class=\"p\">)</span></div>\n    <span class=\"c1\"># return send_file(gpath, mimetype=&#39;application/unknown&#39;)</span>\n\n\n<span class=\"c1\"># Special function that is a route only to ignore the JSON response, but is</span>\n<span class=\"c1\"># actually (and should be) an API call</span>\n<div class=\"viewcode-block\" id=\"background_src_api\"><a class=\"viewcode-back\" href=\"../../../../ibeis.web/#ibeis.web.apis.background_src_api\">[docs]</a><span class=\"nd\">@register_route</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/background/src/&lt;rowid&gt;/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__route_prefix_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">__route_authenticate__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">background_src_api</span><span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">fresh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns the image file of annot &lt;aid&gt;</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # WEB_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.web.app import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs = ibeis.opendb_bg_web(&#39;testdb1&#39;, start_job_queue=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs.send_ibeis_request(&#39;/api/annot/src/&#39;, type_=&#39;get&#39;, aid=1)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(resp)</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs.terminate2()</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/annot/src/&lt;rowid&gt;/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"k\">import</span> <span class=\"n\">Image</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">current_app</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n    <span class=\"n\">gpath</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_probchip_fpath</span><span class=\"p\">(</span><span class=\"n\">rowid</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Load image</span>\n    <span class=\"k\">assert</span> <span class=\"n\">gpath</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">&#39;image path should not be None&#39;</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"n\">gpath</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s1\">&#39;auto&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">appf</span><span class=\"o\">.</span><span class=\"n\">resize_via_web_parameters</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"p\">::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Encode image</span>\n    <span class=\"n\">image_pil</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">fromarray</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">PY2</span><span class=\"p\">:</span>\n        <span class=\"n\">img_io</span> <span class=\"o\">=</span> <span class=\"n\">StringIO</span><span class=\"p\">()</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">img_io</span> <span class=\"o\">=</span> <span class=\"n\">BytesIO</span><span class=\"p\">()</span>\n    <span class=\"n\">image_pil</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">img_io</span><span class=\"p\">,</span> <span class=\"s1\">&#39;JPEG&#39;</span><span class=\"p\">,</span> <span class=\"n\">quality</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">img_io</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">send_file</span><span class=\"p\">(</span><span class=\"n\">img_io</span><span class=\"p\">,</span> <span class=\"n\">mimetype</span><span class=\"o\">=</span><span class=\"s1\">&#39;image/jpeg&#39;</span><span class=\"p\">)</span></div>\n    <span class=\"c1\"># return send_file(gpath, mimetype=&#39;application/unknown&#39;)</span>\n\n\n<span class=\"c1\"># Special function that is a route only to ignore the JSON response, but is</span>\n<span class=\"c1\"># actually (and should be) an API call</span>\n<div class=\"viewcode-block\" id=\"image_src_api_json\"><a class=\"viewcode-back\" href=\"../../../../ibeis.web/#ibeis.web.apis.image_src_api_json\">[docs]</a><span class=\"nd\">@register_route</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/image/src/json/&lt;uuid&gt;/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">],</span> <span class=\"n\">__route_prefix_check__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">__route_authenticate__</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">image_src_api_json</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns the image file of image &lt;gid&gt;</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # WEB_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.web.app import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs = ibeis.opendb_bg_web(&#39;testdb1&#39;, start_job_queue=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs.send_ibeis_request(&#39;/api/image/src/&#39;, type_=&#39;get&#39;, gid=1)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(resp)</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs.terminate2()</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: GET</span>\n<span class=\"sd\">        URL:    /api/image/src/&lt;gid&gt;/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">current_app</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"p\">,</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">string_types</span><span class=\"p\">):</span>\n            <span class=\"n\">uuid</span> <span class=\"o\">=</span> <span class=\"n\">uuid_module</span><span class=\"o\">.</span><span class=\"n\">UUID</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">ibeis.control.controller_inject</span> <span class=\"k\">import</span> <span class=\"n\">translate_ibeis_webreturn</span>\n        <span class=\"k\">return</span> <span class=\"n\">translate_ibeis_webreturn</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">success</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span>\n                                         <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">&#39;Invalid image UUID&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">gid</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_gids_from_uuid</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">image_src_api</span><span class=\"p\">(</span><span class=\"n\">gid</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"image_upload\"><a class=\"viewcode-back\" href=\"../../../../ibeis.web/#ibeis.web.apis.image_upload\">[docs]</a><span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/upload/image/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;POST&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">image_upload</span><span class=\"p\">(</span><span class=\"n\">cleanup</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns the gid for an uploaded image.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        image (image binary): the POST variable containing the binary</span>\n<span class=\"sd\">            (multi-form) image data</span>\n<span class=\"sd\">        **kwargs: Arbitrary keyword arguments; the kwargs are passed down to</span>\n<span class=\"sd\">            the add_images function</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        gid (rowids): gid corresponding to the image submitted.</span>\n<span class=\"sd\">            lexigraphical order.</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: POST</span>\n<span class=\"sd\">        URL:    /api/upload/image/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">current_app</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;request.files = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">,))</span>\n\n    <span class=\"n\">filestore</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;image&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">filestore</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">IOError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Image not given&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">uploads_path</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_uploadsdir</span><span class=\"p\">()</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">uploads_path</span><span class=\"p\">)</span>\n    <span class=\"n\">current_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y_%m_</span><span class=\"si\">%d</span><span class=\"s1\">_%H_%M_%S&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">modifier</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">upload_filename</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;upload_</span><span class=\"si\">%s</span><span class=\"s1\">.png&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">current_time</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">upload_filename</span><span class=\"p\">):</span>\n        <span class=\"n\">upload_filename</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;upload_</span><span class=\"si\">%s</span><span class=\"s1\">_</span><span class=\"si\">%04d</span><span class=\"s1\">.png&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">current_time</span><span class=\"p\">,</span> <span class=\"n\">modifier</span><span class=\"p\">)</span>\n        <span class=\"n\">modifier</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n    <span class=\"n\">upload_filepath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">uploads_path</span><span class=\"p\">,</span> <span class=\"n\">upload_filename</span><span class=\"p\">)</span>\n    <span class=\"n\">filestore</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">upload_filepath</span><span class=\"p\">)</span>\n\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_images</span><span class=\"p\">([</span><span class=\"n\">upload_filepath</span><span class=\"p\">],</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">gid</span> <span class=\"o\">=</span> <span class=\"n\">gid_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">cleanup</span> <span class=\"ow\">and</span> <span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">upload_filepath</span><span class=\"p\">):</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">remove_dirs</span><span class=\"p\">(</span><span class=\"n\">upload_filepath</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">gid</span></div>\n\n\n<div class=\"viewcode-block\" id=\"image_upload_zip\"><a class=\"viewcode-back\" href=\"../../../../ibeis.web/#ibeis.web.apis.image_upload_zip\">[docs]</a><span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/upload/zip/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;POST&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">image_upload_zip</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Returns the gid_list for image files submitted in a ZIP archive.  The image</span>\n<span class=\"sd\">    archive should be flat (no folders will be scanned for images) and must be smaller</span>\n<span class=\"sd\">    than 100 MB.  The archive can submit multiple images, ideally in JPEG format to save</span>\n<span class=\"sd\">    space.  Duplicate image uploads will result in the duplicate images receiving</span>\n<span class=\"sd\">    the same gid based on the hashed pixel values.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        image_zip_archive (binary): the POST variable containing the binary</span>\n<span class=\"sd\">            (multi-form) image archive data</span>\n<span class=\"sd\">        **kwargs: Arbitrary keyword arguments; the kwargs are passed down to</span>\n<span class=\"sd\">            the add_images function</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        gid_list (list if rowids): the list of gids corresponding to the images</span>\n<span class=\"sd\">            submitted.  The gids correspond to the image names sorted in</span>\n<span class=\"sd\">            lexigraphical order.</span>\n\n<span class=\"sd\">    RESTful:</span>\n<span class=\"sd\">        Method: POST</span>\n<span class=\"sd\">        URL:    /api/image/zip</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">current_app</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n    <span class=\"c1\"># Get image archive</span>\n    <span class=\"n\">image_archive</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;image_zip_archive&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">image_archive</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">IOError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Image archive not given&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># If the directory already exists, delete it</span>\n    <span class=\"n\">uploads_path</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_uploadsdir</span><span class=\"p\">()</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">uploads_path</span><span class=\"p\">)</span>\n    <span class=\"n\">current_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y_%m_</span><span class=\"si\">%d</span><span class=\"s1\">_%H_%M_%S&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">modifier</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">upload_path</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">current_time</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">upload_path</span><span class=\"p\">):</span>\n        <span class=\"n\">upload_path</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s</span><span class=\"s1\">_</span><span class=\"si\">%04d</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">current_time</span><span class=\"p\">,</span> <span class=\"n\">modifier</span><span class=\"p\">)</span>\n        <span class=\"n\">modifier</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n    <span class=\"n\">upload_path</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">uploads_path</span><span class=\"p\">,</span> <span class=\"n\">upload_path</span><span class=\"p\">)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">ensuredir</span><span class=\"p\">(</span><span class=\"n\">upload_path</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Extract the content</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">zipfile</span><span class=\"o\">.</span><span class=\"n\">ZipFile</span><span class=\"p\">(</span><span class=\"n\">image_archive</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">zfile</span><span class=\"p\">:</span>\n            <span class=\"n\">zfile</span><span class=\"o\">.</span><span class=\"n\">extractall</span><span class=\"p\">(</span><span class=\"n\">upload_path</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">remove_dirs</span><span class=\"p\">(</span><span class=\"n\">upload_path</span><span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">IOError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Image archive extracton failed&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    test to ensure Directory and utool do the same thing</span>\n\n<span class=\"sd\">    from detecttools.directory import Directory</span>\n<span class=\"sd\">    upload_path = ut.truepath(&#39;~/Pictures&#39;)</span>\n<span class=\"sd\">    gpath_list1 = sorted(ut.list_images(upload_path, recursive=False, full=True))</span>\n\n<span class=\"sd\">    direct = Directory(upload_path, include_file_extensions=&#39;images&#39;, recursive=False)</span>\n<span class=\"sd\">    gpath_list = direct.files()</span>\n<span class=\"sd\">    gpath_list = sorted(gpath_list)</span>\n\n<span class=\"sd\">    assert gpath_list1 == gpath_list</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">list_images</span><span class=\"p\">(</span><span class=\"n\">upload_path</span><span class=\"p\">,</span> <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">full</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n    <span class=\"c1\">#direct = Directory(upload_path, include_file_extensions=&#39;images&#39;, recursive=False)</span>\n    <span class=\"c1\">#gpath_list = direct.files()</span>\n    <span class=\"c1\">#gpath_list = sorted(gpath_list)</span>\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_images</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">gid_list</span></div>\n\n\n<div class=\"viewcode-block\" id=\"hello_world\"><a class=\"viewcode-back\" href=\"../../../../ibeis.web/#ibeis.web.apis.hello_world\">[docs]</a><span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/test/helloworld/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;POST&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;DELETE&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.web.apis --exec-hello_world:0</span>\n<span class=\"sd\">        python -m ibeis.web.apis --exec-hello_world:1</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # WEB_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.web.app import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs = ibeis.opendb_bg_web(browser=True, start_job_queue=False, url_suffix=&#39;/api/test/helloworld/?test0=0&#39;)  # start_job_queue=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;web_ibs = %r&#39; % (web_ibs,))</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(&#39;Server will run until control c&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; #web_ibs.terminate2()</span>\n\n<span class=\"sd\">    Example1:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # WEB_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.web.app import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; import requests</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs = ibeis.opendb_bg_web(&#39;testdb1&#39;, start_job_queue=False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_port = ibs.get_web_port_via_scan()</span>\n<span class=\"sd\">        &gt;&gt;&gt; if web_port is None:</span>\n<span class=\"sd\">        &gt;&gt;&gt;     raise ValueError(&#39;IA web server is not running on any expected port&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; domain = &#39;http://127.0.0.1:%s&#39; % (web_port, )</span>\n<span class=\"sd\">        &gt;&gt;&gt; url = domain + &#39;/api/test/helloworld/?test0=0&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; payload = {</span>\n<span class=\"sd\">        &gt;&gt;&gt;     &#39;test1&#39; : &#39;test1&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;     &#39;test2&#39; : None,  # NOTICE test2 DOES NOT SHOW UP</span>\n<span class=\"sd\">        &gt;&gt;&gt; }</span>\n<span class=\"sd\">        &gt;&gt;&gt; resp = requests.post(url, data=payload)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(resp)</span>\n<span class=\"sd\">        &gt;&gt;&gt; web_ibs.terminate2()</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;+------------ HELLO WORLD ------------&#39;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Args: </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">,))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Kwargs: </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">,))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;request.args: </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">,))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;request.form: </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"p\">,))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;request.url; </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">,))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;request.environ: </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr3</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">),))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;request: </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr3</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">),))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;L____________ HELLO WORLD ____________&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"heartbeat\"><a class=\"viewcode-back\" href=\"../../../../ibeis.web/#ibeis.web.apis.heartbeat\">[docs]</a><span class=\"nd\">@register_api</span><span class=\"p\">(</span><span class=\"s1\">&#39;/api/test/heartbeat/&#39;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;GET&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;POST&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;DELETE&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;PUT&#39;</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">heartbeat</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.web.app</span>\n<span class=\"sd\">        python -m ibeis.web.app --allexamples</span>\n<span class=\"sd\">        python -m ibeis.web.app --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/web/apis", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}