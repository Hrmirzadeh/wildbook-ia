{"parents": [{"link": "../../", "title": "Module code"}, {"link": "../", "title": "ibeis"}], "title": "ibeis.__main__", "body": "<h1>Source code for ibeis.__main__</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Runs IBIES gui</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"n\">CMD</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--cmd&#39;</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"dependencies_for_myprogram\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.__main__.dependencies_for_myprogram\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">dependencies_for_myprogram</span><span class=\"p\">():</span>\n    <span class=\"sd\">&quot;&quot;&quot; Let pyintaller find these modules</span>\n\n<span class=\"sd\">    References:</span>\n<span class=\"sd\">        http://stackoverflow.com/questions/18596410/importerror-no-module-named-mpl-toolkits-with-maptlotlib-1-3-0-and-py2exe</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">guitool.__PYQT__</span> <span class=\"k\">import</span> <span class=\"n\">QtCore</span><span class=\"p\">,</span> <span class=\"n\">QtGui</span>  <span class=\"c1\"># Pyinstaller hacks  # NOQA</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">PyQt4</span> <span class=\"k\">import</span> <span class=\"n\">QtCore</span><span class=\"p\">,</span> <span class=\"n\">QtGui</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"c1\">#from PyQt4 import QtCore, QtGui  # NOQA</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">scipy.sparse.csgraph</span> <span class=\"k\">import</span> <span class=\"n\">_validation</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">scipy.special</span> <span class=\"k\">import</span> <span class=\"n\">_ufuncs_cxx</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">mpl_toolkits.axes_grid1</span> <span class=\"k\">import</span> <span class=\"n\">make_axes_locatable</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"c1\">#import lru  # NOQA</span>\n    <span class=\"c1\"># Workaround for mpl_toolkits</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">importlib</span>\n    <span class=\"n\">importlib</span><span class=\"o\">.</span><span class=\"n\">import_module</span><span class=\"p\">(</span><span class=\"s1\">&#39;mpl_toolkits&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">__path__</span></div>\n\n\n<div class=\"viewcode-block\" id=\"run_ibeis\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis.__main__.run_ibeis\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">run_ibeis</span><span class=\"p\">():</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis</span>\n<span class=\"sd\">        python -m ibeis find_installed_tomcat</span>\n<span class=\"sd\">        python -m ibeis get_annot_groundtruth:1</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\">#ut.set_process_title(&#39;IBEIS_main&#39;)</span>\n    <span class=\"c1\">#main_locals = ibeis.main()</span>\n    <span class=\"c1\">#ibeis.main_loop(main_locals)</span>\n    <span class=\"c1\">#ut.set_process_title(&#39;IBEIS_main&#39;)</span>\n    <span class=\"n\">cmdline_varags</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_cmdline_varargs</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cmdline_varags</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"n\">cmdline_varags</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;rsync&#39;</span><span class=\"p\">:</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">ibeis.scripts</span> <span class=\"k\">import</span> <span class=\"n\">rsync_ibeisdb</span>\n        <span class=\"n\">rsync_ibeisdb</span><span class=\"o\">.</span><span class=\"n\">rsync_ibsdb_main</span><span class=\"p\">()</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--devcmd&#39;</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Hack to let devs mess around when using an installer version</span>\n        <span class=\"c1\"># TODO: add more hacks</span>\n        <span class=\"c1\">#import utool.tests.run_tests</span>\n        <span class=\"c1\">#utool.tests.run_tests.run_tests()</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">embed</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Run the tests of other modules</span>\n    <span class=\"k\">elif</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--run-utool-tests&#39;</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">utool.tests.run_tests</span>\n        <span class=\"n\">retcode</span> <span class=\"o\">=</span> <span class=\"n\">utool</span><span class=\"o\">.</span><span class=\"n\">tests</span><span class=\"o\">.</span><span class=\"n\">run_tests</span><span class=\"o\">.</span><span class=\"n\">run_tests</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;... exiting&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">retcode</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--run-vtool-tests&#39;</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">vtool.tests.run_tests</span>\n        <span class=\"n\">retcode</span> <span class=\"o\">=</span> <span class=\"n\">vtool</span><span class=\"o\">.</span><span class=\"n\">tests</span><span class=\"o\">.</span><span class=\"n\">run_tests</span><span class=\"o\">.</span><span class=\"n\">run_tests</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;... exiting&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">retcode</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">((</span><span class=\"s1\">&#39;--run-ibeis-tests&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--run-tests&#39;</span><span class=\"p\">)):</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">ibeis.tests</span> <span class=\"k\">import</span> <span class=\"n\">run_tests</span>\n        <span class=\"n\">retcode</span> <span class=\"o\">=</span> <span class=\"n\">run_tests</span><span class=\"o\">.</span><span class=\"n\">run_tests</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;... exiting&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">retcode</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;-e&#39;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        ibeis -e print -a default -t default</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"c1\"># Run dev script if -e given</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">ibeis.dev</span>  <span class=\"c1\"># NOQA</span>\n        <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">dev</span><span class=\"o\">.</span><span class=\"n\">devmain</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;... exiting&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Attempt to run a test using the funciton name alone</span>\n    <span class=\"c1\"># with the --tf flag</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis.tests.run_tests</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis.tests.reset_testdbs</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis.scripts.thesis</span>\n    <span class=\"n\">ignore_prefix</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"c1\">#&#39;ibeis.tests&#39;,</span>\n        <span class=\"s1\">&#39;ibeis.control.__SQLITE3__&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;_autogen_explicit_controller&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">ignore_suffix</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;_grave&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">func_to_module_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;demo_bayesnet&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ibeis.unstable.demobayes&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">main_function_tester</span><span class=\"p\">(</span><span class=\"s1\">&#39;ibeis&#39;</span><span class=\"p\">,</span> <span class=\"n\">ignore_prefix</span><span class=\"p\">,</span> <span class=\"n\">ignore_suffix</span><span class=\"p\">,</span>\n                            <span class=\"n\">func_to_module_dict</span><span class=\"o\">=</span><span class=\"n\">func_to_module_dict</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">#if ut.get_argflag(&#39;-e&#39;):</span>\n    <span class=\"c1\">#    import ibeis</span>\n    <span class=\"c1\">#    expt_kw = ut.get_arg_dict(ut.get_func_kwargs(ibeis.run_experiment),</span>\n    <span class=\"c1\">#    prefix_list=[&#39;--&#39;, &#39;-&#39;])</span>\n    <span class=\"c1\">#    ibeis.run_experiment(**expt_kw)</span>\n    <span class=\"c1\">#    sys.exit(0)</span>\n\n    <span class=\"n\">doctest_modname</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argval</span><span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;--doctest-module&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--tmod&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-tm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--testmod&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">help_</span><span class=\"o\">=</span><span class=\"s1\">&#39;specify a module to doctest&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">doctest_modname</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Allow any doctest to be run the main ibeis script</span>\n\n<span class=\"sd\">        python -m ibeis --tmod utool.util_str --test-align:0</span>\n<span class=\"sd\">        python -m ibeis --tmod ibeis.algo.hots.pipeline --test-request_ibeis_query_L0:0 --show</span>\n<span class=\"sd\">        python -m ibeis --tf request_ibeis_query_L0:0 --show</span>\n<span class=\"sd\">        ./dist/ibeis/IBEISApp --tmod ibeis.algo.hots.pipeline --test-request_ibeis_query_L0:0 --show  # NOQA</span>\n<span class=\"sd\">        ./dist/ibeis/IBEISApp --tmod utool.util_str --test-align:0</span>\n<span class=\"sd\">        ./dist/IBEIS.app/Contents/MacOS/IBEISApp --tmod utool.util_str --test-align:0</span>\n<span class=\"sd\">        ./dist/IBEIS.app/Contents/MacOS/IBEISApp --run-utool-tests</span>\n<span class=\"sd\">        ./dist/IBEIS.app/Contents/MacOS/IBEISApp --run-vtool-tests</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[ibeis] Testing module&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">mod_alias_list</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;exptdraw&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ibeis.expt.experiment_drawing&#39;</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">doctest_modname</span> <span class=\"o\">=</span> <span class=\"n\">mod_alias_list</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">doctest_modname</span><span class=\"p\">,</span> <span class=\"n\">doctest_modname</span><span class=\"p\">)</span>\n        <span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">import_modname</span><span class=\"p\">(</span><span class=\"n\">doctest_modname</span><span class=\"p\">)</span>\n        <span class=\"p\">(</span><span class=\"n\">nPass</span><span class=\"p\">,</span> <span class=\"n\">nTotal</span><span class=\"p\">,</span> <span class=\"n\">failed_list</span><span class=\"p\">,</span> <span class=\"n\">error_report_list</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"n\">module</span><span class=\"p\">)</span>\n        <span class=\"n\">retcode</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">failed_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"c1\">#print(module)</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">retcode</span><span class=\"p\">)</span>\n\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n    <span class=\"n\">main_locals</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">()</span>\n    <span class=\"n\">execstr</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">main_loop</span><span class=\"p\">(</span><span class=\"n\">main_locals</span><span class=\"p\">)</span>\n    <span class=\"c1\"># &lt;DEBUG CODE&gt;</span>\n    <span class=\"k\">if</span> <span class=\"s1\">&#39;back&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">main_locals</span> <span class=\"ow\">and</span> <span class=\"n\">CMD</span><span class=\"p\">:</span>\n        <span class=\"n\">back</span> <span class=\"o\">=</span> <span class=\"n\">main_locals</span><span class=\"p\">[</span><span class=\"s1\">&#39;back&#39;</span><span class=\"p\">]</span>\n        <span class=\"n\">front</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">back</span><span class=\"p\">,</span> <span class=\"s1\">&#39;front&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>  <span class=\"c1\"># NOQA</span>\n        <span class=\"c1\">#front = back.front</span>\n        <span class=\"c1\">#ui = front.ui</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">main_locals</span><span class=\"p\">[</span><span class=\"s1\">&#39;ibs&#39;</span><span class=\"p\">]</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">exec</span><span class=\"p\">(</span><span class=\"n\">execstr</span><span class=\"p\">)</span></div>\n    <span class=\"c1\"># &lt;/DEBUG CODE&gt;</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"n\">run_ibeis</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/__main__", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}