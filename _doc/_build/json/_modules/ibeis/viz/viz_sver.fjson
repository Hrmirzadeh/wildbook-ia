{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.viz"}], "title": "ibeis.viz.viz_sver", "body": "<h1>Source code for ibeis.viz.viz_sver</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">import</span> <span class=\"nn\">plottool.draw_sv</span> <span class=\"k\">as</span> <span class=\"nn\">draw_sv</span>\n<span class=\"p\">(</span><span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">print_</span><span class=\"p\">,</span> <span class=\"n\">printDBG</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"s1\">&#39;[viz_sver]&#39;</span><span class=\"p\">,</span> <span class=\"n\">DEBUG</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">WRITE_SV_DEBUG</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--write-sv-debug&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_get_sv_vartup_for_plottool</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid1</span><span class=\"p\">,</span> <span class=\"n\">aid2</span><span class=\"p\">,</span> <span class=\"n\">chipmatch_FILT</span><span class=\"p\">,</span> <span class=\"n\">aid2_svtup</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Compiles IBEIS information into info suitable for plottool &quot;&quot;&quot;</span>\n    <span class=\"n\">chip1</span><span class=\"p\">,</span> <span class=\"n\">chip2</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chips</span><span class=\"p\">([</span><span class=\"n\">aid1</span><span class=\"p\">,</span> <span class=\"n\">aid2</span><span class=\"p\">],</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">)</span>\n    <span class=\"n\">kpts1</span><span class=\"p\">,</span> <span class=\"n\">kpts2</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_kpts</span><span class=\"p\">([</span><span class=\"n\">aid1</span><span class=\"p\">,</span> <span class=\"n\">aid2</span><span class=\"p\">],</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">)</span>\n    <span class=\"n\">aid2_fm</span> <span class=\"o\">=</span> <span class=\"n\">chipmatch_FILT</span><span class=\"o\">.</span><span class=\"n\">aid2_fm</span>\n    <span class=\"n\">fm</span> <span class=\"o\">=</span> <span class=\"n\">aid2_fm</span><span class=\"p\">[</span><span class=\"n\">aid2</span><span class=\"p\">]</span>\n    <span class=\"p\">(</span><span class=\"n\">homog_inliers</span><span class=\"p\">,</span> <span class=\"n\">homog_err</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">aff_inliers</span><span class=\"p\">,</span> <span class=\"n\">aff_err</span><span class=\"p\">,</span> <span class=\"n\">Aff</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">aid2_svtup</span><span class=\"p\">[</span><span class=\"n\">aid2</span><span class=\"p\">]</span>\n    <span class=\"n\">homog_tup</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">homog_inliers</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">)</span>\n    <span class=\"n\">aff_tup</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">aff_inliers</span><span class=\"p\">,</span> <span class=\"n\">Aff</span><span class=\"p\">)</span>\n    <span class=\"n\">sv_vartup</span> <span class=\"o\">=</span> <span class=\"n\">chip1</span><span class=\"p\">,</span> <span class=\"n\">chip2</span><span class=\"p\">,</span> <span class=\"n\">kpts1</span><span class=\"p\">,</span> <span class=\"n\">kpts2</span><span class=\"p\">,</span> <span class=\"n\">fm</span><span class=\"p\">,</span> <span class=\"n\">homog_tup</span><span class=\"p\">,</span> <span class=\"n\">aff_tup</span>\n    <span class=\"k\">return</span> <span class=\"n\">sv_vartup</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_compute_svvars</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid1</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    DEPRICATE</span>\n<span class=\"sd\">    If spatial-verfication dbginfo is not in we need to compute it</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots</span> <span class=\"k\">import</span> <span class=\"n\">_pipeline_helpers</span> <span class=\"k\">as</span> <span class=\"n\">plh</span>\n    <span class=\"n\">daids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n    <span class=\"n\">qaids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">aid1</span><span class=\"p\">]</span>\n    <span class=\"n\">cfgdict</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">()</span>\n    <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">qaids</span><span class=\"p\">,</span> <span class=\"n\">daids</span><span class=\"p\">,</span> <span class=\"n\">cfgdict</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">daids</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;!!! nothing to search&#39;</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">qaids</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;!!! nothing to query&#39;</span>\n    <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">lazy_load</span><span class=\"p\">()</span>\n    <span class=\"n\">pipeline_locals_</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"n\">qaid2_chipmatch_FILT</span> <span class=\"o\">=</span> <span class=\"n\">pipeline_locals_</span><span class=\"p\">[</span><span class=\"s1\">&#39;qaid2_chipmatch_FILT&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">qaid2_svtups</span>         <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">[</span><span class=\"s1\">&#39;qaid2_svtups&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">chipmatch_FILT</span> <span class=\"o\">=</span> <span class=\"n\">qaid2_chipmatch_FILT</span><span class=\"p\">[</span><span class=\"n\">aid1</span><span class=\"p\">]</span>\n    <span class=\"n\">aid2_svtup</span>     <span class=\"o\">=</span> <span class=\"n\">qaid2_svtups</span><span class=\"p\">[</span><span class=\"n\">aid1</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">chipmatch_FILT</span><span class=\"p\">,</span> <span class=\"n\">aid2_svtup</span>\n\n\n<div class=\"viewcode-block\" id=\"show_sver\"><a class=\"viewcode-back\" href=\"../../../../ibeis.viz/#ibeis.viz.viz_sver.show_sver\">[docs]</a><span class=\"nd\">@ut</span><span class=\"o\">.</span><span class=\"n\">indent_func</span>\n<span class=\"k\">def</span> <span class=\"nf\">show_sver</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid1</span><span class=\"p\">,</span> <span class=\"n\">aid2</span><span class=\"p\">,</span> <span class=\"n\">chipmatch_FILT</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">aid2_svtup</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Compiles IBEIS information and sends it to plottool</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.viz.viz_sver --test-show_sver --show</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # SLOW_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.viz.viz_sver import *   # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; import utool as ut</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;testdb1&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid_list = ibs.get_valid_aids()</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid1, aid2 = aid_list[0:2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; chipmatch_FILT = None</span>\n<span class=\"sd\">        &gt;&gt;&gt; aid2_svtup = None</span>\n<span class=\"sd\">        &gt;&gt;&gt; kwargs = {}</span>\n<span class=\"sd\">        &gt;&gt;&gt; show_sver(ibs, aid1, aid2)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.quit_if_noshow()</span>\n<span class=\"sd\">        &gt;&gt;&gt; import plottool as pt</span>\n<span class=\"sd\">        &gt;&gt;&gt; exec(pt.present())</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">[show_sver] ====================== [show_sver]&#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\">#print(ut.func_str(show_sv, kwargs=locals()))</span>\n    <span class=\"k\">if</span> <span class=\"n\">chipmatch_FILT</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">aid2_svtup</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">chipmatch_FILT</span><span class=\"p\">,</span> <span class=\"n\">aid2_svtup</span> <span class=\"o\">=</span> <span class=\"n\">_compute_svvars</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid1</span><span class=\"p\">)</span>\n    <span class=\"n\">sv_vartup</span> <span class=\"o\">=</span> <span class=\"n\">_get_sv_vartup_for_plottool</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid1</span><span class=\"p\">,</span> <span class=\"n\">aid2</span><span class=\"p\">,</span> <span class=\"n\">chipmatch_FILT</span><span class=\"p\">,</span> <span class=\"n\">aid2_svtup</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">config2_</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"n\">chip1</span><span class=\"p\">,</span> <span class=\"n\">chip2</span><span class=\"p\">,</span> <span class=\"n\">kpts1</span><span class=\"p\">,</span> <span class=\"n\">kpts2</span><span class=\"p\">,</span> <span class=\"n\">fm</span><span class=\"p\">,</span> <span class=\"n\">homog_tup</span><span class=\"p\">,</span> <span class=\"n\">aff_tup</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">sv_vartup</span>\n    <span class=\"k\">if</span> <span class=\"n\">WRITE_SV_DEBUG</span><span class=\"p\">:</span>\n        <span class=\"n\">keys</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;chip1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;chip2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kpts1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kpts2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fm&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;homog_tup&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;aff_tup&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">save_testdata</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">keys</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[vizsv] write test info&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">qflag</span><span class=\"p\">()</span>\n    <span class=\"n\">draw_sv</span><span class=\"o\">.</span><span class=\"n\">show_sv</span><span class=\"p\">(</span><span class=\"n\">chip1</span><span class=\"p\">,</span> <span class=\"n\">chip2</span><span class=\"p\">,</span> <span class=\"n\">kpts1</span><span class=\"p\">,</span> <span class=\"n\">kpts2</span><span class=\"p\">,</span> <span class=\"n\">fm</span><span class=\"p\">,</span> <span class=\"n\">homog_tup</span><span class=\"o\">=</span><span class=\"n\">homog_tup</span><span class=\"p\">,</span> <span class=\"n\">aff_tup</span><span class=\"o\">=</span><span class=\"n\">aff_tup</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.viz.viz_sver --allexamples</span>\n<span class=\"sd\">        python -m ibeis.viz.viz_sver --allexamples --show</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/viz/viz_sver", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}