{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}, {"link": "../", "title": "ibeis.viz"}], "title": "ibeis.viz.viz_nearest_descriptors", "body": "<h1>Source code for ibeis.viz.viz_nearest_descriptors</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">six.moves</span> <span class=\"k\">import</span> <span class=\"nb\">range</span>\n<span class=\"kn\">from</span> <span class=\"nn\">plottool</span> <span class=\"k\">import</span> <span class=\"n\">draw_func2</span> <span class=\"k\">as</span> <span class=\"n\">df2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">plottool.viz_featrow</span> <span class=\"k\">import</span> <span class=\"n\">draw_feat_row</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.viz</span> <span class=\"k\">import</span> <span class=\"n\">viz_helpers</span> <span class=\"k\">as</span> <span class=\"n\">vh</span>\n<span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"kn\">import</span> <span class=\"nn\">six</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"p\">(</span><span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"get_annotfeat_nn_index\"><a class=\"viewcode-back\" href=\"../../../../ibeis.viz/#ibeis.viz.viz_nearest_descriptors.get_annotfeat_nn_index\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_annotfeat_nn_index</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">qfx</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"c1\">#raise NotImplementedError(&#39;this doesnt work anymore. Need to submit mc4 query with metadata on and then reextract the required params&#39;)</span>\n    <span class=\"c1\">#from . import match_chips3 as mc3</span>\n    <span class=\"c1\">#ibs._init_query_requestor()</span>\n    <span class=\"k\">if</span> <span class=\"n\">qreq_</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n        <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">([</span><span class=\"n\">qaid</span><span class=\"p\">],</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n    <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">load_indexer</span><span class=\"p\">()</span>  <span class=\"c1\"># TODO: ensure lazy</span>\n\n    <span class=\"c1\">#if isinstance(qfx, six.string_types):</span>\n    <span class=\"n\">special</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">qfx</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;special&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">special</span><span class=\"p\">:</span>\n        <span class=\"n\">qfx2_vecs</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_vecs</span><span class=\"p\">(</span><span class=\"n\">qaid</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">qfx</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">qfx</span><span class=\"p\">)</span>\n        <span class=\"n\">qfx2_vecs</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_vecs</span><span class=\"p\">(</span><span class=\"n\">qaid</span><span class=\"p\">)[</span><span class=\"n\">qfx</span><span class=\"p\">:(</span><span class=\"n\">qfx</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n    <span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">K</span>\n    <span class=\"n\">Knorm</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">Knorm</span>\n    <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">VERBOSE</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Knorm = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">Knorm</span><span class=\"p\">,))</span>\n    <span class=\"n\">qfx2_idx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">qfx2_vecs</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">special</span><span class=\"p\">:</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n        <span class=\"c1\"># Find a query feature with &quot;good&quot; results</span>\n        <span class=\"n\">qfx2_daid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">get_nn_aids</span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"p\">)</span>\n        <span class=\"n\">qfx2_dnid</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_nids</span><span class=\"p\">(</span><span class=\"n\">qfx2_daid</span><span class=\"p\">)</span>\n        <span class=\"n\">nid</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_nids</span><span class=\"p\">(</span><span class=\"n\">qaid</span><span class=\"p\">)</span>\n\n        <span class=\"c1\">#slice_ = slice(None)</span>\n        <span class=\"n\">slice_</span> <span class=\"o\">=</span> <span class=\"nb\">slice</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">K</span> <span class=\"o\">+</span> <span class=\"n\">Knorm</span><span class=\"p\">)</span>\n        <span class=\"n\">flags</span> <span class=\"o\">=</span> <span class=\"n\">qfx2_dnid</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"n\">slice_</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span> <span class=\"o\">==</span> <span class=\"n\">nid</span>\n        <span class=\"n\">flags</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">logical_and</span><span class=\"p\">(</span><span class=\"n\">flags</span><span class=\"p\">,</span> <span class=\"n\">qfx2_daid</span><span class=\"p\">[:,</span> <span class=\"n\">slice_</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">qaid</span><span class=\"p\">)</span>\n        <span class=\"n\">flags_first</span> <span class=\"o\">=</span> <span class=\"n\">flags</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"n\">K</span><span class=\"p\">]</span>\n        <span class=\"n\">flags_last</span> <span class=\"o\">=</span> <span class=\"n\">flags</span><span class=\"p\">[:,</span> <span class=\"n\">K</span><span class=\"p\">:]</span>\n        <span class=\"n\">num_gt_matches</span> <span class=\"o\">=</span> <span class=\"n\">flags_first</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">flags_last</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;num_gt_matches = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">num_gt_matches</span><span class=\"p\">,))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">num_gt_matches</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">())</span>\n        <span class=\"n\">has_good_num</span> <span class=\"o\">=</span> <span class=\"n\">num_gt_matches</span> <span class=\"o\">&gt;=</span> <span class=\"n\">num_gt_matches</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n        <span class=\"n\">candidate_qfxs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">has_good_num</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"n\">cand_nids</span> <span class=\"o\">=</span> <span class=\"n\">qfx2_dnid</span><span class=\"p\">[</span><span class=\"n\">candidate_qfxs</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"n\">slice_</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span>\n        <span class=\"n\">cand_flags</span> <span class=\"o\">=</span> <span class=\"n\">cand_nids</span> <span class=\"o\">==</span> <span class=\"n\">nid</span>\n        <span class=\"n\">cand_dist</span> <span class=\"o\">=</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">[</span><span class=\"n\">candidate_qfxs</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"n\">slice_</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span>\n        <span class=\"n\">cand_dist_gt</span> <span class=\"o\">=</span> <span class=\"n\">cand_dist</span> <span class=\"o\">*</span> <span class=\"n\">cand_flags</span>\n        <span class=\"n\">cand_dist_gf</span> <span class=\"o\">=</span> <span class=\"n\">cand_dist</span> <span class=\"o\">*</span> <span class=\"o\">~</span><span class=\"n\">cand_flags</span>\n        <span class=\"n\">cand_score</span> <span class=\"o\">=</span> <span class=\"n\">cand_dist_gt</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">cand_dist_gf</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">top_candxs</span> <span class=\"o\">=</span> <span class=\"n\">cand_score</span><span class=\"o\">.</span><span class=\"n\">argsort</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;cand_nids = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">cand_nids</span><span class=\"p\">,))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;top_candxs = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">top_candxs</span><span class=\"p\">,))</span>\n\n        <span class=\"n\">cand_idx</span> <span class=\"o\">=</span> <span class=\"n\">top_candxs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"c1\">#cand_idx = ut.take_percentile(top_candxs, .1)[-1]</span>\n        <span class=\"n\">qfx</span> <span class=\"o\">=</span> <span class=\"n\">candidate_qfxs</span><span class=\"p\">[</span><span class=\"n\">cand_idx</span><span class=\"p\">]</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;qfx = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">qfx</span><span class=\"p\">,))</span>\n        <span class=\"n\">qfx2_dist</span> <span class=\"o\">=</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">[</span><span class=\"n\">qfx</span><span class=\"p\">:(</span><span class=\"n\">qfx</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n        <span class=\"n\">qfx2_idx</span> <span class=\"o\">=</span> <span class=\"n\">qfx2_idx</span><span class=\"p\">[</span><span class=\"n\">qfx</span><span class=\"p\">:(</span><span class=\"n\">qfx</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n\n    <span class=\"n\">qfx2_daid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">get_nn_aids</span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"p\">)</span>\n    <span class=\"n\">qfx2_dfx</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">get_nn_featxs</span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">qfx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_daid</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dfx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">,</span> <span class=\"n\">Knorm</span></div>\n\n\n<div class=\"viewcode-block\" id=\"show_top_featmatches\"><a class=\"viewcode-back\" href=\"../../../../ibeis.viz/#ibeis.viz.viz_nearest_descriptors.show_top_featmatches\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">show_top_featmatches</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        qreq_ (ibeis.QueryRequest):  query request object with hyper-parameters</span>\n<span class=\"sd\">        cm_list (list):</span>\n\n<span class=\"sd\">    SeeAlso:</span>\n<span class=\"sd\">        python -m ibeis --tf TestResult.draw_feat_scoresep --show --db PZ_MTEST -t best:lnbnn_on=True,lnbnn_normalizer=normlnbnn-test -a default --sephack</span>\n\n<span class=\"sd\">        python -m ibeis --tf TestResult.draw_feat_scoresep --show --db PZ_Master1 -t best:lnbnn_on=True -a timectrl --sephack</span>\n<span class=\"sd\">        python -m ibeis --tf TestResult.draw_feat_scoresep --show --db PZ_MTEST -t best:lnbnn_on=True -a default:size=30 --sephack</span>\n<span class=\"sd\">        python -m ibeis --tf TestResult.draw_feat_scoresep --show --db PZ_MTEST -t best:K=1,Knorm=5,lnbnn_on=True -a default:size=30 --sephack</span>\n<span class=\"sd\">        python -m ibeis --tf TestResult.draw_feat_scoresep --show --db PZ_MTEST -t best:K=1,Knorm=3,lnbnn_on=True -a default --sephack</span>\n\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.viz.viz_nearest_descriptors --exec-show_top_featmatches --show</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.viz.viz_nearest_descriptors import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; cm_list, qreq_ = ibeis.testdata_cmlist(defaultdb=&#39;PZ_MTEST&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                        a=[&#39;default:has_none=mother,size=30&#39;])</span>\n<span class=\"sd\">        &gt;&gt;&gt; show_top_featmatches(qreq_, cm_list)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.quit_if_noshow()</span>\n<span class=\"sd\">        &gt;&gt;&gt; import plottool as pt</span>\n<span class=\"sd\">        &gt;&gt;&gt; ut.show_if_requested()</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># for cm in cm_list:</span>\n    <span class=\"c1\">#     cm.score_annot_csum(qreq_)</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">vtool</span> <span class=\"k\">as</span> <span class=\"nn\">vt</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"k\">import</span> <span class=\"n\">partial</span>\n    <span class=\"c1\"># Stack chipmatches</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n    <span class=\"n\">infos</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">get_flat_fm_info</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">cm</span> <span class=\"ow\">in</span> <span class=\"n\">cm_list</span><span class=\"p\">]</span>\n    <span class=\"n\">flat_metadata</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">([(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">))</span>\n                          <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_stack2</span><span class=\"p\">(</span><span class=\"n\">infos</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()])</span>\n    <span class=\"n\">fsv_flat</span> <span class=\"o\">=</span> <span class=\"n\">flat_metadata</span><span class=\"p\">[</span><span class=\"s1\">&#39;fsv&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">flat_metadata</span><span class=\"p\">[</span><span class=\"s1\">&#39;fs&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">fsv_flat</span><span class=\"o\">.</span><span class=\"n\">prod</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">aids1</span> <span class=\"o\">=</span> <span class=\"n\">flat_metadata</span><span class=\"p\">[</span><span class=\"s1\">&#39;aid1&#39;</span><span class=\"p\">][:,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n    <span class=\"n\">aids2</span> <span class=\"o\">=</span> <span class=\"n\">flat_metadata</span><span class=\"p\">[</span><span class=\"s1\">&#39;aid2&#39;</span><span class=\"p\">][:,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n    <span class=\"n\">flat_metadata</span><span class=\"p\">[</span><span class=\"s1\">&#39;aid_pairs&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">([</span><span class=\"n\">aids1</span><span class=\"p\">,</span> <span class=\"n\">aids2</span><span class=\"p\">],</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Take sample of metadata</span>\n    <span class=\"n\">sortx</span> <span class=\"o\">=</span> <span class=\"n\">flat_metadata</span><span class=\"p\">[</span><span class=\"s1\">&#39;fs&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">argsort</span><span class=\"p\">()[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cm_list</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">3</span>\n    <span class=\"c1\"># num = 10</span>\n    <span class=\"n\">taker</span> <span class=\"o\">=</span> <span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">,</span> <span class=\"n\">indices</span><span class=\"o\">=</span><span class=\"n\">sortx</span><span class=\"p\">[:</span><span class=\"n\">num</span><span class=\"p\">],</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">flat_metadata_top</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">map_dict_vals</span><span class=\"p\">(</span><span class=\"n\">taker</span><span class=\"p\">,</span> <span class=\"n\">flat_metadata</span><span class=\"p\">)</span>\n    <span class=\"n\">aid1s</span><span class=\"p\">,</span> <span class=\"n\">aid2s</span><span class=\"p\">,</span> <span class=\"n\">fms</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">flat_metadata_top</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;aid1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;aid2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fm&#39;</span><span class=\"p\">])</span>\n\n    <span class=\"n\">annots</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"n\">aids</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">unique</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">((</span><span class=\"n\">aid1s</span><span class=\"p\">,</span> <span class=\"n\">aid2s</span><span class=\"p\">)))</span>\n    <span class=\"n\">annots</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">aid</span><span class=\"p\">:</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_lazy_dict</span><span class=\"p\">(</span><span class=\"n\">aid</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"p\">)</span>\n              <span class=\"k\">for</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aids</span><span class=\"p\">}</span>\n\n    <span class=\"n\">label_lists</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_match_truths</span><span class=\"p\">(</span><span class=\"n\">aid1s</span><span class=\"p\">,</span> <span class=\"n\">aid2s</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">EVIDENCE_DECISION</span><span class=\"o\">.</span><span class=\"n\">POSITIVE</span>\n    <span class=\"n\">patch_size</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">extract_patches</span><span class=\"p\">(</span><span class=\"n\">annots</span><span class=\"p\">,</span> <span class=\"n\">aid</span><span class=\"p\">,</span> <span class=\"n\">fxs</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; custom_func(lazydict, key, subkeys) for multigroup_lookup &quot;&quot;&quot;</span>\n        <span class=\"n\">annot</span> <span class=\"o\">=</span> <span class=\"n\">annots</span><span class=\"p\">[</span><span class=\"n\">aid</span><span class=\"p\">]</span>\n        <span class=\"n\">kpts</span> <span class=\"o\">=</span> <span class=\"n\">annot</span><span class=\"p\">[</span><span class=\"s1\">&#39;kpts&#39;</span><span class=\"p\">]</span>\n        <span class=\"n\">rchip</span> <span class=\"o\">=</span> <span class=\"n\">annot</span><span class=\"p\">[</span><span class=\"s1\">&#39;rchip&#39;</span><span class=\"p\">]</span>\n        <span class=\"n\">kpts_m</span> <span class=\"o\">=</span> <span class=\"n\">kpts</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">fxs</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">warped_patches</span><span class=\"p\">,</span> <span class=\"n\">warped_subkpts</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">get_warped_patches</span><span class=\"p\">(</span><span class=\"n\">rchip</span><span class=\"p\">,</span> <span class=\"n\">kpts_m</span><span class=\"p\">,</span>\n                                                               <span class=\"n\">patch_size</span><span class=\"o\">=</span><span class=\"n\">patch_size</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">warped_patches</span>\n\n    <span class=\"n\">data_lists</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">multigroup_lookup</span><span class=\"p\">(</span><span class=\"n\">annots</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">aid1s</span><span class=\"p\">,</span> <span class=\"n\">aid2s</span><span class=\"p\">],</span> <span class=\"n\">fms</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">extract_patches</span><span class=\"p\">)</span>\n\n    <span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">ensureqt</span><span class=\"p\">()</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis_cnn</span>\n    <span class=\"n\">inter</span> <span class=\"o\">=</span> <span class=\"n\">ibeis_cnn</span><span class=\"o\">.</span><span class=\"n\">draw_results</span><span class=\"o\">.</span><span class=\"n\">interact_patches</span><span class=\"p\">(</span>\n        <span class=\"n\">label_lists</span><span class=\"p\">,</span> <span class=\"n\">data_lists</span><span class=\"p\">,</span> <span class=\"n\">flat_metadata_top</span><span class=\"p\">,</span> <span class=\"n\">chunck_sizes</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span>\n        <span class=\"n\">ibs</span><span class=\"o\">=</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">hack_one_per_aid</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">sortby</span><span class=\"o\">=</span><span class=\"s1\">&#39;fs&#39;</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n    <span class=\"n\">inter</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span></div>\n\n\n<span class=\"c1\">#@ut.indent_func(&#39;[show_neardesc]&#39;)</span>\n<div class=\"viewcode-block\" id=\"show_nearest_descriptors\"><a class=\"viewcode-back\" href=\"../../../../ibeis.viz/#ibeis.viz.viz_nearest_descriptors.show_nearest_descriptors\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">show_nearest_descriptors</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">qfx</span><span class=\"p\">,</span> <span class=\"n\">fnum</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n                             <span class=\"n\">qreq_</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ibs (ibeis.IBEISController): image analysis api</span>\n<span class=\"sd\">        qaid (int):  query annotation id</span>\n<span class=\"sd\">        qfx (int): query feature index</span>\n<span class=\"sd\">        fnum (int):  figure number</span>\n<span class=\"sd\">        stride (int):</span>\n<span class=\"sd\">        consecutive_distance_compare (bool):</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        # Find a good match to inspect</span>\n<span class=\"sd\">        python -m ibeis.viz.interact.interact_matches --test-testdata_match_interact --show --db PZ_MTEST --qaid 3</span>\n\n<span class=\"sd\">        # Now inspect it</span>\n<span class=\"sd\">        python -m ibeis.viz.viz_nearest_descriptors --test-show_nearest_descriptors --show --db PZ_MTEST --qaid 3 --qfx 879</span>\n<span class=\"sd\">        python -m ibeis.viz.viz_nearest_descriptors --test-show_nearest_descriptors --show</span>\n<span class=\"sd\">        python -m ibeis.viz.viz_nearest_descriptors --test-show_nearest_descriptors --db PZ_MTEST --qaid 3 --qfx 879 --diskshow --save foo.png --dpi=256</span>\n\n<span class=\"sd\">    SeeAlso:</span>\n<span class=\"sd\">        plottool.viz_featrow</span>\n<span class=\"sd\">        ~/code/plottool/plottool/viz_featrow.py</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DISABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.viz.viz_nearest_descriptors import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; import ibeis</span>\n<span class=\"sd\">        &gt;&gt;&gt; # build test data</span>\n<span class=\"sd\">        &gt;&gt;&gt; if True:</span>\n<span class=\"sd\">        &gt;&gt;&gt;     import matplotlib as mpl</span>\n<span class=\"sd\">        &gt;&gt;&gt;     from ibeis.scripts.thesis import TMP_RC</span>\n<span class=\"sd\">        &gt;&gt;&gt;     mpl.rcParams.update(TMP_RC)</span>\n<span class=\"sd\">        &gt;&gt;&gt; qreq_ = ibeis.testdata_qreq_()</span>\n<span class=\"sd\">        &gt;&gt;&gt; ibs = ibeis.opendb(&#39;PZ_MTEST&#39;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; qaid = qreq_.qaids[0]</span>\n<span class=\"sd\">        &gt;&gt;&gt; qfx = ut.get_argval(&#39;--qfx&#39;, type_=None, default=879)</span>\n<span class=\"sd\">        &gt;&gt;&gt; fnum = None</span>\n<span class=\"sd\">        &gt;&gt;&gt; stride = 5</span>\n<span class=\"sd\">        &gt;&gt;&gt; # execute function</span>\n<span class=\"sd\">        &gt;&gt;&gt; skip = False</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = show_nearest_descriptors(ibs, qaid, qfx, fnum, stride,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                   draw_chip=True,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                   draw_warped=True,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                   draw_unwarped=False,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                   draw_desc=False, qreq_=qreq_)</span>\n<span class=\"sd\">        &gt;&gt;&gt; # verify results</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">        &gt;&gt;&gt; pt.show_if_requested()</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">consecutive_distance_compare</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"n\">draw_chip</span>     <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;draw_chip&#39;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">draw_desc</span>     <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;draw_desc&#39;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">draw_warped</span>   <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;draw_warped&#39;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">draw_unwarped</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;draw_unwarped&#39;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"c1\">#skip = kwargs.get(&#39;skip&#39;, True)</span>\n    <span class=\"c1\"># Plots the nearest neighbors of a given feature (qaid, qfx)</span>\n    <span class=\"k\">if</span> <span class=\"n\">fnum</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">fnum</span> <span class=\"o\">=</span> <span class=\"n\">df2</span><span class=\"o\">.</span><span class=\"n\">next_fnum</span><span class=\"p\">()</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Flann NN query</span>\n        <span class=\"p\">(</span><span class=\"n\">qfx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_daid</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dfx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">,</span> <span class=\"n\">Knorm</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">get_annotfeat_nn_index</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">qfx</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Adds metadata to a feature match</span>\n        <span class=\"k\">def</span> <span class=\"nf\">get_extract_tuple</span><span class=\"p\">(</span><span class=\"n\">aid</span><span class=\"p\">,</span> <span class=\"n\">fx</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"n\">rchip</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chips</span><span class=\"p\">(</span><span class=\"n\">aid</span><span class=\"p\">)</span>\n            <span class=\"n\">kp</span>    <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_kpts</span><span class=\"p\">(</span><span class=\"n\">aid</span><span class=\"p\">)[</span><span class=\"n\">fx</span><span class=\"p\">]</span>\n            <span class=\"n\">sift</span>  <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_vecs</span><span class=\"p\">(</span><span class=\"n\">aid</span><span class=\"p\">)[</span><span class=\"n\">fx</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--texknormplot&#39;</span><span class=\"p\">):</span>\n                <span class=\"n\">aidstr</span> <span class=\"o\">=</span> <span class=\"n\">vh</span><span class=\"o\">.</span><span class=\"n\">get_aidstrs</span><span class=\"p\">(</span><span class=\"n\">aid</span><span class=\"p\">)</span>\n                <span class=\"n\">nidstr</span> <span class=\"o\">=</span> <span class=\"n\">vh</span><span class=\"o\">.</span><span class=\"n\">get_nidstrs</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_nids</span><span class=\"p\">(</span><span class=\"n\">aid</span><span class=\"p\">))</span>\n                <span class=\"n\">id_str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39; &#39;</span> <span class=\"o\">+</span> <span class=\"n\">aidstr</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; &#39;</span> <span class=\"o\">+</span> <span class=\"n\">nidstr</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; fx=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">fx</span><span class=\"p\">,)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">id_str</span> <span class=\"o\">=</span> <span class=\"n\">nidstr</span> <span class=\"o\">=</span> <span class=\"n\">aidstr</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n            <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n            <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">is_texmode</span><span class=\"p\">():</span>\n                    <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">vspace</span><span class=\"si\">{1cm}</span><span class=\"s1\">&#39;</span>\n                    <span class=\"n\">info</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;Query $</span><span class=\"se\">\\\\</span><span class=\"s1\">mathbf</span><span class=\"si\">{d}</span><span class=\"s1\">_i$&#39;</span>\n                    <span class=\"n\">info</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n\\\\</span><span class=\"s1\">_&#39;</span>\n                    <span class=\"n\">info</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n\\\\</span><span class=\"s1\">_&#39;</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">id_str</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">:</span>\n                        <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Query: </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">id_str</span><span class=\"p\">,)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Query&#39;</span>\n                <span class=\"n\">type_</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Query&#39;</span>\n            <span class=\"k\">elif</span> <span class=\"n\">k</span> <span class=\"o\">&lt;</span> <span class=\"n\">K</span><span class=\"p\">:</span>\n                <span class=\"n\">type_</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Match&#39;</span>\n                <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--texknormplot&#39;</span><span class=\"p\">)</span> <span class=\"ow\">and</span>  <span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">is_texmode</span><span class=\"p\">():</span>\n                    <span class=\"c1\">#info = &#39;Match:\\n$k=%r$, $\\\\frac{||\\\\mathbf{d}_i - \\\\mathbf{d}_j||}{Z}=%.3f$&#39; % (k, qfx2_dist[0, k])</span>\n                    <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">vspace</span><span class=\"si\">{1cm}</span><span class=\"s1\">&#39;</span>\n                    <span class=\"n\">info</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;Match: $</span><span class=\"se\">\\\\</span><span class=\"s1\">mathbf</span><span class=\"si\">{d}</span><span class=\"s1\">_{j_</span><span class=\"si\">%r</span><span class=\"s1\">}$</span><span class=\"se\">\\n</span><span class=\"s1\">$</span><span class=\"se\">\\\\</span><span class=\"s1\">textrm</span><span class=\"si\">{dist}</span><span class=\"s1\">=</span><span class=\"si\">%.3f</span><span class=\"s1\">$&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">])</span>\n                    <span class=\"c1\"># info += &#39;\\n$s_{\\\\tt{LNBNN}}=%.3f$&#39; % (qfx2_dist[0, K + Knorm - 1] - qfx2_dist[0, k])</span>\n                    <span class=\"n\">info</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">$s=</span><span class=\"si\">%.3f</span><span class=\"s1\">$&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">qfx2_dist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">K</span> <span class=\"o\">+</span> <span class=\"n\">Knorm</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">])</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Match:</span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s1\">k=</span><span class=\"si\">%r</span><span class=\"s1\">, dist=</span><span class=\"si\">%.3f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">id_str</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">])</span>\n                    <span class=\"n\">info</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">LNBNN=</span><span class=\"si\">%.3f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">qfx2_dist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">K</span> <span class=\"o\">+</span> <span class=\"n\">Knorm</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">])</span>\n            <span class=\"k\">elif</span> <span class=\"n\">k</span> <span class=\"o\">&lt;</span> <span class=\"n\">Knorm</span> <span class=\"o\">+</span> <span class=\"n\">K</span><span class=\"p\">:</span>\n                <span class=\"n\">type_</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Norm&#39;</span>\n                <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--texknormplot&#39;</span><span class=\"p\">)</span> <span class=\"ow\">and</span>  <span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">is_texmode</span><span class=\"p\">():</span>\n                    <span class=\"c1\">#info = &#39;Norm: $j_%r$\\ndist=%.3f&#39; % (id_str, k, qfx2_dist[0, k])</span>\n                    <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">vspace</span><span class=\"si\">{1cm}</span><span class=\"s1\">&#39;</span>\n                    <span class=\"n\">info</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;Norm: $j_</span><span class=\"si\">%r</span><span class=\"s1\">$</span><span class=\"se\">\\n</span><span class=\"s1\">$</span><span class=\"se\">\\\\</span><span class=\"s1\">textrm</span><span class=\"si\">{dist}</span><span class=\"s1\">=</span><span class=\"si\">%.3f</span><span class=\"s1\">$&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">])</span>\n                    <span class=\"n\">info</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n\\\\</span><span class=\"s1\">_&#39;</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Norm: </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s1\">$k=</span><span class=\"si\">%r</span><span class=\"s1\">$, dist=$</span><span class=\"si\">%.3f</span><span class=\"s1\">$&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">id_str</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">])</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s1\">&#39;[viz] problem k=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">rchip</span><span class=\"p\">,</span> <span class=\"n\">kp</span><span class=\"p\">,</span> <span class=\"n\">sift</span><span class=\"p\">,</span> <span class=\"n\">fx</span><span class=\"p\">,</span> <span class=\"n\">aid</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"p\">)</span>\n\n        <span class=\"n\">extracted_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"c1\"># Remember the query sift feature</span>\n        <span class=\"n\">extracted_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">get_extract_tuple</span><span class=\"p\">(</span><span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">qfx</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n        <span class=\"n\">origsift</span> <span class=\"o\">=</span> <span class=\"n\">extracted_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"n\">skipped</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">K</span> <span class=\"o\">+</span> <span class=\"n\">Knorm</span><span class=\"p\">):</span>\n            <span class=\"c1\">#if qfx2_daid[0, k] == qaid and qfx2_dfx[0, k] == qfx:</span>\n            <span class=\"k\">if</span> <span class=\"n\">qfx2_daid</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">qaid</span><span class=\"p\">:</span>\n                <span class=\"n\">skipped</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"k\">continue</span>\n            <span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"n\">get_extract_tuple</span><span class=\"p\">(</span><span class=\"n\">qfx2_daid</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">],</span> <span class=\"n\">qfx2_dfx</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">],</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n            <span class=\"n\">extracted_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tup</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Draw the _select_ith_match plot</span>\n        <span class=\"n\">nRows</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">extracted_list</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">stride</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">stride</span> <span class=\"o\">=</span> <span class=\"n\">nRows</span>\n        <span class=\"c1\"># Draw selected feature matches</span>\n        <span class=\"n\">prevsift</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>  <span class=\"c1\"># plot offset</span>\n        <span class=\"n\">px_shift</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>  <span class=\"c1\"># plot stride shift</span>\n        <span class=\"n\">nExtracted</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">extracted_list</span><span class=\"p\">)</span>\n        <span class=\"n\">featrow_kw</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n            <span class=\"n\">draw_chip</span><span class=\"o\">=</span><span class=\"n\">draw_chip</span><span class=\"p\">,</span> <span class=\"n\">draw_desc</span><span class=\"o\">=</span><span class=\"n\">draw_desc</span><span class=\"p\">,</span> <span class=\"n\">draw_warped</span><span class=\"o\">=</span><span class=\"n\">draw_warped</span><span class=\"p\">,</span>\n            <span class=\"n\">draw_unwarped</span><span class=\"o\">=</span><span class=\"n\">draw_unwarped</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--texknormplot&#39;</span><span class=\"p\">):</span>\n            <span class=\"n\">featrow_kw</span><span class=\"p\">[</span><span class=\"s1\">&#39;ell_color&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">ORANGE</span>\n            <span class=\"n\">featrow_kw</span><span class=\"p\">[</span><span class=\"s1\">&#39;ell_linewidth&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n            <span class=\"n\">featrow_kw</span><span class=\"p\">[</span><span class=\"s1\">&#39;arm1_lw&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">.</span><span class=\"mi\">5</span>\n            <span class=\"n\">featrow_kw</span><span class=\"p\">[</span><span class=\"s1\">&#39;stroke&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">for</span> <span class=\"n\">listx</span><span class=\"p\">,</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">extracted_list</span><span class=\"p\">):</span>\n            <span class=\"p\">(</span><span class=\"n\">rchip</span><span class=\"p\">,</span> <span class=\"n\">kp</span><span class=\"p\">,</span> <span class=\"n\">sift</span><span class=\"p\">,</span> <span class=\"n\">fx</span><span class=\"p\">,</span> <span class=\"n\">aid</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">tup</span>\n            <span class=\"k\">if</span> <span class=\"n\">listx</span> <span class=\"o\">%</span> <span class=\"n\">stride</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Create a temporary nRows and fnum in case we are splitting</span>\n                <span class=\"c1\"># up nearest neighbors into separate figures with stride</span>\n                <span class=\"n\">_fnum</span> <span class=\"o\">=</span> <span class=\"n\">fnum</span> <span class=\"o\">+</span> <span class=\"n\">listx</span>\n                <span class=\"n\">_nRows</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">nExtracted</span> <span class=\"o\">-</span> <span class=\"n\">listx</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"p\">)</span>\n                <span class=\"n\">px_shift</span> <span class=\"o\">=</span> <span class=\"n\">px</span>\n                <span class=\"n\">df2</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">fnum</span><span class=\"o\">=</span><span class=\"n\">_fnum</span><span class=\"p\">,</span> <span class=\"n\">docla</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">doclf</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">px_</span> <span class=\"o\">=</span> <span class=\"n\">px</span> <span class=\"o\">-</span> <span class=\"n\">px_shift</span>\n            <span class=\"n\">px</span> <span class=\"o\">=</span> <span class=\"n\">draw_feat_row</span><span class=\"p\">(</span><span class=\"n\">rchip</span><span class=\"p\">,</span> <span class=\"n\">fx</span><span class=\"p\">,</span> <span class=\"n\">kp</span><span class=\"p\">,</span> <span class=\"n\">sift</span><span class=\"p\">,</span> <span class=\"n\">_fnum</span><span class=\"p\">,</span> <span class=\"n\">_nRows</span><span class=\"p\">,</span> <span class=\"n\">px</span><span class=\"o\">=</span><span class=\"n\">px_</span><span class=\"p\">,</span>\n                               <span class=\"n\">prevsift</span><span class=\"o\">=</span><span class=\"n\">prevsift</span><span class=\"p\">,</span> <span class=\"n\">origsift</span><span class=\"o\">=</span><span class=\"n\">origsift</span><span class=\"p\">,</span> <span class=\"n\">aid</span><span class=\"o\">=</span><span class=\"n\">aid</span><span class=\"p\">,</span>\n                               <span class=\"n\">info</span><span class=\"o\">=</span><span class=\"n\">info</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"n\">type_</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">featrow_kw</span><span class=\"p\">)</span>\n\n            <span class=\"n\">px</span> <span class=\"o\">+=</span> <span class=\"n\">px_shift</span>\n            <span class=\"k\">if</span> <span class=\"n\">prevsift</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">consecutive_distance_compare</span><span class=\"p\">:</span>\n                <span class=\"n\">prevsift</span> <span class=\"o\">=</span> <span class=\"n\">sift</span>\n\n        <span class=\"c1\"># df2.adjust_subplots(hspace=.85, wspace=0, top=.95, bottom=.087, left=.05, right=.95)</span>\n\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[viz] Error in show nearest descriptors&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">)</span>\n        <span class=\"k\">raise</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.viz.viz_nearest_descriptors</span>\n<span class=\"sd\">        python -m ibeis.viz.viz_nearest_descriptors --allexamples</span>\n<span class=\"sd\">        python -m ibeis.viz.viz_nearest_descriptors --allexamples --noface --nosrc</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/viz/viz_nearest_descriptors", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}