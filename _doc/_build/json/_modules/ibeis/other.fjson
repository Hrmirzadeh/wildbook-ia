{"parents": [{"link": "../../", "title": "Module code"}, {"link": "../", "title": "ibeis"}], "title": "ibeis.other", "body": "<h1>Source code for ibeis.other</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"c1\"># Autogenerated on 18:39:13 2016/02/22</span>\n<span class=\"c1\"># flake8: noqa</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.other</span> <span class=\"k\">import</span> <span class=\"n\">dbinfo</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.other</span> <span class=\"k\">import</span> <span class=\"n\">duct_tape</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.other</span> <span class=\"k\">import</span> <span class=\"n\">detectgrave</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.other</span> <span class=\"k\">import</span> <span class=\"n\">detectcore</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.other</span> <span class=\"k\">import</span> <span class=\"n\">detectfuncs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.other</span> <span class=\"k\">import</span> <span class=\"n\">detecttrain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.other</span> <span class=\"k\">import</span> <span class=\"n\">ibsfuncs</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span>\n<span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">rrr</span><span class=\"p\">,</span> <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">utool</span><span class=\"o\">.</span><span class=\"n\">inject2</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"s1\">&#39;[ibeis.other]&#39;</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"reassign_submodule_attributes\"><a class=\"viewcode-back\" href=\"../../../ibeis.other/#ibeis.other.reassign_submodule_attributes\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">reassign_submodule_attributes</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    why reloading all the modules doesnt do this I don&#39;t know</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n    <span class=\"k\">if</span> <span class=\"n\">verbose</span> <span class=\"ow\">and</span> <span class=\"s1\">&#39;--quiet&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;dev reimport&#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Self import</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis.other</span>\n    <span class=\"c1\"># Implicit reassignment.</span>\n    <span class=\"n\">seen_</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">([])</span>\n    <span class=\"k\">for</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"n\">IMPORT_TUPLES</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tup</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span> <span class=\"ow\">and</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span>\n            <span class=\"k\">continue</span>  <span class=\"c1\"># dont import package names</span>\n        <span class=\"n\">submodname</span><span class=\"p\">,</span> <span class=\"n\">fromimports</span> <span class=\"o\">=</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"n\">submod</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"n\">submodname</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">attr</span> <span class=\"ow\">in</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"n\">submod</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">attr</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;_&#39;</span><span class=\"p\">):</span>\n                <span class=\"k\">continue</span>\n            <span class=\"k\">if</span> <span class=\"n\">attr</span> <span class=\"ow\">in</span> <span class=\"n\">seen_</span><span class=\"p\">:</span>\n                <span class=\"c1\"># This just holds off bad behavior</span>\n                <span class=\"c1\"># but it does mimic normal util_import behavior</span>\n                <span class=\"c1\"># which is good</span>\n                <span class=\"k\">continue</span>\n            <span class=\"n\">seen_</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">attr</span><span class=\"p\">)</span>\n            <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"n\">attr</span><span class=\"p\">,</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">submod</span><span class=\"p\">,</span> <span class=\"n\">attr</span><span class=\"p\">))</span></div>\n\n\n<div class=\"viewcode-block\" id=\"reload_subs\"><a class=\"viewcode-back\" href=\"../../../ibeis.other/#ibeis.other.reload_subs\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">reload_subs</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Reloads ibeis.other and submodules &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">verbose</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Reloading submodules&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">rrr</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wrap_fbrrr</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"nf\">fbrrr</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"sd\">&quot;&quot;&quot; fallback reload &quot;&quot;&quot;</span>\n            <span class=\"k\">if</span> <span class=\"n\">verbose</span><span class=\"p\">:</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;No fallback relaod for mod=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"p\">,))</span>\n            <span class=\"c1\"># Breaks ut.Pref (which should be depricated anyway)</span>\n            <span class=\"c1\"># import imp</span>\n            <span class=\"c1\"># imp.reload(mod)</span>\n        <span class=\"k\">return</span> <span class=\"n\">fbrrr</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_rrr</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rrr&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">mod</span><span class=\"o\">.</span><span class=\"n\">rrr</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">wrap_fbrrr</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_reload_subs</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"p\">,</span> <span class=\"s1\">&#39;reload_subs&#39;</span><span class=\"p\">,</span> <span class=\"n\">wrap_fbrrr</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"p\">))</span>\n    <span class=\"n\">get_rrr</span><span class=\"p\">(</span><span class=\"n\">dbinfo</span><span class=\"p\">)(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"n\">get_rrr</span><span class=\"p\">(</span><span class=\"n\">duct_tape</span><span class=\"p\">)(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"n\">get_rrr</span><span class=\"p\">(</span><span class=\"n\">detectfuncs</span><span class=\"p\">)(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"n\">get_rrr</span><span class=\"p\">(</span><span class=\"n\">detectcore</span><span class=\"p\">)(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"n\">get_rrr</span><span class=\"p\">(</span><span class=\"n\">detectgrave</span><span class=\"p\">)(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"n\">get_rrr</span><span class=\"p\">(</span><span class=\"n\">detecttrain</span><span class=\"p\">)(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"n\">get_rrr</span><span class=\"p\">(</span><span class=\"n\">ibsfuncs</span><span class=\"p\">)(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"n\">rrr</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"c1\"># hackish way of propogating up the new reloaded submodule attributes</span>\n        <span class=\"n\">reassign_submodule_attributes</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">)</span></div>\n<span class=\"n\">rrrr</span> <span class=\"o\">=</span> <span class=\"n\">reload_subs</span>\n\n<span class=\"n\">IMPORT_TUPLES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;dbinfo&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;duct_tape&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;detectfuncs&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;detectcore&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;detectgrave&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;detecttrain&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">&#39;ibsfuncs&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Regen Command:</span>\n<span class=\"sd\">    cd /home/joncrall/code/ibeis/ibeis/other</span>\n<span class=\"sd\">    makeinit.py --modname=ibeis.other</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n</pre></div>", "current_page_name": "_modules/ibeis/other", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}