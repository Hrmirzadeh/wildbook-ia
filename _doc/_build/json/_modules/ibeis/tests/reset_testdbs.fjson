{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}], "title": "ibeis.tests.reset_testdbs", "body": "<h1>Source code for ibeis.tests.reset_testdbs</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">downloads standard test datasets. can delete them as well</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"c1\"># TODO: ADD COPYRIGHT TAG</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.init</span> <span class=\"k\">import</span> <span class=\"n\">sysres</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ibeis.dbio</span> <span class=\"k\">import</span> <span class=\"n\">ingest_database</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"k\">import</span> <span class=\"n\">join</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"kn\">import</span> <span class=\"nn\">six</span>\n<span class=\"kn\">from</span> <span class=\"nn\">itertools</span> <span class=\"k\">import</span> <span class=\"n\">cycle</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n\n<span class=\"n\">__test__</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>  <span class=\"c1\"># This is not a test</span>\n\n\n<div class=\"viewcode-block\" id=\"testdb2_stuff\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.reset_testdbs.testdb2_stuff\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">testdb2_stuff</span><span class=\"p\">():</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    tar -zcvf testdb2.tar.gz testdb2/</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n    <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb2&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">#ibs.ensure_contributor_rowids()</span>\n\n    <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_gids</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Group gids by species</span>\n    <span class=\"n\">image_species_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_list_column</span><span class=\"p\">(</span>\n        <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">unflat_map</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_species_rowids</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_aids</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)),</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"n\">new_contributor_rowid1</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_new_temp_contributor</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_contributor_rowids</span><span class=\"p\">()))</span>\n    <span class=\"n\">new_contributor_rowid2</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_new_temp_contributor</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_contributor_rowids</span><span class=\"p\">()))</span>\n\n    <span class=\"n\">gids1</span><span class=\"p\">,</span> <span class=\"n\">gids2</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">group_items</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">image_species_list</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())</span>\n\n    <span class=\"n\">party_rowids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_party</span><span class=\"p\">([</span><span class=\"s1\">&#39;TestCar1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;TestCar2&#39;</span><span class=\"p\">])</span>\n    <span class=\"n\">partyid1</span><span class=\"p\">,</span> <span class=\"n\">partyid2</span> <span class=\"o\">=</span> <span class=\"n\">party_rowids</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_image_contributor_rowid</span><span class=\"p\">(</span><span class=\"n\">gids1</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">new_contributor_rowid1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gids1</span><span class=\"p\">))</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_image_contributor_rowid</span><span class=\"p\">(</span><span class=\"n\">gids2</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">new_contributor_rowid2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gids2</span><span class=\"p\">))</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_image_party_rowids</span><span class=\"p\">(</span><span class=\"n\">gids1</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">partyid1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gids1</span><span class=\"p\">))</span>\n    <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">set_image_party_rowids</span><span class=\"p\">(</span><span class=\"n\">gids2</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">partyid2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gids2</span><span class=\"p\">))</span></div>\n\n    <span class=\"c1\">#image_contributor_rowid_list = ibs.get_image_contributor_rowid(gid_list)</span>\n\n\n<div class=\"viewcode-block\" id=\"get_testdata_dir\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.reset_testdbs.get_testdata_dir\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_testdata_dir</span><span class=\"p\">(</span><span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Gets test img directory and downloads it if it doesn&#39;t exist</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">testdata_map</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;https://cthulhu.dyn.wildme.io/public/data/testdata.zip&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">zipped_testdata_url</span> <span class=\"o\">=</span> <span class=\"n\">testdata_map</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n    <span class=\"n\">testdata_dir</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">grab_zipped_url</span><span class=\"p\">(</span><span class=\"n\">zipped_testdata_url</span><span class=\"p\">,</span> <span class=\"n\">ensure</span><span class=\"o\">=</span><span class=\"n\">ensure</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">testdata_dir</span></div>\n\n\n<span class=\"c1\"># Convert stanadardized names to true names</span>\n<span class=\"n\">TEST_DBNAMES_MAP</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;nauts&#39;</span><span class=\"p\">:</span>         <span class=\"s1\">&#39;NAUT_test&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;mtest&#39;</span><span class=\"p\">:</span>         <span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;testdb0&#39;</span><span class=\"p\">:</span>       <span class=\"s1\">&#39;testdb0&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">:</span>       <span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;testdb2&#39;</span><span class=\"p\">:</span>       <span class=\"s1\">&#39;testdb2&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;testdb_guiall&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;testdb_guiall&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;wds&#39;</span><span class=\"p\">:</span>           <span class=\"s1\">&#39;wd_peter2&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n\n<div class=\"viewcode-block\" id=\"delete_dbdir\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.reset_testdbs.delete_dbdir\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">delete_dbdir</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">):</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">get_workdir</span><span class=\"p\">(),</span> <span class=\"n\">dbname</span><span class=\"p\">),</span> <span class=\"n\">ignore_errors</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ensure_smaller_testingdbs\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.reset_testdbs.ensure_smaller_testingdbs\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">ensure_smaller_testingdbs</span><span class=\"p\">():</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Makes the smaller test databases</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">make_testdb0</span><span class=\"p\">():</span>\n        <span class=\"sd\">&quot;&quot;&quot; makes testdb0 &quot;&quot;&quot;</span>\n        <span class=\"k\">def</span> <span class=\"nf\">get_test_gpaths</span><span class=\"p\">(</span><span class=\"n\">ndata</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"c1\"># Read ndata from args or command line</span>\n            <span class=\"sd\">&quot;&quot;&quot; DEPRICATE &quot;&quot;&quot;</span>\n            <span class=\"n\">ndata_arg</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argval</span><span class=\"p\">(</span><span class=\"s1\">&#39;--ndata&#39;</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">help_</span><span class=\"o\">=</span><span class=\"s1\">&#39;use --ndata to specify bigger data&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">ndata_arg</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">ndata</span> <span class=\"o\">=</span> <span class=\"n\">ndata_arg</span>\n            <span class=\"n\">imgdir</span> <span class=\"o\">=</span> <span class=\"n\">get_testdata_dir</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n            <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">list_images</span><span class=\"p\">(</span><span class=\"n\">imgdir</span><span class=\"p\">,</span> <span class=\"n\">full</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)))</span>\n            <span class=\"c1\"># Get only the gpaths of certain names</span>\n            <span class=\"k\">if</span> <span class=\"n\">names</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">gpath</span> <span class=\"k\">for</span> <span class=\"n\">gpath</span> <span class=\"ow\">in</span> <span class=\"n\">gpath_list</span> <span class=\"k\">if</span>\n                              <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">basename_noext</span><span class=\"p\">(</span><span class=\"n\">gpath</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">]</span>\n            <span class=\"c1\"># Get a some number of test images</span>\n            <span class=\"k\">if</span> <span class=\"n\">ndata</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">gpath_cycle</span> <span class=\"o\">=</span> <span class=\"n\">cycle</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">PY2</span><span class=\"p\">:</span>\n                    <span class=\"n\">gpath_list</span>  <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">gpath_cycle</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">ndata</span><span class=\"p\">)]</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">gpath_list</span>  <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">gpath_cycle</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">ndata</span><span class=\"p\">)]</span>\n            <span class=\"k\">return</span> <span class=\"n\">gpath_list</span>\n        <span class=\"n\">workdir</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">get_workdir</span><span class=\"p\">()</span>\n        <span class=\"n\">TESTDB0</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">workdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;testdb0&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">main_locals</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">dbdir</span><span class=\"o\">=</span><span class=\"n\">TESTDB0</span><span class=\"p\">,</span> <span class=\"n\">gui</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">allow_newdir</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">main_locals</span><span class=\"p\">[</span><span class=\"s1\">&#39;ibs&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">assert</span> <span class=\"n\">ibs</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">main_locals</span><span class=\"p\">)</span>\n        <span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">unixpath</span><span class=\"p\">,</span> <span class=\"n\">get_test_gpaths</span><span class=\"p\">()))</span>\n        <span class=\"c1\">#print(&#39;[RESET] gpath_list=%r&#39; % gpath_list)</span>\n        <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_images</span><span class=\"p\">(</span><span class=\"n\">gpath_list</span><span class=\"p\">)</span>  <span class=\"c1\"># NOQA</span>\n        <span class=\"n\">valid_gids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_gids</span><span class=\"p\">()</span>\n        <span class=\"n\">valid_aids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">valid_aids</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;there are more than 0 annotations in an empty database!&#39;</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">printex</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">,</span> <span class=\"n\">key_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;valid_aids&#39;</span><span class=\"p\">])</span>\n            <span class=\"k\">raise</span>\n        <span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">valid_gids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">bbox_list</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)]</span>\n        <span class=\"n\">aid</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">add_annots</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">bbox_list</span><span class=\"o\">=</span><span class=\"n\">bbox_list</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"c1\">#print(&#39;[RESET] NEW RID=%r&#39; % aid)</span>\n        <span class=\"n\">aids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_aids</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">assert</span> <span class=\"n\">aid</span> <span class=\"ow\">in</span> <span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;bad annotation adder: aid = </span><span class=\"si\">%r</span><span class=\"s1\">, aids = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">aid</span><span class=\"p\">,</span> <span class=\"n\">aids</span><span class=\"p\">))</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">printex</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">,</span> <span class=\"n\">key_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;aid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;aids&#39;</span><span class=\"p\">])</span>\n            <span class=\"k\">raise</span>\n\n    <span class=\"n\">get_testdata_dir</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">checkpath</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">get_workdir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;testdb0&#39;</span><span class=\"p\">),</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n\\n</span><span class=\"s2\">MAKE TESTDB0</span><span class=\"se\">\\n\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">make_testdb0</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">checkpath</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">get_workdir</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">),</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n\\n</span><span class=\"s2\">MAKE TESTDB1</span><span class=\"se\">\\n\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">ingest_database</span><span class=\"o\">.</span><span class=\"n\">ingest_standard_database</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"reset_testdbs\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.reset_testdbs.reset_testdbs\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">reset_testdbs</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Step 0) Parse Args</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n    <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">ENABLE_WILDBOOK_SIGNAL</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"n\">default_args</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;reset_&#39;</span> <span class=\"o\">+</span> <span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n                    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">iterkeys</span><span class=\"p\">(</span><span class=\"n\">TEST_DBNAMES_MAP</span><span class=\"p\">)}</span>\n    <span class=\"n\">default_args</span><span class=\"p\">[</span><span class=\"s1\">&#39;reset_all&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"n\">default_args</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">argdict</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">parse_dict_from_argv</span><span class=\"p\">(</span><span class=\"n\">default_args</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">itervalues</span><span class=\"p\">(</span><span class=\"n\">argdict</span><span class=\"p\">))):</span>\n        <span class=\"c1\"># Default behavior is to reset the small dbs</span>\n        <span class=\"n\">argdict</span><span class=\"p\">[</span><span class=\"s1\">&#39;reset_testdb0&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">argdict</span><span class=\"p\">[</span><span class=\"s1\">&#39;reset_testdb1&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">argdict</span><span class=\"p\">[</span><span class=\"s1\">&#39;reset_testdb_guiall&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"c1\"># Step 1) Delete DBs to be Reset</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">dbname</span> <span class=\"ow\">in</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">iteritems</span><span class=\"p\">(</span><span class=\"n\">TEST_DBNAMES_MAP</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">argdict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;reset_&#39;</span> <span class=\"o\">+</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">argdict</span><span class=\"p\">[</span><span class=\"s1\">&#39;reset_all&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">delete_dbdir</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Step 3) Ensure DBs that dont exist</span>\n    <span class=\"n\">ensure_smaller_testingdbs</span><span class=\"p\">()</span>\n    <span class=\"n\">workdir</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">get_workdir</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">checkpath</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">workdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">),</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">ensure_pz_mtest</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">checkpath</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">workdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;NAUT_test&#39;</span><span class=\"p\">),</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">ensure_nauts</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">checkpath</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">workdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wd_peter2&#39;</span><span class=\"p\">),</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">ensure_wilddogs</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">checkpath</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">workdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;testdb2&#39;</span><span class=\"p\">),</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">ensure_testdb2</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Step 4) testdb1 becomes the main database</span>\n    <span class=\"n\">workdir</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">get_workdir</span><span class=\"p\">()</span>\n    <span class=\"n\">TESTDB1</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">workdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">sysres</span><span class=\"o\">.</span><span class=\"n\">set_default_dbdir</span><span class=\"p\">(</span><span class=\"n\">TESTDB1</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"reset_mtest\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.reset_testdbs.reset_mtest\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">reset_mtest</span><span class=\"p\">():</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis --tf reset_mtest</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.tests.reset_testdbs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = reset_mtest()</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># Hack, this function does not have a utool main</span>\n    <span class=\"k\">return</span> <span class=\"n\">reset_testdbs</span><span class=\"p\">(</span><span class=\"n\">reset_mtest</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.tests.reset_testdbs</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # ENABLE_DOCTEST</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.tests.reset_testdbs import *  # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; result = reset_testdbs()</span>\n<span class=\"sd\">        &gt;&gt;&gt; # verify results</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(result)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># For windows</span>\n    <span class=\"c1\">#ibeis._preload()</span>\n    <span class=\"n\">reset_testdbs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/tests/reset_testdbs", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}