{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "ibeis"}], "title": "ibeis.tests.assert_modules", "body": "<h1>Source code for ibeis.tests.assert_modules</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Very useful script to ensure you have all the modules you need</span>\n\n<span class=\"sd\">CommandLine:</span>\n<span class=\"sd\">    python -m ibeis.tests.assert_modules</span>\n<span class=\"sd\">    python -m ibeis.tests.assert_modules --test-assert_modules --nolibdep</span>\n<span class=\"sd\">    python -m ibeis.tests.assert_modules --test-assert_modules</span>\n\n\n<span class=\"sd\">MacFix:</span>\n<span class=\"sd\">    # Remove the copy of pyrf</span>\n<span class=\"sd\">    /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/</span>\n<span class=\"sd\">    sudo rm -rf pyrf-1.0.0.dev1-py2.7.egg/</span>\n\n<span class=\"sd\">Updater For Linux:</span>\n<span class=\"sd\">    sudo pip install matplotlib --upgrade</span>\n<span class=\"sd\">    sudo pip install Pillow --upgrade</span>\n<span class=\"sd\">    sudo pip install scipy --upgrade</span>\n<span class=\"sd\">    sudo pip install numpy --upgrade</span>\n\n<span class=\"sd\">    ./super_setup.py --bootstrap --upgrade</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">functools</span>\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pkg_resources</span> <span class=\"k\">import</span> <span class=\"n\">parse_version</span>\n<span class=\"kn\">from</span> <span class=\"nn\">utool._internal.meta_util_six</span> <span class=\"k\">import</span> <span class=\"n\">get_funcname</span>\n\n<span class=\"n\">ASSERT_FUNCS</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n<span class=\"c1\">#LIB_DEP = ut.get_argflag(&#39;--nolibdep&#39;)</span>\n<span class=\"n\">LIB_DEP</span> <span class=\"o\">=</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--libdep&#39;</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"get_site_package_directories\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.get_site_package_directories\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_site_package_directories</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">site</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">six</span>\n    <span class=\"n\">sitepackages</span> <span class=\"o\">=</span> <span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">getsitepackages</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;darwin&#39;</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">PY2</span><span class=\"p\">:</span>\n            <span class=\"n\">macports_site</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages&#39;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">macports_site</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages&#39;</span>\n            <span class=\"k\">assert</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">PY2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fix this for python 3&#39;</span>\n        <span class=\"n\">sitepackages</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">macports_site</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">sitepackages</span>\n    <span class=\"k\">return</span> <span class=\"n\">sitepackages</span></div>\n\n\n<div class=\"viewcode-block\" id=\"check_alternate_installs\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.check_alternate_installs\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">check_alternate_installs</span><span class=\"p\">():</span>\n    <span class=\"s1\">&#39;/Library/Python/2.7/site-packages&#39;</span>\n\n    <span class=\"k\">pass</span></div>\n\n\n<div class=\"viewcode-block\" id=\"version_ge_target\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.version_ge_target\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">version_ge_target</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">target</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">passed</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"k\">elif</span> <span class=\"n\">version</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">passed</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">_version</span> <span class=\"o\">=</span> <span class=\"n\">version</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;.dev1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">passed</span> <span class=\"o\">=</span> <span class=\"n\">parse_version</span><span class=\"p\">(</span><span class=\"n\">_version</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"n\">parse_version</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">passed</span></div>\n\n\n<div class=\"viewcode-block\" id=\"checkinfo\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.checkinfo\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">checkinfo</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pipname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    checkinfo functions return info_dict containing __version__</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wrapper1</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Returns;</span>\n<span class=\"sd\">            tuple : passed, current_version, target, infodict, statustext, suggested_fix</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># Decorator which adds funcs to ASSERT_FUNCS</span>\n        <span class=\"k\">global</span> <span class=\"n\">ASSERT_FUNCS</span>\n        <span class=\"nd\">@functools</span><span class=\"o\">.</span><span class=\"n\">wraps</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n        <span class=\"k\">def</span> <span class=\"nf\">checkinfo_wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"n\">suggested_fix</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n            <span class=\"n\">funcname</span> <span class=\"o\">=</span> <span class=\"n\">get_funcname</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n            <span class=\"n\">packagename</span> <span class=\"o\">=</span> <span class=\"n\">funcname</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;_version&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">pipname_</span> <span class=\"o\">=</span> <span class=\"n\">pipname</span> <span class=\"k\">if</span> <span class=\"n\">pipname</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">packagename</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">infodict</span> <span class=\"o\">=</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">ImportError</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n                <span class=\"n\">infodict</span> <span class=\"o\">=</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">pipname_</span><span class=\"p\">)</span>\n                <span class=\"n\">suggested_fix</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;pip install &#39;</span> <span class=\"o\">+</span> <span class=\"n\">pipname_</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;win32&#39;</span><span class=\"p\">):</span>\n                    <span class=\"n\">suggested_fix</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;sudo &#39;</span> <span class=\"o\">+</span> <span class=\"n\">suggested_fix</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;None&#39;</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">infodict</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">formatex</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">),</span> <span class=\"n\">suggested_fix</span>\n            <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n                <span class=\"n\">infodict</span> <span class=\"o\">=</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">pipname_</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;None&#39;</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">infodict</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">formatex</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">),</span> <span class=\"s1\">&#39;Some unknown error in &#39;</span> <span class=\"o\">+</span> <span class=\"n\">packagename</span>\n            <span class=\"n\">current_version</span> <span class=\"o\">=</span> <span class=\"n\">infodict</span><span class=\"p\">[</span><span class=\"s1\">&#39;__version__&#39;</span><span class=\"p\">]</span>\n            <span class=\"c1\"># Build status text</span>\n            <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">infodict</span><span class=\"p\">,</span> <span class=\"n\">strvals</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">msg</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s</span><span class=\"s1\">: </span><span class=\"si\">%r</span><span class=\"s1\"> &gt;= (target=</span><span class=\"si\">%r</span><span class=\"s1\">)?&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">funcname</span><span class=\"p\">,</span> <span class=\"n\">current_version</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">)</span>\n            <span class=\"n\">statustext</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">msgblock</span><span class=\"p\">(</span><span class=\"n\">infodict</span><span class=\"p\">[</span><span class=\"s1\">&#39;__name__&#39;</span><span class=\"p\">],</span> <span class=\"n\">msg</span><span class=\"p\">)</span>\n            <span class=\"c1\"># Check if passed</span>\n            <span class=\"n\">passed</span> <span class=\"o\">=</span> <span class=\"n\">version_ge_target</span><span class=\"p\">(</span><span class=\"n\">current_version</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">)</span>\n            <span class=\"c1\"># Suggest possible fix</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">passed</span><span class=\"p\">:</span>\n                <span class=\"n\">suggested_fix</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;pip install &#39;</span> <span class=\"o\">+</span> <span class=\"n\">infodict</span><span class=\"p\">[</span><span class=\"s1\">&#39;__name__&#39;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; --upgrade&#39;</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;win32&#39;</span><span class=\"p\">):</span>\n                    <span class=\"n\">suggested_fix</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;sudo &#39;</span> <span class=\"o\">+</span> <span class=\"n\">suggested_fix</span>\n            <span class=\"k\">return</span> <span class=\"n\">passed</span><span class=\"p\">,</span> <span class=\"n\">current_version</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">infodict</span><span class=\"p\">,</span> <span class=\"n\">statustext</span><span class=\"p\">,</span> <span class=\"n\">suggested_fix</span>\n        <span class=\"n\">ASSERT_FUNCS</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">checkinfo_wrapper</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">checkinfo_wrapper</span>\n    <span class=\"k\">return</span> <span class=\"n\">wrapper1</span></div>\n\n\n<div class=\"viewcode-block\" id=\"module_stdinfo_dict\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.module_stdinfo_dict\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">,</span> <span class=\"n\">versionattr</span><span class=\"o\">=</span><span class=\"s1\">&#39;__version__&#39;</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">libdep</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"c1\">#if module is None:</span>\n    <span class=\"c1\">#    module = object</span>\n    <span class=\"n\">infodict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;__version__&#39;</span><span class=\"p\">:</span> <span class=\"n\">version</span> <span class=\"k\">if</span> <span class=\"n\">module</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">version</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">,</span> <span class=\"n\">versionattr</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;__name__&#39;</span><span class=\"p\">:</span> <span class=\"n\">name</span> <span class=\"k\">if</span> <span class=\"n\">module</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">,</span> <span class=\"s1\">&#39;__name__&#39;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;__file__&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;None&#39;</span> <span class=\"k\">if</span> <span class=\"n\">module</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">,</span> <span class=\"s1\">&#39;__file__&#39;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"n\">libdep</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">infodict</span><span class=\"p\">[</span><span class=\"s1\">&#39;libdep&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">libdep</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">QUIET</span><span class=\"p\">:</span>\n        <span class=\"n\">infodict</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">infodict</span></div>\n\n\n<div class=\"viewcode-block\" id=\"reg_std_version_check\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.reg_std_version_check\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">reg_std_version_check</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">modname</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">checkstdmod_version</span><span class=\"p\">():</span>\n        <span class=\"n\">mod</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">import_modname</span><span class=\"p\">(</span><span class=\"n\">modname</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"p\">)</span>\n    <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">set_funcname</span><span class=\"p\">(</span><span class=\"n\">checkstdmod_version</span><span class=\"p\">,</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s</span><span class=\"s1\">_version&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">modname</span><span class=\"p\">,))</span>\n    <span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"n\">checkinfo</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">)(</span><span class=\"n\">checkstdmod_version</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">func</span></div>\n\n\n<span class=\"n\">reg_std_version_check</span><span class=\"p\">(</span><span class=\"s1\">&#39;1.5.3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pynmea2&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\">#reg_std_version_check(None, &#39;wget&#39;)</span>\n<span class=\"c1\"># reg_std_version_check(None, &#39;pygco&#39;)</span>\n<span class=\"n\">reg_std_version_check</span><span class=\"p\">(</span><span class=\"s1\">&#39;6.0.8&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pip&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">reg_std_version_check</span><span class=\"p\">(</span><span class=\"s1\">&#39;1.1.1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;utool&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">reg_std_version_check</span><span class=\"p\">(</span><span class=\"s1\">&#39;0.12.3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;skimage&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">reg_std_version_check</span><span class=\"p\">(</span><span class=\"s1\">&#39;1.1.6&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cachetools&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># @checkinfo(&#39;1.1.1&#39;)</span>\n<span class=\"c1\"># def utool_version():</span>\n<span class=\"c1\">#     import utool</span>\n<span class=\"c1\">#     return module_stdinfo_dict(utool)</span>\n\n<span class=\"c1\"># @checkinfo(&#39;1.5.3&#39;)</span>\n<span class=\"c1\"># def pynmea2_version():</span>\n<span class=\"c1\">#     # for web</span>\n<span class=\"c1\">#     import pynmea2</span>\n<span class=\"c1\">#     return module_stdinfo_dict(pynmea2)</span>\n\n<span class=\"c1\"># @checkinfo(&#39;6.0.8&#39;)</span>\n<span class=\"c1\"># def pip_version():</span>\n<span class=\"c1\">#     import pip</span>\n<span class=\"c1\">#     return module_stdinfo_dict(pip)</span>\n\n\n<div class=\"viewcode-block\" id=\"pyflann_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.pyflann_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pyflann_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">pyflann</span>\n    <span class=\"k\">if</span> <span class=\"n\">LIB_DEP</span><span class=\"p\">:</span>\n        <span class=\"n\">libdep</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">libdep</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_dynlib_dependencies</span><span class=\"p\">(</span><span class=\"n\">pyflann</span><span class=\"o\">.</span><span class=\"n\">flannlib</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">pyflann</span><span class=\"p\">,</span> <span class=\"n\">libdep</span><span class=\"o\">=</span><span class=\"n\">libdep</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"pyhesaff_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.pyhesaff_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;1.1.1&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pyhesaff_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">pyhesaff</span>\n    <span class=\"k\">if</span> <span class=\"n\">LIB_DEP</span><span class=\"p\">:</span>\n        <span class=\"n\">libdep</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">libdep</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_dynlib_dependencies</span><span class=\"p\">(</span><span class=\"n\">pyhesaff</span><span class=\"o\">.</span><span class=\"n\">__LIB_FPATH__</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">pyhesaff</span><span class=\"p\">,</span> <span class=\"n\">libdep</span><span class=\"o\">=</span><span class=\"n\">libdep</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"pyrf_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.pyrf_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;1.0.0&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pyrf_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">pyrf</span>\n    <span class=\"k\">if</span> <span class=\"n\">LIB_DEP</span><span class=\"p\">:</span>\n        <span class=\"n\">libdep</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">libdep</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_dynlib_dependencies</span><span class=\"p\">(</span><span class=\"n\">pyrf</span><span class=\"o\">.</span><span class=\"n\">RF_CLIB</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">pyrf</span><span class=\"p\">,</span> <span class=\"n\">libdep</span><span class=\"o\">=</span><span class=\"n\">libdep</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"vtool_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.vtool_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;1.0.1&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">vtool_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">vtool</span>\n    <span class=\"n\">libdep</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">if</span> <span class=\"n\">LIB_DEP</span><span class=\"p\">:</span>\n        <span class=\"n\">libdep</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">libdep</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_dynlib_dependencies</span><span class=\"p\">(</span><span class=\"n\">vtool</span><span class=\"o\">.</span><span class=\"n\">sver_c_wrapper</span><span class=\"o\">.</span><span class=\"n\">lib_fname</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">vtool</span><span class=\"p\">,</span> <span class=\"n\">libdep</span><span class=\"o\">=</span><span class=\"n\">libdep</span><span class=\"p\">)</span></div>\n\n\n<span class=\"c1\">#@checkinfo(&#39;1.1.7&#39;)</span>\n<span class=\"c1\">#@checkinfo(&#39;2.4.0&#39;)</span>\n<div class=\"viewcode-block\" id=\"pillow_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.pillow_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;3.1.0&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pillow_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"k\">import</span> <span class=\"n\">Image</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">PIL</span>\n    <span class=\"n\">pil_path</span> <span class=\"o\">=</span> <span class=\"n\">PIL</span><span class=\"o\">.</span><span class=\"n\">__path__</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">PIL</span><span class=\"o\">.</span><span class=\"n\">__path__</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;WARNING!!! THERE ARE MULTIPLE PILS! </span><span class=\"si\">%r</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"n\">PIL</span><span class=\"o\">.</span><span class=\"n\">__path__</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span>\n        <span class=\"n\">Image</span><span class=\"p\">,</span> <span class=\"n\">versionattr</span><span class=\"o\">=</span><span class=\"s1\">&#39;PILLOW_VERSION&#39;</span><span class=\"p\">,</span> <span class=\"n\">image_version</span><span class=\"o\">=</span><span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">VERSION</span><span class=\"p\">,</span> <span class=\"n\">pil_path</span><span class=\"o\">=</span><span class=\"n\">pil_path</span><span class=\"p\">)</span></div>\n\n\n<span class=\"c1\">#@checkinfo(&#39;1.3.1&#39;)</span>\n<div class=\"viewcode-block\" id=\"matplotlib_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.matplotlib_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;1.5.1&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">matplotlib_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span> <span class=\"k\">as</span> <span class=\"nn\">mpl</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">mpl</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"opencv_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.opencv_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;2.4.8&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">opencv_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n    <span class=\"c1\">#print(cv2.getBuildInformation())</span>\n    <span class=\"k\">if</span> <span class=\"n\">LIB_DEP</span><span class=\"p\">:</span>\n        <span class=\"n\">libdep</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">libdep</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_dynlib_dependencies</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"vm\">__file__</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"p\">,</span> <span class=\"n\">libdep</span><span class=\"o\">=</span><span class=\"n\">libdep</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"scipy_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.scipy_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;0.13.2&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">scipy_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">scipy</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">scipy</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"scipy_linalg_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.scipy_linalg_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;0.4.9&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">scipy_linalg_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">scipy.linalg</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">scipy</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"numpy_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.numpy_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;1.8.0&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">numpy_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"p\">)</span></div>\n\n\n<span class=\"c1\">#@checkinfo()</span>\n<div class=\"viewcode-block\" id=\"theano_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.theano_version\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">theano_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">theano</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">theano</span><span class=\"p\">)</span></div>\n\n\n<span class=\"c1\">#@checkinfo()</span>\n<div class=\"viewcode-block\" id=\"lasagne_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.lasagne_version\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">lasagne_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">lasagne</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">lasagne</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"PyQt4_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.PyQt4_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;4.9.1&#39;</span><span class=\"p\">)</span>  <span class=\"c1\"># 4.10.1 on windows</span>\n<span class=\"k\">def</span> <span class=\"nf\">PyQt4_version</span><span class=\"p\">():</span>\n    <span class=\"c1\"># FIXME, pyqt5 is also ok</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">PyQt4</span> <span class=\"k\">import</span> <span class=\"n\">QtCore</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">QtCore</span><span class=\"p\">,</span> <span class=\"s1\">&#39;PYQT_VERSION_STR&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"pandas_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.pandas_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;0.15.1&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pandas_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">pandas</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">pandas</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"statsmodels_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.statsmodels_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;0.6.1&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">statsmodels_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">statsmodels</span>\n    <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"n\">statsmodels</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"o\">.</span><span class=\"n\">version</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">statsmodels</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"n\">version</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"flask_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.flask_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;0.10.1&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">flask_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">flask</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">flask</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"flask_cors_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.flask_cors_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;2.0.1&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">flask_cors_version</span><span class=\"p\">():</span>\n    <span class=\"c1\">#import flask.ext.cors as flask_cors</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">flask_cors</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">flask_cors</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"tornado_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.tornado_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"s1\">&#39;4.0.2&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">tornado_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">tornado</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">tornado</span><span class=\"p\">,</span> <span class=\"s1\">&#39;version&#39;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"pygraphviz_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.pygraphviz_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">pygraphviz_version</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">pygraphviz</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">pygraphviz</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"networkx_version\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.networkx_version\">[docs]</a><span class=\"nd\">@checkinfo</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">networkx_version</span><span class=\"p\">():</span>\n    <span class=\"c1\"># for web</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">networkx</span>\n    <span class=\"k\">return</span> <span class=\"n\">module_stdinfo_dict</span><span class=\"p\">(</span><span class=\"n\">networkx</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"check_modules_exists\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.check_modules_exists\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">check_modules_exists</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Modules in this list don&#39;t really need to be inspected</span>\n    <span class=\"c1\"># just make sure they are there</span>\n    <span class=\"n\">modname_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;simplejson&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;flask&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;parse&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;tornado&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;pandas&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;statsmodels&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">failed_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">modname</span> <span class=\"ow\">in</span> <span class=\"n\">modname_list</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">globals_</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"n\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;import &#39;</span> <span class=\"o\">+</span> <span class=\"n\">modname</span><span class=\"p\">,</span> <span class=\"n\">globals_</span><span class=\"p\">,</span> <span class=\"n\">locals_</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n            <span class=\"n\">failed_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">modname</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n            <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">printex</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Some othere error happened when importing </span><span class=\"si\">%r</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">modname</span><span class=\"p\">,),</span> <span class=\"n\">iswarning</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">failed_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">modname</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">failed_list</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;The following modules are not installed&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">failed_list</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;&#39;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"assert_modules\"><a class=\"viewcode-back\" href=\"../../../../ibeis.tests/#ibeis.tests.assert_modules.assert_modules\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">assert_modules</span><span class=\"p\">():</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    checkinfo functions return info_dict</span>\n<span class=\"sd\">    checkinfo_func</span>\n\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.tests.assert_modules --test-assert_modules</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # DOCTEST_ENABLE</span>\n<span class=\"sd\">        &gt;&gt;&gt; from ibeis.tests.assert_modules import *   # NOQA</span>\n<span class=\"sd\">        &gt;&gt;&gt; detailed_msg = assert_modules()</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(detailed_msg)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">MACHINE_NAME</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_computer_name</span><span class=\"p\">()</span>\n\n    <span class=\"n\">machine_info_lines</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"n\">machine_info_lines</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">&#39;sys.version = </span><span class=\"si\">%r</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">))</span>\n    <span class=\"n\">machine_info_lines</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">&#39;PATH = &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_path_dirs</span><span class=\"p\">()))</span>\n    <span class=\"n\">machine_info_lines</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n\\n\\n</span><span class=\"s1\">============================&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">machine_info_lines</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">&#39;Begining assert modules main&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">machine_info_lines</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">&#39;* MACHINE_NAME = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">MACHINE_NAME</span><span class=\"p\">)</span>\n    <span class=\"n\">machine_info_text</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">machine_info_lines</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">machine_info_text</span><span class=\"p\">)</span>\n\n    <span class=\"n\">statustext_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">failed_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">fix_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"n\">SHOW_STATUS</span> <span class=\"o\">=</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">((</span><span class=\"s1\">&#39;--nostatus&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--nostat&#39;</span><span class=\"p\">))</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">checkinfo_wrapper</span> <span class=\"ow\">in</span> <span class=\"n\">ASSERT_FUNCS</span><span class=\"p\">:</span>\n        <span class=\"n\">passed</span><span class=\"p\">,</span> <span class=\"n\">current_version</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">infodict</span><span class=\"p\">,</span> <span class=\"n\">statustext</span><span class=\"p\">,</span> <span class=\"n\">suggested_fix</span> <span class=\"o\">=</span> <span class=\"n\">checkinfo_wrapper</span><span class=\"p\">()</span>\n        <span class=\"n\">funcname</span> <span class=\"o\">=</span> <span class=\"n\">get_funcname</span><span class=\"p\">(</span><span class=\"n\">checkinfo_wrapper</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">SHOW_STATUS</span><span class=\"p\">:</span>\n            <span class=\"n\">statustext_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">statustext</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">passed</span><span class=\"p\">:</span>\n            <span class=\"n\">statustext_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">funcname</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; &#39;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">infodict</span><span class=\"p\">[</span><span class=\"s1\">&#39;__version__&#39;</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; passed&#39;</span><span class=\"p\">)</span>\n            <span class=\"c1\">#statustext_list.append(&#39;&#39;)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">failed_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">funcname</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; FAILED!!!&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">fix_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">suggested_fix</span><span class=\"p\">)</span>\n            <span class=\"n\">statustext_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">funcname</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; FAILED!!!&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">SHOW_STATUS</span><span class=\"p\">:</span>\n            <span class=\"n\">statustext_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">output_text</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">statustext_list</span><span class=\"p\">)</span>\n\n    <span class=\"n\">failed_text</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">failed_list</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">output_text</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">failed_text</span><span class=\"p\">)</span>\n    <span class=\"n\">check_exist_text</span> <span class=\"o\">=</span> <span class=\"n\">check_modules_exists</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">check_exist_text</span><span class=\"p\">)</span>\n    <span class=\"n\">fix_text</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fix_list</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">fix_text</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;suggested fixes:</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">fix_text</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">fix_list</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">fix_text</span><span class=\"p\">)</span>\n\n    <span class=\"n\">detailed_msg</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span>\n        <span class=\"n\">machine_info_text</span><span class=\"p\">,</span>\n        <span class=\"n\">output_text</span><span class=\"p\">,</span>\n        <span class=\"n\">failed_text</span><span class=\"p\">,</span>\n        <span class=\"n\">check_exist_text</span><span class=\"p\">,</span>\n        <span class=\"n\">fix_text</span><span class=\"p\">,</span>\n    <span class=\"p\">])</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">detailed_msg</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CommandLine:</span>\n<span class=\"sd\">        python -m ibeis.tests.assert_modules</span>\n\n<span class=\"sd\">        python -c &quot;import utool, ibeis.tests.assert_modules; utool.doctest_funcs(ibeis.tests.assert_modules, allexamples=True)&quot;</span>\n<span class=\"sd\">        python -m ibeis.tests.assert_modules --allexamples</span>\n<span class=\"sd\">        python ~/code/ibeis/ibeis/tests/assert_modules.py</span>\n\n<span class=\"sd\">        python -m ibeis.tests.assert_modules</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>  <span class=\"c1\"># for win32</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;in assert module main&#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\">#if len(sys.argv) == 1:</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;--test-&#39;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;--exec&#39;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">argv</span> <span class=\"ow\">in</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">):</span>\n        <span class=\"n\">assert_modules</span><span class=\"p\">()</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">doctest_funcs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/ibeis/tests/assert_modules", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}