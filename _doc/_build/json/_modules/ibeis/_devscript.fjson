{"parents": [{"link": "../../", "title": "Module code"}, {"link": "../", "title": "ibeis"}], "title": "ibeis._devscript", "body": "<h1>Source code for ibeis._devscript</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">absolute_import</span><span class=\"p\">,</span> <span class=\"n\">division</span><span class=\"p\">,</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n\n<div class=\"viewcode-block\" id=\"hack_argv\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis._devscript.hack_argv\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">hack_argv</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">):</span>\n    <span class=\"c1\"># HACK COMMON ARGV SYMBOLS</span>\n    <span class=\"k\">if</span> <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;--hargv=&#39;</span><span class=\"p\">):</span>\n        <span class=\"n\">hack_argv_key</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;=&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;=&#39;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n\n        <span class=\"n\">common_args</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s1\">&#39;--dpath=~/latex/crall-thesis-2017/&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;--clipwhite&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;--contextadjust&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;--dpi=256&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">common_args</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"s1\">&#39;--noshow&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span><span class=\"s1\">&#39;--diskshow&#39;</span><span class=\"p\">])</span>\n\n        <span class=\"c1\"># Figsize hacks</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">hack_argv_key</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;surf&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span>\n                <span class=\"s1\">&#39;--figsize=14,3&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--hspace=.3&#39;</span><span class=\"p\">,</span>\n                <span class=\"c1\">#&#39;--top=.8&#39;,</span>\n                <span class=\"s1\">&#39;--top=.85&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--bottom=0.18&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--left=.05&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--right=.95&#39;</span>\n            <span class=\"p\">])</span>\n        <span class=\"k\">elif</span> <span class=\"n\">hack_argv_key</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;scores&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span>\n                <span class=\"c1\">#&#39;--figsize=15,7&#39;,</span>\n                <span class=\"c1\">#&#39;--top=.8&#39;,</span>\n                <span class=\"s1\">&#39;--figsize=14,3&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--top=.8&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--hspace=.3&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--bottom=0.08&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--left=.05&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--right=.95&#39;</span>\n            <span class=\"p\">])</span>\n        <span class=\"k\">elif</span> <span class=\"n\">hack_argv_key</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;tags&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span>\n                <span class=\"c1\">#&#39;--figsize=14,3&#39;,</span>\n                <span class=\"c1\">#&#39;--top=.8&#39;,</span>\n                <span class=\"c1\">#&#39;--hspace=.3&#39;,</span>\n                <span class=\"c1\">#&#39;--bottom=0.08&#39;,</span>\n                <span class=\"c1\">#&#39;--left=.05&#39;,</span>\n                <span class=\"c1\">#&#39;--right=.95&#39;</span>\n            <span class=\"p\">])</span>\n        <span class=\"k\">elif</span> <span class=\"n\">hack_argv_key</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;expt&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span>\n                <span class=\"c1\">#&#39;--figsize=15,3&#39;,</span>\n                <span class=\"s1\">&#39;--figsize=15,3.1&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--top=.9&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--bottom=.15&#39;</span><span class=\"p\">,</span>\n            <span class=\"p\">])</span>\n        <span class=\"k\">elif</span> <span class=\"n\">hack_argv_key</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;mech&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span>\n                <span class=\"c1\">#&#39;--figsize=14,5&#39;,</span>\n                <span class=\"s1\">&#39;--figsize=14,3&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--top=.9&#39;</span><span class=\"p\">,</span>\n            <span class=\"p\">])</span>\n        <span class=\"k\">elif</span> <span class=\"n\">hack_argv_key</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;tags&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span>\n                <span class=\"s1\">&#39;--bottom=.3&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;--left=.2&#39;</span><span class=\"p\">,</span>\n            <span class=\"p\">])</span>\n\n        <span class=\"c1\"># Save location</span>\n        <span class=\"c1\">#fname_fmt = &#39;figuresX/expt_{e}_{db}_a_{a}_t_{t}&#39;</span>\n        <span class=\"n\">fname_fmt</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;figuresX/expt_</span><span class=\"si\">{label}</span><span class=\"s1\">&#39;</span>\n\n        <span class=\"c1\">#if hack_argv_key in [&#39;scores&#39;]:</span>\n        <span class=\"c1\">#    fname_fmt += &#39;_{filt}&#39;</span>\n\n        <span class=\"c1\">#if hack_argv_key in [&#39;time&#39;]:</span>\n        <span class=\"c1\">#    if not (&#39;--falsepos&#39; in sys.argv) or (&#39;--truepos&#39; in sys.argv):</span>\n        <span class=\"c1\">#        fname_fmt += &#39;_TP&#39;</span>\n        <span class=\"c1\">#    if (&#39;--falsepos&#39; in sys.argv):</span>\n        <span class=\"c1\">#        fname_fmt += &#39;_FP&#39;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">hack_argv_key</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;time&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;expt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mech&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;scores&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;surf&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tags&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span>\n                <span class=\"s1\">&#39;--save&#39;</span><span class=\"p\">,</span>\n                <span class=\"n\">fname_fmt</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;.png&#39;</span><span class=\"p\">,</span>\n            <span class=\"p\">])</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">hack_argv_key</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;time&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span>\n                <span class=\"s1\">&#39;--figsize=18,8&#39;</span><span class=\"p\">,</span>\n                <span class=\"sa\">r</span><span class=\"s1\">&#39;--width=&quot;.8\\textwidth&quot;&#39;</span><span class=\"p\">,</span>\n            <span class=\"p\">])</span></div>\n\n<span class=\"c1\">#import IPython</span>\n<span class=\"c1\">#IPython.embed()</span>\n<span class=\"k\">for</span> <span class=\"n\">arg</span> <span class=\"ow\">in</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[:]:</span>\n    <span class=\"n\">hack_argv</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"c1\">#ut.show_if_requested()</span>\n<span class=\"c1\">#sys.exit(1)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">utool.util_six</span> <span class=\"k\">import</span> <span class=\"n\">get_funcname</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"c1\">#import functools</span>\n\n<span class=\"c1\"># A list of registered development test functions</span>\n<span class=\"n\">DEVCMD_FUNCTIONS</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">DEVPRECMD_FUNCTIONS</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"c1\">#DEVCMD_FUNCTIONS2 = []</span>\n\n\n<span class=\"c1\">#def devcmd2(*args):</span>\n<span class=\"c1\">#    &quot;&quot;&quot; Decorator which registers a function as a developer command &quot;&quot;&quot;</span>\n<span class=\"c1\">#    noargs = len(args) == 1 and not isinstance(args[0], str)</span>\n<span class=\"c1\">#    if noargs:</span>\n<span class=\"c1\">#        # Function is only argument</span>\n<span class=\"c1\">#        func = args[0]</span>\n<span class=\"c1\">#        func_aliases = []</span>\n<span class=\"c1\">#    else:</span>\n<span class=\"c1\">#        func_aliases = list(args)</span>\n<span class=\"c1\">#    def closure_devcmd2(func):</span>\n<span class=\"c1\">#        global DEVCMD_FUNCTIONS2</span>\n<span class=\"c1\">#        func_aliases.extend([get_funcname(func)])</span>\n<span class=\"c1\">#        DEVCMD_FUNCTIONS2.append((tuple(func_aliases), func))</span>\n<span class=\"c1\">#        def func_wrapper(*args_, **kwargs_):</span>\n<span class=\"c1\">#            #if ut.VERBOSE:</span>\n<span class=\"c1\">#            #if ut.QUIET:</span>\n<span class=\"c1\">#            print(&#39;[DEVCMD2] &#39; + ut.func_str(func, args_, kwargs_))</span>\n<span class=\"c1\">#            return func(*args_, **kwargs_)</span>\n<span class=\"c1\">#        return func_wrapper</span>\n<span class=\"c1\">#    if noargs:</span>\n<span class=\"c1\">#        return closure_devcmd2(func)</span>\n<span class=\"c1\">#    return closure_devcmd2</span>\n\n\n<div class=\"viewcode-block\" id=\"devcmd\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis._devscript.devcmd\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">devcmd</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Decorator which registers a function as a developer command &quot;&quot;&quot;</span>\n    <span class=\"n\">noargs</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">noargs</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Function is only argument</span>\n        <span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">func_aliases</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">func_aliases</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">closure_devcmd</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n        <span class=\"k\">global</span> <span class=\"n\">DEVCMD_FUNCTIONS</span>\n        <span class=\"n\">func_aliases</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span><span class=\"n\">get_funcname</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)])</span>\n        <span class=\"n\">DEVCMD_FUNCTIONS</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">func_aliases</span><span class=\"p\">),</span> <span class=\"n\">func</span><span class=\"p\">))</span>\n        <span class=\"k\">def</span> <span class=\"nf\">func_wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args_</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs_</span><span class=\"p\">):</span>\n            <span class=\"c1\">#if ut.VERBOSE:</span>\n            <span class=\"c1\">#if ut.QUIET:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[DEVCMD] &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">func_str</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">args_</span><span class=\"p\">,</span> <span class=\"n\">kwargs_</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args_</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs_</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">func_wrapper</span>\n    <span class=\"k\">if</span> <span class=\"n\">noargs</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">closure_devcmd</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">closure_devcmd</span></div>\n\n\n<div class=\"viewcode-block\" id=\"devprecmd\"><a class=\"viewcode-back\" href=\"../../../ibeis/#ibeis._devscript.devprecmd\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">devprecmd</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Decorator which registers a function as a developer precommand &quot;&quot;&quot;</span>\n    <span class=\"n\">noargs</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">noargs</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Function is only argument</span>\n        <span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">func_aliases</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">func_aliases</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">closure_devprecmd</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n        <span class=\"k\">global</span> <span class=\"n\">DEVPRECMD_FUNCTIONS</span>\n        <span class=\"n\">func_aliases</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span><span class=\"n\">get_funcname</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)])</span>\n        <span class=\"n\">DEVPRECMD_FUNCTIONS</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">func_aliases</span><span class=\"p\">),</span> <span class=\"n\">func</span><span class=\"p\">))</span>\n        <span class=\"k\">def</span> <span class=\"nf\">func_wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args_</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs_</span><span class=\"p\">):</span>\n            <span class=\"c1\">#if ut.VERBOSE:</span>\n            <span class=\"c1\">#if ut.QUIET:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;[DEVPRECMD] &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">func_str</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">args_</span><span class=\"p\">,</span> <span class=\"n\">kwargs_</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args_</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs_</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">func_wrapper</span>\n    <span class=\"k\">if</span> <span class=\"n\">noargs</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">closure_devprecmd</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">closure_devprecmd</span></div>\n</pre></div>", "current_page_name": "_modules/ibeis/_devscript", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}