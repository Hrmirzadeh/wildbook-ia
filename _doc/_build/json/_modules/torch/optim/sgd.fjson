{"parents": [{"link": "../../../", "title": "Module code"}], "title": "torch.optim.sgd", "body": "<h1>Source code for torch.optim.sgd</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.optimizer</span> <span class=\"k\">import</span> <span class=\"n\">Optimizer</span><span class=\"p\">,</span> <span class=\"n\">required</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SGD</span><span class=\"p\">(</span><span class=\"n\">Optimizer</span><span class=\"p\">):</span>\n    <span class=\"sa\">r</span><span class=\"sd\">&quot;&quot;&quot;Implements stochastic gradient descent (optionally with momentum).</span>\n\n<span class=\"sd\">    Nesterov momentum is based on the formula from</span>\n<span class=\"sd\">    `On the importance of initialization and momentum in deep learning`__.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        params (iterable): iterable of parameters to optimize or dicts defining</span>\n<span class=\"sd\">            parameter groups</span>\n<span class=\"sd\">        lr (float): learning rate</span>\n<span class=\"sd\">        momentum (float, optional): momentum factor (default: 0)</span>\n<span class=\"sd\">        weight_decay (float, optional): weight decay (L2 penalty) (default: 0)</span>\n<span class=\"sd\">        dampening (float, optional): dampening for momentum (default: 0)</span>\n<span class=\"sd\">        nesterov (bool, optional): enables Nesterov momentum (default: False)</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; optimizer = torch.optim.SGD(model.parameters(), lr=0.1, momentum=0.9)</span>\n<span class=\"sd\">        &gt;&gt;&gt; optimizer.zero_grad()</span>\n<span class=\"sd\">        &gt;&gt;&gt; loss_fn(model(input), target).backward()</span>\n<span class=\"sd\">        &gt;&gt;&gt; optimizer.step()</span>\n\n<span class=\"sd\">    __ http://www.cs.toronto.edu/%7Ehinton/absps/momentum.pdf</span>\n\n<span class=\"sd\">    .. note::</span>\n<span class=\"sd\">        The implementation of SGD with Momentum/Nesterov subtly differs from</span>\n<span class=\"sd\">        Sutskever et. al. and implementations in some other frameworks.</span>\n\n<span class=\"sd\">        Considering the specific case of Momentum, the update can be written as</span>\n\n<span class=\"sd\">        .. math::</span>\n<span class=\"sd\">                  v = \\rho * v + g \\\\</span>\n<span class=\"sd\">                  p = p - lr * v</span>\n\n<span class=\"sd\">        where p, g, v and :math:`\\rho` denote the parameters, gradient,</span>\n<span class=\"sd\">        velocity, and momentum respectively.</span>\n\n<span class=\"sd\">        This is in contrast to Sutskever et. al. and</span>\n<span class=\"sd\">        other frameworks which employ an update of the form</span>\n\n<span class=\"sd\">        .. math::</span>\n<span class=\"sd\">             v = \\rho * v + lr * g \\\\</span>\n<span class=\"sd\">             p = p - v</span>\n\n<span class=\"sd\">        The Nesterov version is analogously modified.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"n\">required</span><span class=\"p\">,</span> <span class=\"n\">momentum</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">dampening</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                 <span class=\"n\">weight_decay</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">nesterov</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">lr</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">required</span> <span class=\"ow\">and</span> <span class=\"n\">lr</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Invalid learning rate: </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">lr</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">momentum</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Invalid momentum value: </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">momentum</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">weight_decay</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Invalid weight_decay value: </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">weight_decay</span><span class=\"p\">))</span>\n\n        <span class=\"n\">defaults</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"n\">lr</span><span class=\"p\">,</span> <span class=\"n\">momentum</span><span class=\"o\">=</span><span class=\"n\">momentum</span><span class=\"p\">,</span> <span class=\"n\">dampening</span><span class=\"o\">=</span><span class=\"n\">dampening</span><span class=\"p\">,</span>\n                        <span class=\"n\">weight_decay</span><span class=\"o\">=</span><span class=\"n\">weight_decay</span><span class=\"p\">,</span> <span class=\"n\">nesterov</span><span class=\"o\">=</span><span class=\"n\">nesterov</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">nesterov</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"n\">momentum</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span> <span class=\"ow\">or</span> <span class=\"n\">dampening</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Nesterov momentum requires a momentum and zero dampening&quot;</span><span class=\"p\">)</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">SGD</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">defaults</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__setstate__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">SGD</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">__setstate__</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">group</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">param_groups</span><span class=\"p\">:</span>\n            <span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"s1\">&#39;nesterov&#39;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">closure</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Performs a single optimization step.</span>\n\n<span class=\"sd\">        Arguments:</span>\n<span class=\"sd\">            closure (callable, optional): A closure that reevaluates the model</span>\n<span class=\"sd\">                and returns the loss.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">closure</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">closure</span><span class=\"p\">()</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">group</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">param_groups</span><span class=\"p\">:</span>\n            <span class=\"n\">weight_decay</span> <span class=\"o\">=</span> <span class=\"n\">group</span><span class=\"p\">[</span><span class=\"s1\">&#39;weight_decay&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">momentum</span> <span class=\"o\">=</span> <span class=\"n\">group</span><span class=\"p\">[</span><span class=\"s1\">&#39;momentum&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">dampening</span> <span class=\"o\">=</span> <span class=\"n\">group</span><span class=\"p\">[</span><span class=\"s1\">&#39;dampening&#39;</span><span class=\"p\">]</span>\n            <span class=\"n\">nesterov</span> <span class=\"o\">=</span> <span class=\"n\">group</span><span class=\"p\">[</span><span class=\"s1\">&#39;nesterov&#39;</span><span class=\"p\">]</span>\n\n            <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">group</span><span class=\"p\">[</span><span class=\"s1\">&#39;params&#39;</span><span class=\"p\">]:</span>\n                <span class=\"k\">if</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">grad</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                    <span class=\"k\">continue</span>\n                <span class=\"n\">d_p</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"o\">.</span><span class=\"n\">data</span>\n                <span class=\"k\">if</span> <span class=\"n\">weight_decay</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"n\">d_p</span><span class=\"o\">.</span><span class=\"n\">add_</span><span class=\"p\">(</span><span class=\"n\">weight_decay</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">momentum</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"n\">param_state</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span>\n                    <span class=\"k\">if</span> <span class=\"s1\">&#39;momentum_buffer&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">param_state</span><span class=\"p\">:</span>\n                        <span class=\"n\">buf</span> <span class=\"o\">=</span> <span class=\"n\">param_state</span><span class=\"p\">[</span><span class=\"s1\">&#39;momentum_buffer&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n                        <span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">mul_</span><span class=\"p\">(</span><span class=\"n\">momentum</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">add_</span><span class=\"p\">(</span><span class=\"n\">d_p</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">buf</span> <span class=\"o\">=</span> <span class=\"n\">param_state</span><span class=\"p\">[</span><span class=\"s1\">&#39;momentum_buffer&#39;</span><span class=\"p\">]</span>\n                        <span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">mul_</span><span class=\"p\">(</span><span class=\"n\">momentum</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">add_</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">dampening</span><span class=\"p\">,</span> <span class=\"n\">d_p</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">nesterov</span><span class=\"p\">:</span>\n                        <span class=\"n\">d_p</span> <span class=\"o\">=</span> <span class=\"n\">d_p</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">momentum</span><span class=\"p\">,</span> <span class=\"n\">buf</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">d_p</span> <span class=\"o\">=</span> <span class=\"n\">buf</span>\n\n                <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">add_</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">group</span><span class=\"p\">[</span><span class=\"s1\">&#39;lr&#39;</span><span class=\"p\">],</span> <span class=\"n\">d_p</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">loss</span>\n</pre></div>", "current_page_name": "_modules/torch/optim/sgd", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}