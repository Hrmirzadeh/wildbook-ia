{"parents": [{"link": "../ibeis/", "title": "ibeis package"}, {"link": "../ibeis.algo/", "title": "ibeis.algo package"}], "prev": {"link": "../ibeis.algo.preproc/", "title": "ibeis.algo.preproc package"}, "next": {"link": "../ibeis.algo.verif/", "title": "ibeis.algo.verif package"}, "title": "ibeis.algo.smk package", "meta": {}, "body": "<div class=\"section\" id=\"ibeis-algo-smk-package\">\n<h1>ibeis.algo.smk package<a class=\"headerlink\" href=\"#ibeis-algo-smk-package\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"submodules\">\n<h2>Submodules<a class=\"headerlink\" href=\"#submodules\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.smk.inverted_index\">\n<span id=\"ibeis-algo-smk-inverted-index-module\"></span><h2>ibeis.algo.smk.inverted_index module<a class=\"headerlink\" href=\"#module-ibeis.algo.smk.inverted_index\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnots\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.inverted_index.</code><code class=\"descname\">InvertedAnnots</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnots\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnots\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnotsExtras\" title=\"ibeis.algo.smk.inverted_index.InvertedAnnotsExtras\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.smk.inverted_index.InvertedAnnotsExtras</span></code></a></p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.smk.inverted_index InvertedAnnots \u2013show</dd>\n<dt>Ignore:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.inverted_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;Oxford&#39;</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;oxford&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                             <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:proot=smk,nAssign=1,num_words=64000&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">depc</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">aids</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">aids</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_tuple</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">inva</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">DynStruct</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">inva</span> <span class=\"o\">=</span> <span class=\"n\">InvertedAnnots</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">inva</span> <span class=\"o\">=</span> <span class=\"n\">testdata_inva</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnots.compute_gammas\">\n<code class=\"descname\">compute_gammas</code><span class=\"sig-paren\">(</span><em>alpha</em>, <em>thresh</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnots.compute_gammas\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnots.compute_gammas\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.inverted_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">inva</span> <span class=\"o\">=</span> <span class=\"n\">testdata_inva</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">inva</span><span class=\"o\">.</span><span class=\"n\">wx_to_weight</span> <span class=\"o\">=</span> <span class=\"n\">inva</span><span class=\"o\">.</span><span class=\"n\">compute_word_weights</span><span class=\"p\">(</span><span class=\"s1\">&#39;uniform&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"mf\">3.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">thresh</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gamma_list</span> <span class=\"o\">=</span> <span class=\"n\">inva</span><span class=\"o\">.</span><span class=\"n\">compute_gammas</span><span class=\"p\">(</span><span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"n\">thresh</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnots.compute_inverted_list\">\n<code class=\"descname\">compute_inverted_list</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnots.compute_inverted_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnots.compute_inverted_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnots.compute_word_weights\">\n<code class=\"descname\">compute_word_weights</code><span class=\"sig-paren\">(</span><em>method='idf'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnots.compute_word_weights\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnots.compute_word_weights\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute a per-word weight like idf</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.inverted_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">inva</span> <span class=\"o\">=</span> <span class=\"n\">testdata_inva</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">wx_to_weight</span> <span class=\"o\">=</span> <span class=\"n\">inva</span><span class=\"o\">.</span><span class=\"n\">compute_word_weights</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;wx_to_weight = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">wx_to_weight</span><span class=\"p\">,))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnots.from_depc\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_depc</code><span class=\"sig-paren\">(</span><em>depc</em>, <em>aids</em>, <em>vocab_aids</em>, <em>config</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnots.from_depc\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnots.from_depc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnots.get_annot\">\n<code class=\"descname\">get_annot</code><span class=\"sig-paren\">(</span><em>aid</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnots.get_annot\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnots.get_annot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnots.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnots.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnots.wx_list\">\n<code class=\"descname\">wx_list</code><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnots.wx_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnotsExtras\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.inverted_index.</code><code class=\"descname\">InvertedAnnotsExtras</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnotsExtras\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnotsExtras\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.get_nbytes\">\n<code class=\"descname\">get_nbytes</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnotsExtras.get_nbytes\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.get_nbytes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.get_patches\">\n<code class=\"descname\">get_patches</code><span class=\"sig-paren\">(</span><em>wx</em>, <em>ibs</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnotsExtras.get_patches\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.get_patches\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Loads the patches assigned to a particular word in this stack</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">inva</span><span class=\"o\">.</span><span class=\"n\">wx_to_aids</span> <span class=\"o\">=</span> <span class=\"n\">inva</span><span class=\"o\">.</span><span class=\"n\">compute_inverted_list</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.get_size_info\">\n<code class=\"descname\">get_size_info</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnotsExtras.get_size_info\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.get_size_info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.get_word_patch\">\n<code class=\"descname\">get_word_patch</code><span class=\"sig-paren\">(</span><em>wx</em>, <em>ibs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnotsExtras.get_word_patch\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.get_word_patch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.print_size_info\">\n<code class=\"descname\">print_size_info</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnotsExtras.print_size_info\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.print_size_info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.render_inverted_vocab\">\n<code class=\"descname\">render_inverted_vocab</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>use_data=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnotsExtras.render_inverted_vocab\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.render_inverted_vocab\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Renders the average patch of each word.\nThis is a visualization of the entire vocabulary.</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.smk.inverted_index render_inverted_vocab \u2013show\npython -m ibeis.algo.smk.inverted_index render_inverted_vocab \u2013show \u2013use-data\npython -m ibeis.algo.smk.inverted_index render_inverted_vocab \u2013show \u2013debug-depc</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.inverted_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">inva</span> <span class=\"o\">=</span> <span class=\"n\">testdata_inva</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">all_words</span> <span class=\"o\">=</span> <span class=\"n\">inva</span><span class=\"o\">.</span><span class=\"n\">render_inverted_vocab</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">qt4ensure</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">all_words</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.render_inverted_vocab_word\">\n<code class=\"descname\">render_inverted_vocab_word</code><span class=\"sig-paren\">(</span><em>wx</em>, <em>ibs</em>, <em>fnum=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedAnnotsExtras.render_inverted_vocab_word\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedAnnotsExtras.render_inverted_vocab_word\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a visualization of a visual word. This includes the average patch,\nthe SIFT-like representation of the centroid, and some of the patches that\nwere assigned to it.</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.smk.inverted_index render_inverted_vocab_word \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.inverted_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">inva</span> <span class=\"o\">=</span> <span class=\"n\">testdata_inva</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">wx_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">inva</span><span class=\"o\">.</span><span class=\"n\">wx_to_aids</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">wx</span> <span class=\"o\">=</span> <span class=\"n\">wx_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">qtensure</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fnum</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fnum</span> <span class=\"o\">=</span> <span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">ensure_fnum</span><span class=\"p\">(</span><span class=\"n\">fnum</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Interactive visualization of many words</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">wx</span> <span class=\"ow\">in</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">InteractiveIter</span><span class=\"p\">(</span><span class=\"n\">wx_list</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">word_img</span> <span class=\"o\">=</span> <span class=\"n\">inva</span><span class=\"o\">.</span><span class=\"n\">render_inverted_vocab_word</span><span class=\"p\">(</span><span class=\"n\">wx</span><span class=\"p\">,</span> <span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">fnum</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">word_img</span><span class=\"p\">,</span> <span class=\"n\">fnum</span><span class=\"o\">=</span><span class=\"n\">fnum</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;Word </span><span class=\"si\">%r</span><span class=\"s1\">/</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">wx</span><span class=\"p\">,</span> <span class=\"s1\">&#39;?&#39;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.inverted_index.InvertedIndexConfig\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.inverted_index.</code><code class=\"descname\">InvertedIndexConfig</code><span class=\"sig-paren\">(</span><em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#InvertedIndexConfig\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.InvertedIndexConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dtool.base.Config</span></code></p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.inverted_index.SingleAnnot\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.inverted_index.</code><code class=\"descname\">SingleAnnot</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#SingleAnnot\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.SingleAnnot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.SingleAnnot.Phis_flags\">\n<code class=\"descname\">Phis_flags</code><span class=\"sig-paren\">(</span><em>idxs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#SingleAnnot.Phis_flags\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.SingleAnnot.Phis_flags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>get subset of aggregated residual vectors</p>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.smk.inverted_index.SingleAnnot.from_inva\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_inva</code><span class=\"sig-paren\">(</span><em>inva</em>, <em>idx</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#SingleAnnot.from_inva\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.SingleAnnot.from_inva\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.SingleAnnot.fxs\">\n<code class=\"descname\">fxs</code><span class=\"sig-paren\">(</span><em>c</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#SingleAnnot.fxs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.SingleAnnot.fxs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.SingleAnnot.maws\">\n<code class=\"descname\">maws</code><span class=\"sig-paren\">(</span><em>c</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#SingleAnnot.maws\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.SingleAnnot.maws\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.SingleAnnot.nbytes\">\n<code class=\"descname\">nbytes</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#SingleAnnot.nbytes\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.SingleAnnot.nbytes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.SingleAnnot.nbytes_info\">\n<code class=\"descname\">nbytes_info</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#SingleAnnot.nbytes_info\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.SingleAnnot.nbytes_info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.SingleAnnot.phis_flags_list\">\n<code class=\"descname\">phis_flags_list</code><span class=\"sig-paren\">(</span><em>idxs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#SingleAnnot.phis_flags_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.SingleAnnot.phis_flags_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>get subset of non-aggregated residual vectors</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.SingleAnnot.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.SingleAnnot.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.inverted_index.SingleAnnot.to_dense\">\n<code class=\"descname\">to_dense</code><span class=\"sig-paren\">(</span><em>inva=None</em>, <em>out=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#SingleAnnot.to_dense\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.SingleAnnot.to_dense\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.smk.inverted_index.SingleAnnot.words\">\n<code class=\"descname\">words</code><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.SingleAnnot.words\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.inverted_index.compute_residual_assignments\">\n<code class=\"descclassname\">ibeis.algo.smk.inverted_index.</code><code class=\"descname\">compute_residual_assignments</code><span class=\"sig-paren\">(</span><em>depc</em>, <em>fid_list</em>, <em>vocab_id_list</em>, <em>config</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#compute_residual_assignments\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.compute_residual_assignments\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><dl class=\"first last docutils\">\n<dt>python -m ibeis.control.IBEISControl show_depc_annot_table_input </dt>\n<dd>\u2013show \u2013tablename=residuals</dd>\n</dl>\n</dd>\n<dt>Ignore:</dt>\n<dd>ibs.depc[\u2018vocab\u2019].print_table()</dd>\n<dt>Ignore:</dt>\n<dd><p class=\"first\">data = ibs.depc.get(\u2018inverted_agg_assign\u2019, ([1, 2473], <a href=\"#id1\"><span class=\"problematic\" id=\"id2\">qreq_</span></a>.daids), config=qreq_.config)\nwxs1 = data[0][0]\nwxs2 = data[1][0]</p>\n<p class=\"last\"># Lev Example\nimport ibeis\nibs = ibeis.opendb(\u2018Oxford\u2019)\ndepc = ibs.depc\ntable = depc[\u2018inverted_agg_assign\u2019]\ntable.print_table()\ntable.print_internal_info()</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.inverted_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Test depcache access</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_aids</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">depc</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num_words&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nAssign&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#input_tuple = (aid_list, [aid_list] * len(aid_list))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daids</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_tuple</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">daids</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">daids</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rowid_kw</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tablename</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;inverted_agg_assign&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">target_tablename</span> <span class=\"o\">=</span> <span class=\"n\">tablename</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_ids</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">get_parent_rowids</span><span class=\"p\">(</span><span class=\"n\">tablename</span><span class=\"p\">,</span> <span class=\"n\">input_tuple</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take_column</span><span class=\"p\">(</span><span class=\"n\">input_ids</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vocab_id_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take_column</span><span class=\"p\">(</span><span class=\"n\">input_ids</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">tablename</span><span class=\"p\">,</span> <span class=\"n\">input_tuple</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"n\">dat</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.inverted_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;Oxford&#39;</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;oxford&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:proot=smk,nAssign=1,num_words=64000&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num_words&#39;</span><span class=\"p\">:</span> <span class=\"mi\">64000</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nAssign&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;int_rvec&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">depc</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daids</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_tuple</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">daids</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">daids</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rowid_kw</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tablename</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;inverted_agg_assign&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">target_tablename</span> <span class=\"o\">=</span> <span class=\"n\">tablename</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_ids</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">get_parent_rowids</span><span class=\"p\">(</span><span class=\"n\">tablename</span><span class=\"p\">,</span> <span class=\"n\">input_tuple</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fid_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take_column</span><span class=\"p\">(</span><span class=\"n\">input_ids</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vocab_id_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take_column</span><span class=\"p\">(</span><span class=\"n\">input_ids</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.inverted_index.gen_residual_args\">\n<code class=\"descclassname\">ibeis.algo.smk.inverted_index.</code><code class=\"descname\">gen_residual_args</code><span class=\"sig-paren\">(</span><em>vocab</em>, <em>vecs_list</em>, <em>nAssign</em>, <em>int_rvec</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#gen_residual_args\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.gen_residual_args\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.inverted_index.residual_args\">\n<code class=\"descclassname\">ibeis.algo.smk.inverted_index.</code><code class=\"descname\">residual_args</code><span class=\"sig-paren\">(</span><em>vocab</em>, <em>vecs</em>, <em>nAssign</em>, <em>int_rvec</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#residual_args\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.residual_args\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.inverted_index.residual_worker\">\n<code class=\"descclassname\">ibeis.algo.smk.inverted_index.</code><code class=\"descname\">residual_worker</code><span class=\"sig-paren\">(</span><em>argtup</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#residual_worker\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.residual_worker\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.inverted_index.testdata_inva\">\n<code class=\"descclassname\">ibeis.algo.smk.inverted_index.</code><code class=\"descname\">testdata_inva</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/inverted_index/#testdata_inva\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.inverted_index.testdata_inva\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>from ibeis.algo.smk.inverted_index import *  # NOQA</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.smk.match_chips5\">\n<span id=\"ibeis-algo-smk-match-chips5-module\"></span><h2>ibeis.algo.smk.match_chips5 module<a class=\"headerlink\" href=\"#module-ibeis.algo.smk.match_chips5\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>TODO: semantic_uuids should be replaced with PCC-like hashes pertaining to\nannotation clusters if any form of name scoring is used.</p>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.match_chips5.</code><code class=\"descname\">EstimatorRequest</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.dnids\">\n<code class=\"descname\">dnids</code><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.dnids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>save dnids in <a href=\"#id3\"><span class=\"problematic\" id=\"id4\">qreq_</span></a> state</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Type:</th><td class=\"field-body\">TODO</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.ensure_nids\">\n<code class=\"descname\">ensure_nids</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.ensure_nids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.ensure_nids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.execute\">\n<code class=\"descname\">execute</code><span class=\"sig-paren\">(</span><em>qaids=None</em>, <em>prog_hook=None</em>, <em>use_cache=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.execute\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.execute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.extern_data_config2\">\n<code class=\"descname\">extern_data_config2</code><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.extern_data_config2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.extern_query_config2\">\n<code class=\"descname\">extern_query_config2</code><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.extern_query_config2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.get_cfgstr\">\n<code class=\"descname\">get_cfgstr</code><span class=\"sig-paren\">(</span><em>with_input=False</em>, <em>with_data=True</em>, <em>with_pipe=True</em>, <em>hash_pipe=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.get_cfgstr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.get_cfgstr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.get_chipmatch_fpaths\">\n<code class=\"descname\">get_chipmatch_fpaths</code><span class=\"sig-paren\">(</span><em>qaid_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.get_chipmatch_fpaths\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.get_chipmatch_fpaths\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Efficient function to get a list of chipmatch paths</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.get_data_hashid\">\n<code class=\"descname\">get_data_hashid</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.get_data_hashid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.get_data_hashid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.get_nice_parts\">\n<code class=\"descname\">get_nice_parts</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.get_nice_parts\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.get_nice_parts\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.get_pipe_cfgstr\">\n<code class=\"descname\">get_pipe_cfgstr</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.get_pipe_cfgstr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.get_pipe_cfgstr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.get_pipe_hashid\">\n<code class=\"descname\">get_pipe_hashid</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.get_pipe_hashid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.get_pipe_hashid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.get_qreq_annot_gids\">\n<code class=\"descname\">get_qreq_annot_gids</code><span class=\"sig-paren\">(</span><em>aids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.get_qreq_annot_gids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.get_qreq_annot_gids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.get_qreq_annot_nids\">\n<code class=\"descname\">get_qreq_annot_nids</code><span class=\"sig-paren\">(</span><em>aids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.get_qreq_annot_nids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.get_qreq_annot_nids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.get_query_hashid\">\n<code class=\"descname\">get_query_hashid</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.get_query_hashid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.get_query_hashid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.qnids\">\n<code class=\"descname\">qnids</code><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.qnids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>save qnids in <a href=\"#id5\"><span class=\"problematic\" id=\"id6\">qreq_</span></a> state</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Type:</th><td class=\"field-body\">TODO</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.match_chips5.EstimatorRequest.shallowcopy\">\n<code class=\"descname\">shallowcopy</code><span class=\"sig-paren\">(</span><em>qaids=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#EstimatorRequest.shallowcopy\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest.shallowcopy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a copy of qreq with the same qparams object and a subset of\nthe qx and dx objects.  used to generate chunks of vsone and vsmany\nqueries</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.match_chips5</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibeis</span><span class=\"p\">,</span> <span class=\"n\">smk</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">testdata_smk</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq2_</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">shallowcopy</span><span class=\"p\">(</span><span class=\"n\">qaids</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span> <span class=\"ow\">is</span> <span class=\"n\">qreq2_</span><span class=\"o\">.</span><span class=\"n\">daids</span><span class=\"p\">,</span> <span class=\"s1\">&#39;should be the same&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">qreq2_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">),</span> <span class=\"s1\">&#39;should be diff&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#assert qreq_.metadata is not qreq2_.metadata</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.match_chips5.execute_and_save\">\n<code class=\"descclassname\">ibeis.algo.smk.match_chips5.</code><code class=\"descname\">execute_and_save</code><span class=\"sig-paren\">(</span><em>qreq_miss</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#execute_and_save\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.execute_and_save\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.match_chips5.execute_bulk\">\n<code class=\"descclassname\">ibeis.algo.smk.match_chips5.</code><code class=\"descname\">execute_bulk</code><span class=\"sig-paren\">(</span><em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#execute_bulk\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.execute_bulk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.match_chips5.execute_singles\">\n<code class=\"descclassname\">ibeis.algo.smk.match_chips5.</code><code class=\"descname\">execute_singles</code><span class=\"sig-paren\">(</span><em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/match_chips5/#execute_singles\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.match_chips5.execute_singles\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.smk.pickle_flann\">\n<span id=\"ibeis-algo-smk-pickle-flann-module\"></span><h2>ibeis.algo.smk.pickle_flann module<a class=\"headerlink\" href=\"#module-ibeis.algo.smk.pickle_flann\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.pickle_flann.PickleFLANN\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.pickle_flann.</code><code class=\"descname\">PickleFLANN</code><span class=\"sig-paren\">(</span><em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/pickle_flann/#PickleFLANN\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.pickle_flann.PickleFLANN\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">pyflann.index.FLANN</span></code></p>\n<p>Adds the ability to pickle a flann class on a unix system.\n(Actually, pickle still wont work because we need the original point data.\nBut we can do a custom dumps and a loads)</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.smk.pickle_flann PickleFLANN</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.pickle_flann</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rng</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">RandomState</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flann</span> <span class=\"o\">=</span> <span class=\"n\">PickleFLANN</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flann</span><span class=\"o\">.</span><span class=\"n\">build_index</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">random_seed</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">index_bytes</span> <span class=\"o\">=</span> <span class=\"n\">flann</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flann2</span> <span class=\"o\">=</span> <span class=\"n\">PickleFLANN</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flann2</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">index_bytes</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">flann2</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">flann</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">flann2</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">index_bytes</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx1</span> <span class=\"o\">=</span> <span class=\"n\">flann</span><span class=\"o\">.</span><span class=\"n\">nn_index</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx2</span> <span class=\"o\">=</span> <span class=\"n\">flann2</span><span class=\"o\">.</span><span class=\"n\">nn_index</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">idx1</span> <span class=\"o\">==</span> <span class=\"n\">idx2</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.pickle_flann.PickleFLANN.dumps\">\n<code class=\"descname\">dumps</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/pickle_flann/#PickleFLANN.dumps\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.pickle_flann.PickleFLANN.dumps\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p># Make a special wordflann pickle\n<a class=\"reference external\" href=\"http://www.linuxscrew.com/2010/03/24/fastest-way-to-create-ramdisk-in-ubuntulinux/\">http://www.linuxscrew.com/2010/03/24/fastest-way-to-create-ramdisk-in-ubuntulinux/</a>\nsudo mkdir /tmp/ramdisk; chmod 777 /tmp/ramdisk\nsudo mount -t tmpfs -o size=256M tmpfs /tmp/ramdisk/\n<a class=\"reference external\" href=\"http://zeblog.co/?p=1588\">http://zeblog.co/?p=1588</a></p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.pickle_flann.PickleFLANN.loads\">\n<code class=\"descname\">loads</code><span class=\"sig-paren\">(</span><em>index_bytes</em>, <em>pts</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/pickle_flann/#PickleFLANN.loads\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.pickle_flann.PickleFLANN.loads\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.pickle_flann.Win32CompatTempFile\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.pickle_flann.</code><code class=\"descname\">Win32CompatTempFile</code><span class=\"sig-paren\">(</span><em>delete=True</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/pickle_flann/#Win32CompatTempFile\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.pickle_flann.Win32CompatTempFile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>mimics tempfile.NamedTemporaryFile but allows the file to be closed without\nbeing deleted.  This lets a second process (like the FLANN) read/write to\nthe file in a win32 system. The file is instead deleted after the\nWin32CompatTempFile object goes out of scope.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.pickle_flann</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">Win32CompatTempFile</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"s1\">&#39;10010&#39;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;data = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data1</span> <span class=\"o\">=</span> <span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;data1 = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">data1</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data2</span> <span class=\"o\">=</span> <span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;data2 = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">data2</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">data</span> <span class=\"o\">!=</span> <span class=\"n\">data1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">data</span> <span class=\"o\">==</span> <span class=\"n\">data2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_raises</span><span class=\"p\">(</span><span class=\"ne\">ValueError</span><span class=\"p\">,</span> <span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">checkpath</span><span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"n\">fpath</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.pickle_flann.Win32CompatTempFile.close\">\n<code class=\"descname\">close</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/pickle_flann/#Win32CompatTempFile.close\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.pickle_flann.Win32CompatTempFile.close\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.smk.pickle_flann.Win32CompatTempFile.name\">\n<code class=\"descname\">name</code><a class=\"headerlink\" href=\"#ibeis.algo.smk.pickle_flann.Win32CompatTempFile.name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.pickle_flann.Win32CompatTempFile.read\">\n<code class=\"descname\">read</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/pickle_flann/#Win32CompatTempFile.read\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.pickle_flann.Win32CompatTempFile.read\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.pickle_flann.Win32CompatTempFile.write\">\n<code class=\"descname\">write</code><span class=\"sig-paren\">(</span><em>data</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/pickle_flann/#Win32CompatTempFile.write\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.pickle_flann.Win32CompatTempFile.write\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.smk.script_smk\">\n<span id=\"ibeis-algo-smk-script-smk-module\"></span><h2>ibeis.algo.smk.script_smk module<a class=\"headerlink\" href=\"#module-ibeis.algo.smk.script_smk\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Results so far without SV / fancyness\nUsing standard descriptors / vocabulary</p>\n<p>proot=bow,nWords=1E6 -&gt; .594\nproot=asmk,nWords=1E6 -&gt; .529</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<ul class=\"simple\">\n<li>Results from SMK Oxford Paper (mAP)</li>\n</ul>\n<p>ASMK nAssign=1, SV=False: .78\nASMK nAssign=5, SV=False: .82</p>\n<p>Philbin with tf-idf ranking SV=False\nSIFT: .636, RootSIFT: .683 (+.05)</p>\n<p>Philbin with tf-idf ranking SV=True\nSIFT: .672, RootSIFT: .720 (+.05)</p>\n<ul class=\"simple\">\n<li>My Results (WITH BAD QUERY BBOXES)</li>\n</ul>\n<p>smk:nAssign=1,SV=True,: .58\nsmk:nAssign=1,SV=False,: .38</p>\n<p>Yesterday I got\n.22 when I fixed the bounding boxes\nAnd now I\u2019m getting\n.08 and .32 (sv=[F,T]) after deleting and redoing everything (also removing junk images)\nAfter fix of normalization I get\n.38 and .44</p>\n<p>Using oxford descriptors I get .51ish\nThen changing to root-sift I\nsmk-bow = get=0.56294936807700813\nThen using tfidf-bow2=0.56046968275748565\nasmk-gets 0.54146</p>\n<p>Going down to 8K words smk-BOW gets .153\nGoing down to 8K words tfidf-BOW gets .128\nGoing down to 8K words smk-asmk gets 0.374</p>\n<p>Ok the 65K vocab smk-asmk gets mAP=0.461\u2026\nOk, after recomputing a new 65K vocab with centered and root-sifted</p>\n<blockquote>\n<div>descriptors, using float32 precision (in most places), asmk\ngets a new map score of:\nmAP=.5275\u2026 :(\nThis is with permissive query kpts and oxford vocab.\nNext step: ensure everything is float32.\nEnsured float32\nmAP=.5279, \u2026 better but indiciative of real error</div></blockquote>\n<p>After that try again at Jegou\u2019s data.\nEnsure there are no smk algo bugs. There must be one.</p>\n<p>FINALLY!\nGot Jegou\u2019s data working.\nWith jegou percmopute oxford feats, words, and assignments\nAnd float32 version\nasmk = .78415\nbow = .545</p>\n<p>asmk got 0.78415 with float32 version\nbow got .545\nbot2 got .551</p>\n<p>vecs07, root_sift, approx assign, (either jegou or my words)\nmAP=.673</p>\n<p>Weird:\nvecs07, root_sift, exact assign,\nMaybe jegou words or maybe my words. Can\u2019t quite tell.\nMight have messed with a config.\nmAP=0.68487357885738664</p>\n<p>October 8\nStill using the same descriptors, but my own vocab with approx assign\nmAP  = 0.78032</p>\n<p>my own vocab approx assign, no center\nmap = .793</p>\n<p>The problem was minibatch params. Need higher batch size and init size.\nNeeded to modify sklearn to handle this requirement.</p>\n<p>Using my own descriptors I got 0.7460. Seems good.</p>\n<p>Now, back to the HS pipeline.\nGetting a 0.638, so there is an inconsistency.\nShould be getting .7460. Maybe I gotta root_sift it up?</p>\n<p class=\"last\">Turned off root_sift in script\ngot .769, so there is a problem in system script\nminibatch  29566/270340\u2026 rate=0.86 Hz, eta=0:00:00, total=9:44:35, wall=05:24 EST inertia: mean batch=53730.923812, ewa=53853.439903\nnow need to try turning off float32</p>\n</div>\n<dl class=\"docutils\">\n<dt>Differences Between this and SMK:</dt>\n<dd><ul class=\"first last simple\">\n<li>No RootSIFT</li>\n<li>No SIFT Centering</li>\n<li>No Independent Vocab</li>\n<li>Chip RESIZE</li>\n</ul>\n</dd>\n<dt>Differences between this and VLAD</dt>\n<dd><ul class=\"first last simple\">\n<li>residual vectors are normalized</li>\n<li>larger default vocabulary size</li>\n</ul>\n</dd>\n</dl>\n<div class=\"section\" id=\"feat-info\">\n<h3>Feat Info<a class=\"headerlink\" href=\"#feat-info\" title=\"Permalink to this headline\">\u00b6</a></h3>\n</div>\n<div class=\"section\" id=\"name-num-vecs-n-annots\">\n<h3>name     | num_vecs   | n_annots |<a class=\"headerlink\" href=\"#name-num-vecs-n-annots\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Oxford13 | 12,534,635 |          |\nOxford07 | 16,334,970 |          |\nmine1    |  8,997,955 |          |\nmine2    | 13,516,721 |   5063   |\nmine3    |  8,371,196 |   4728   |\nmine4    |  8,482,137 |   4783   |</p>\n</div>\n<div class=\"section\" id=\"cluster-algo-config\">\n<h3>Cluster Algo Config<a class=\"headerlink\" href=\"#cluster-algo-config\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>name       | algo             | init      | init_size      |  batch size  |\n==========================================================================|\nminibatch1 | minibatch kmeans | kmeans++  | num_words * 4  | 100          |\nminibatch2 | minibatch kmeans | kmeans++  | num_words * 4  | 1000         |\ngiven13    | Lloyd?           | kmeans++? | num_words * 8? | nan?         |</p>\n</div>\n<div class=\"section\" id=\"assign-algo-config\">\n<h3>Assign Algo Config<a class=\"headerlink\" href=\"#assign-algo-config\" title=\"Permalink to this headline\">\u00b6</a></h3>\n</div>\n<div class=\"section\" id=\"name-algo-trees-checks\">\n<h3>name   | algo   | trees | checks     |<a class=\"headerlink\" href=\"#name-algo-trees-checks\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>approx | kdtree |  8    | 1024       |\nexact  | linear |  nan  | nan        |\nexact  | linear |  nan  | nan        |</p>\n</div>\n<div class=\"section\" id=\"smk-results\">\n<h3>SMK Results<a class=\"headerlink\" href=\"#smk-results\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div><blockquote>\n<div><dl class=\"docutils\">\n<dt>tagid    | mAP   | train_feats | test_feats | center | rootSIFT | assign  | num_words | cluster methods | int | only_xy |</dt>\n<dd><div class=\"first last line-block\">\n<div class=\"line\">0.38  |  mine1      |   mine1    |        |          | approx  |  64000    | minibatch1      |     |         |</div>\n<div class=\"line\">0.541 |  oxford07   |   oxford07 |        |    X     | approx  |  2 ** 16  | minibatch1      |     |    X    |</div>\n<div class=\"line\">0.673 |  oxford13   |   oxford13 |   X    |    X     | approx  |  2 ** 16  | minibatch1      |     |    X    |</div>\n<div class=\"line\">0.684 |  oxford13   |   oxford13 |   X    |    X     | exact   |  2 ** 16  | minibatch1      |     |    X    |</div>\n</div>\n</dd>\n</dl>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>mybest    | 0.793 |  oxford13   |   oxford13 |        |    X     | approx  |  2 ** 16  | minibatch2      |     |    X    |</dt>\n<dd><blockquote class=\"first\">\n<div><div class=\"line-block\">\n<div class=\"line\">0.780 |  oxford13   |   oxford13 |   X    |    X     | approx  |  2 ** 16  | minibatch2      |     |    X    |</div>\n<div class=\"line\">0.788 |  paras13    |   oxford13 |   X    |    X     | approx  |  2 ** 16  | given13         |     |    X    |</div>\n</div>\n</div></blockquote>\n<p class=\"last\">allgiven | 0.784 |  paras13    |   oxford13 |   X    |    X     | given13 |  2 ** 16  | given13         |     |    X    |</p>\n</dd>\n</dl>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>reported13 | 0.781 |  paras13    |   oxford13 |   X    |    X     | given13 |  2 ** 16  | given13         |     |    X    |</dt>\n<dd><blockquote class=\"first\">\n<div></div></blockquote>\n<p class=\"last\">inhouse1 | 0.746 |     mine2   |      mine2 |        |    X     | approx  |  2 ** 16  | minibatch2      |     |    X    |\ninhouse2 | 0.769 |     mine2   |      mine2 |        |          | approx  |  2 ** 16  | minibatch2      |     |    X    |\ninhouse3 | 0.769 |     mine2   |      mine2 |        |          | approx  |  2 ** 16  | minibatch2      | X   |    X    |\ninhouse4 | 0.751 |     mine2   |      mine2 |        |          | approx  |  2 ** 16  | minibatch2      | X   |         |</p>\n</dd>\n</dl>\n<p>sysharn1   | 0.638 |     mine3   |      mine3 |        |          | approx  |  64000    | minibatch2      | X   |         |\nsysharn2   | 0.713 |     mine3   |      mine4 |        |          | approx  |  64000    | minibatch2      | X   |         |</p>\n<p>In the SMK paper they report 0.781 as shown in the table, but they also report a score of 0.820 when increasing\nthe number of features to from 12.5M to 19.2M by lowering feature detection thresholds.</p>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.script_smk.SMK\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">SMK</code><span class=\"sig-paren\">(</span><em>wx_to_weight</em>, <em>method='asmk'</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#SMK\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.SMK\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.script_smk.SMK.gamma\">\n<code class=\"descname\">gamma</code><span class=\"sig-paren\">(</span><em>X</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#SMK.gamma\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.SMK.gamma\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>gamma(X) = (M(X, X)) ** (-1/2)</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.script_smk.SMK.kernel_bow_tfidf\">\n<code class=\"descname\">kernel_bow_tfidf</code><span class=\"sig-paren\">(</span><em>X</em>, <em>Y</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#SMK.kernel_bow_tfidf\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.SMK.kernel_bow_tfidf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.script_smk.SMK.kernel_smk\">\n<code class=\"descname\">kernel_smk</code><span class=\"sig-paren\">(</span><em>X</em>, <em>Y</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#SMK.kernel_smk\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.SMK.kernel_smk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.script_smk.SMK.match_score_agg\">\n<code class=\"descname\">match_score_agg</code><span class=\"sig-paren\">(</span><em>X</em>, <em>Y</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#SMK.match_score_agg\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.SMK.match_score_agg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.script_smk.SMK.match_score_bow\">\n<code class=\"descname\">match_score_bow</code><span class=\"sig-paren\">(</span><em>X</em>, <em>Y</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#SMK.match_score_bow\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.SMK.match_score_bow\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.script_smk.SMK.match_score_sep\">\n<code class=\"descname\">match_score_sep</code><span class=\"sig-paren\">(</span><em>X</em>, <em>Y</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#SMK.match_score_sep\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.SMK.match_score_sep\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.script_smk.SMK.word_isect\">\n<code class=\"descname\">word_isect</code><span class=\"sig-paren\">(</span><em>X</em>, <em>Y</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#SMK.word_isect\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.SMK.word_isect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.script_smk.SparseVector\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">SparseVector</code><span class=\"sig-paren\">(</span><em>_dict</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#SparseVector\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.SparseVector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.script_smk.SparseVector.dot\">\n<code class=\"descname\">dot</code><span class=\"sig-paren\">(</span><em>other</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#SparseVector.dot\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.SparseVector.dot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.bow_vector\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">bow_vector</code><span class=\"sig-paren\">(</span><em>X</em>, <em>wx_to_weight</em>, <em>nwords</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#bow_vector\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.bow_vector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.check_image_sizes\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">check_image_sizes</code><span class=\"sig-paren\">(</span><em>data_uri_order</em>, <em>all_kpts</em>, <em>offset_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#check_image_sizes\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.check_image_sizes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if any keypoints go out of bounds wrt their associated images</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.compare_data\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">compare_data</code><span class=\"sig-paren\">(</span><em>Y_list_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#compare_data\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.compare_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.ensure_tf\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">ensure_tf</code><span class=\"sig-paren\">(</span><em>X</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#ensure_tf\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.ensure_tf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.get_annots_imgid\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">get_annots_imgid</code><span class=\"sig-paren\">(</span><em>_annots</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#get_annots_imgid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.get_annots_imgid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.hyrule_vocab_test\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">hyrule_vocab_test</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#hyrule_vocab_test\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.hyrule_vocab_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.kpts_inside_bbox\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">kpts_inside_bbox</code><span class=\"sig-paren\">(</span><em>kpts</em>, <em>bbox</em>, <em>only_xy=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#kpts_inside_bbox\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.kpts_inside_bbox\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.load_internal_data\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">load_internal_data</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#load_internal_data\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.load_internal_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>ibeis TestResult \u2013db Oxford         -p smk:nWords=[64000],nAssign=[1],SV=[False],can_match_sameimg=True,dim_size=None         -a oxford         \u2013dev-mode</p>\n<p>ibeis TestResult \u2013db GZ_Master1         -p smk:nWords=[64000],nAssign=[1],SV=[False],fg_on=False         -a ctrl:qmingt=2         \u2013dev-mode</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.load_ordered_annots\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">load_ordered_annots</code><span class=\"sig-paren\">(</span><em>data_uri_order</em>, <em>query_uri_order</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#load_ordered_annots\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.load_ordered_annots\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.load_oxford_2007\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">load_oxford_2007</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#load_oxford_2007\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.load_oxford_2007\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Loads data from\n<a class=\"reference external\" href=\"http://www.robots.ox.ac.uk:5000/~vgg/publications/2007/Philbin07/philbin07.pdf\">http://www.robots.ox.ac.uk:5000/~vgg/publications/2007/Philbin07/philbin07.pdf</a></p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.script_smk</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.load_oxford_2013\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">load_oxford_2013</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#load_oxford_2013\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.load_oxford_2013\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Found this data in README of SMK publication\n<a class=\"reference external\" href=\"https://hal.inria.fr/hal-00864684/document\">https://hal.inria.fr/hal-00864684/document</a>\n<a class=\"reference external\" href=\"http://people.rennes.inria.fr/Herve.Jegou/publications.html\">http://people.rennes.inria.fr/Herve.Jegou/publications.html</a>\nwith download script</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd># Download oxford13 data\ncd ~/work/Oxford\nmkdir -p smk_data_iccv_2013\ncd smk_data_iccv_2013\nwget -nH \u2013cut-dirs=4 -r -Pdata/ <a class=\"reference external\" href=\"ftp://ftp.irisa.fr/local/texmex/corpus/iccv2013/\">ftp://ftp.irisa.fr/local/texmex/corpus/iccv2013/</a></dd>\n</dl>\n<p>This dataset has 5063 images wheras 07 has 5062\nThis dataset seems to contain an extra junk image:</p>\n<blockquote>\n<div>ashmolean_000214</div></blockquote>\n<p># Remember that matlab is 1 indexed!\n# DONT FORGET TO CONVERT TO 0 INDEXING!</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.load_oxford_ibeis\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">load_oxford_ibeis</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#load_oxford_ibeis\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.load_oxford_ibeis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.make_agg_vecs\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">make_agg_vecs</code><span class=\"sig-paren\">(</span><em>X</em>, <em>words</em>, <em>fx_to_vecs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#make_agg_vecs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.make_agg_vecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.make_temporary_annot\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">make_temporary_annot</code><span class=\"sig-paren\">(</span><em>aid</em>, <em>vocab</em>, <em>wx_to_weight</em>, <em>ibs</em>, <em>config</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#make_temporary_annot\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.make_temporary_annot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.new_external_annot\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">new_external_annot</code><span class=\"sig-paren\">(</span><em>aid</em>, <em>fx_to_wxs</em>, <em>fx_to_maws</em>, <em>int_rvec</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#new_external_annot\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.new_external_annot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.oxford_conic_test\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">oxford_conic_test</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#oxford_conic_test\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.oxford_conic_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.run_asmk_script\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">run_asmk_script</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#run_asmk_script\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.run_asmk_script\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.sanity_checks\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">sanity_checks</code><span class=\"sig-paren\">(</span><em>offset_list</em>, <em>Y_list</em>, <em>query_annots</em>, <em>ibs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#sanity_checks\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.sanity_checks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.show_data_image\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">show_data_image</code><span class=\"sig-paren\">(</span><em>data_uri_order</em>, <em>i</em>, <em>offset_list</em>, <em>all_kpts</em>, <em>all_vecs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#show_data_image\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.show_data_image\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>i = 12</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.script_smk.verify_score\">\n<code class=\"descclassname\">ibeis.algo.smk.script_smk.</code><code class=\"descname\">verify_score</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/script_smk/#verify_score\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.script_smk.verify_score\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Recompute all SMK things for two annotations and compare scores.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.script_smk</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n</pre></div>\n</div>\n<p>cm.print_inspect_str(<a href=\"#id7\"><span class=\"problematic\" id=\"id8\">qreq_</span></a>)\ncm.show_single_annotmatch(<a href=\"#id9\"><span class=\"problematic\" id=\"id10\">qreq_</span></a>, daid1)\ncm.show_single_annotmatch(<a href=\"#id11\"><span class=\"problematic\" id=\"id12\">qreq_</span></a>, daid2)</p>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.smk.smk_funcs\">\n<span id=\"ibeis-algo-smk-smk-funcs-module\"></span><h2>ibeis.algo.smk.smk_funcs module<a class=\"headerlink\" href=\"#module-ibeis.algo.smk.smk_funcs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p class=\"rubric\">References</p>\n<p>Jegou\u2019s Source Code, Data, and Publications\n<a class=\"reference external\" href=\"http://people.rennes.inria.fr/Herve.Jegou/publications.html\">http://people.rennes.inria.fr/Herve.Jegou/publications.html</a></p>\n<p>To aggregate or not to aggregate: selective match kernels for image search\n<a class=\"reference external\" href=\"https://hal.inria.fr/hal-00864684/document\">https://hal.inria.fr/hal-00864684/document</a></p>\n<p>Image search with selective match kernels: aggregation across single and multiple images\n<a class=\"reference external\" href=\"http://image.ntua.gr/iva/files/Tolias_ijcv15_iasmk.pdf\">http://image.ntua.gr/iva/files/Tolias_ijcv15_iasmk.pdf</a></p>\n<p>Negative evidences and co-occurrences in image retrieval: the benefit of PCA and whitening\n<a class=\"reference external\" href=\"https://hal.inria.fr/file/index/docid/722626/filename/jegou_chum_eccv2012.pdf\">https://hal.inria.fr/file/index/docid/722626/filename/jegou_chum_eccv2012.pdf</a></p>\n<p>Revisiting the VLAD image representation\n<a class=\"reference external\" href=\"https://hal.inria.fr/file/index/docid/850249/filename/nextvlad_hal.pdf\">https://hal.inria.fr/file/index/docid/850249/filename/nextvlad_hal.pdf</a></p>\n<p>Aggregating local descriptors into a compact image representation\n<a class=\"reference external\" href=\"https://lear.inrialpes.fr/pubs/2010/JDSP10/jegou_compactimagerepresentation.pdf\">https://lear.inrialpes.fr/pubs/2010/JDSP10/jegou_compactimagerepresentation.pdf</a></p>\n<p>Large-scale image retrieval with compressed Fisher vectors\n<a class=\"reference external\" href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.401.9140&amp;rep=rep1&amp;type=pdf\">http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.401.9140&amp;rep=rep1&amp;type=pdf</a></p>\n<p>Improving Bag of Features\n<a class=\"reference external\" href=\"http://lear.inrialpes.fr/pubs/2010/JDS10a/jegou_improvingbof_preprint.pdf\">http://lear.inrialpes.fr/pubs/2010/JDS10a/jegou_improvingbof_preprint.pdf</a></p>\n<p>Lost in Quantization\n<a class=\"reference external\" href=\"http://www.robots.ox.ac.uk/~vgg/publications/papers/philbin08.ps.gz\">http://www.robots.ox.ac.uk/~vgg/publications/papers/philbin08.ps.gz</a></p>\n<p>A Context Dissimilarity Measure for Accurate and Efficient Image Search\n<a class=\"reference external\" href=\"https://lear.inrialpes.fr/pubs/2007/JHS07/jegou_cdm.pdf\">https://lear.inrialpes.fr/pubs/2007/JHS07/jegou_cdm.pdf</a></p>\n<p>Video Google: A text retrieval approach to object matching in videos\n<a class=\"reference external\" href=\"http://www.robots.ox.ac.uk/~vgg/publications/papers/sivic03.pdf\">http://www.robots.ox.ac.uk/~vgg/publications/papers/sivic03.pdf</a></p>\n<p>Hamming embedding and weak geometric consistency for large scale image search\n<a class=\"reference external\" href=\"https://lear.inrialpes.fr/pubs/2008/JDS08/jegou_hewgc08.pdf\">https://lear.inrialpes.fr/pubs/2008/JDS08/jegou_hewgc08.pdf</a></p>\n<p>Three things everyone should know to improve object retrieval\n<a class=\"reference external\" href=\"https://www.robots.ox.ac.uk/~vgg/publications/2012/Arandjelovic12/arandjelovic12.pdf\">https://www.robots.ox.ac.uk/~vgg/publications/2012/Arandjelovic12/arandjelovic12.pdf</a></p>\n<p>Object retrieval with large vocabularies and fast spatial matching\n<a class=\"reference external\" href=\"http://www.robots.ox.ac.uk:5000/~vgg/publications/2007/Philbin07/philbin07.pdf\">http://www.robots.ox.ac.uk:5000/~vgg/publications/2007/Philbin07/philbin07.pdf</a></p>\n<p>Aggregating Local Descriptors into Compact Codes\n<a class=\"reference external\" href=\"https://hal.inria.fr/file/index/docid/633013/filename/jegou_aggregate.pdf\">https://hal.inria.fr/file/index/docid/633013/filename/jegou_aggregate.pdf</a></p>\n<p>Local visual query expansion\n<a class=\"reference external\" href=\"https://hal.inria.fr/hal-00840721/PDF/RR-8325.pdf\">https://hal.inria.fr/hal-00840721/PDF/RR-8325.pdf</a></p>\n<p>Root SIFT technique\n<a class=\"reference external\" href=\"https://hal.inria.fr/hal-00688169/document\">https://hal.inria.fr/hal-00688169/document</a></p>\n<p>Fisher Kernel For Large Scale Classification\n<a class=\"reference external\" href=\"https://www.robots.ox.ac.uk/~vgg/rg/papers/peronnin_etal_ECCV10.pdf\">https://www.robots.ox.ac.uk/~vgg/rg/papers/peronnin_etal_ECCV10.pdf</a></p>\n<p>Orientation covariant aggregation of local descriptors with embeddings\n<a class=\"reference external\" href=\"https://arxiv.org/pdf/1407.2170.pdf\">https://arxiv.org/pdf/1407.2170.pdf</a></p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.aggregate_rvecs\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">aggregate_rvecs</code><span class=\"sig-paren\">(</span><em>rvecs</em>, <em>maws</em>, <em>error_flags</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#aggregate_rvecs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.aggregate_rvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute aggregated residual vectors Phi(X_c)</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.smk.smk_funcs aggregate_rvecs \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">words</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">testdata_rvecs</span><span class=\"p\">(),</span> <span class=\"p\">[</span><span class=\"s1\">&#39;vecs&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;words&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">word</span> <span class=\"o\">=</span> <span class=\"n\">words</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rvecs</span><span class=\"p\">,</span> <span class=\"n\">error_flags</span> <span class=\"o\">=</span> <span class=\"n\">compute_rvec</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">word</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">maws</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rvecs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">agg_rvec</span><span class=\"p\">,</span> <span class=\"n\">agg_flag</span> <span class=\"o\">=</span> <span class=\"n\">aggregate_rvecs</span><span class=\"p\">(</span><span class=\"n\">rvecs</span><span class=\"p\">,</span> <span class=\"n\">maws</span><span class=\"p\">,</span> <span class=\"n\">error_flags</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">qt4ensure</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># recenter residuals for visualization</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">agg_cvec</span> <span class=\"o\">=</span> <span class=\"n\">agg_rvec</span> <span class=\"o\">+</span> <span class=\"n\">word</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cvecs</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">rvecs</span> <span class=\"o\">+</span> <span class=\"n\">word</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">word</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">&#39;r*&#39;</span><span class=\"p\">,</span> <span class=\"n\">markersize</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;word&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">agg_cvec</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">agg_cvec</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">&#39;ro&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;re-centered agg_rvec&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">&#39;go&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;original vecs&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">cvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">cvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">&#39;b.&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;re-centered rvec&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">draw_line_segments2</span><span class=\"p\">([</span><span class=\"n\">word</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cvecs</span><span class=\"p\">),</span> <span class=\"n\">cvecs</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;black&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">draw_line_segments2</span><span class=\"p\">([</span><span class=\"n\">word</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">agg_cvec</span><span class=\"p\">],</span> <span class=\"n\">alpha</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;red&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_aspect</span><span class=\"p\">(</span><span class=\"s1\">&#39;equal&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.assign_to_words\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">assign_to_words</code><span class=\"sig-paren\">(</span><em>vocab</em>, <em>idx_to_vec</em>, <em>nAssign</em>, <em>massign_alpha=1.2</em>, <em>massign_sigma=80.0</em>, <em>massign_equal_weights=False</em>, <em>verbose=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#assign_to_words\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.assign_to_words\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Assigns descriptor-vectors to nearest word.</p>\n<p class=\"rubric\">Notes</p>\n<p>Maybe move out of this file? The usage of vocab is out of this file\nscope.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>wordflann</strong> (<em>FLANN</em>) \u2013 nearest neighbor index over words</li>\n<li><strong>words</strong> (<em>ndarray</em>) \u2013 vocabulary words</li>\n<li><strong>idx_to_vec</strong> (<em>ndarray</em>) \u2013 descriptors to assign</li>\n<li><strong>nAssign</strong> (<em>int</em>) \u2013 number of words to assign each descriptor to</li>\n<li><strong>massign_alpha</strong> (<em>float</em>) \u2013 multiple-assignment ratio threshold</li>\n<li><strong>massign_sigma</strong> (<em>float</em>) \u2013 multiple-assignment gaussian variance</li>\n<li><strong>massign_equal_weights</strong> (<em>bool</em>) \u2013 assign equal weight to all multiassigned words</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><p>inverted index, multi-assigned weights, and forward index\nformated as:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"o\">*</span> <span class=\"n\">wx_to_idxs</span> <span class=\"o\">-</span> <span class=\"n\">word</span> <span class=\"n\">index</span>   <span class=\"o\">-&gt;</span> <span class=\"n\">vector</span> <span class=\"n\">indexes</span>\n<span class=\"o\">*</span> <span class=\"n\">wx_to_maws</span> <span class=\"o\">-</span> <span class=\"n\">word</span> <span class=\"n\">index</span>   <span class=\"o\">-&gt;</span> <span class=\"n\">multi</span><span class=\"o\">-</span><span class=\"n\">assignment</span> <span class=\"n\">weights</span>\n<span class=\"o\">*</span> <span class=\"n\">idx2_wxs</span> <span class=\"o\">-</span> <span class=\"n\">vector</span> <span class=\"n\">index</span> <span class=\"o\">-&gt;</span> <span class=\"n\">assigned</span> <span class=\"n\">word</span> <span class=\"n\">indexes</span>\n</pre></div>\n</div>\n</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">tuple</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># SLOW_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># xdoctest: +SKIP</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_vec</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">get_feat_vecs</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">::</span><span class=\"mi\">300</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_vec</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">idx_to_vec</span><span class=\"p\">,</span> <span class=\"n\">vocab</span><span class=\"o\">.</span><span class=\"n\">wx_to_word</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nAssign</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">massign_equal_weights</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">massign_alpha</span> <span class=\"o\">=</span> <span class=\"mf\">1.2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">massign_sigma</span> <span class=\"o\">=</span> <span class=\"mf\">80.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nAssign</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_wxs</span><span class=\"p\">,</span> <span class=\"n\">idx_to_maws</span> <span class=\"o\">=</span> <span class=\"n\">assign_to_words</span><span class=\"p\">(</span><span class=\"n\">vocab</span><span class=\"p\">,</span> <span class=\"n\">idx_to_vec</span><span class=\"p\">,</span> <span class=\"n\">nAssign</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;idx_to_maws = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">idx_to_wxs</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;idx_to_wxs = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">idx_to_maws</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">),))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.build_matches_agg\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">build_matches_agg</code><span class=\"sig-paren\">(</span><em>X_fxs</em>, <em>Y_fxs</em>, <em>X_maws</em>, <em>Y_maws</em>, <em>score_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#build_matches_agg\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.build_matches_agg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds explicit features matches. Break and distribute up each aggregate\nscore amongst its contributing features.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">(fm, fs)</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">tuple</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.smk.smk_funcs build_matches_agg \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">map_int</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">lmap</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int32</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">map_float</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">lmap</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X_fxs</span> <span class=\"o\">=</span> <span class=\"n\">map_int</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Y_fxs</span> <span class=\"o\">=</span> <span class=\"n\">map_int</span><span class=\"p\">([[</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">99</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X_maws</span> <span class=\"o\">=</span> <span class=\"n\">map_float</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Y_maws</span> <span class=\"o\">=</span> <span class=\"n\">map_float</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">fm</span><span class=\"p\">,</span> <span class=\"n\">fs</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">build_matches_agg</span><span class=\"p\">(</span><span class=\"n\">X_fxs</span><span class=\"p\">,</span> <span class=\"n\">Y_fxs</span><span class=\"p\">,</span> <span class=\"n\">X_maws</span><span class=\"p\">,</span> <span class=\"n\">Y_maws</span><span class=\"p\">,</span> <span class=\"n\">score_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;fm = &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">fm</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;fs = &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">fs</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fm</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">score_list</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">fs</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.build_matches_sep\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">build_matches_sep</code><span class=\"sig-paren\">(</span><em>X_fxs</em>, <em>Y_fxs</em>, <em>scores_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#build_matches_sep\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.build_matches_sep\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Just build matches. Scores have already been broken up. No need to do that.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">(fm, fs)</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">tuple</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.smk.smk_funcs build_matches_agg \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">map_int</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">lmap</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int32</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">map_float</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">lmap</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X_fxs</span> <span class=\"o\">=</span> <span class=\"n\">map_int</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Y_fxs</span> <span class=\"o\">=</span> <span class=\"n\">map_int</span><span class=\"p\">([[</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">99</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scores_list</span> <span class=\"o\">=</span> <span class=\"n\">map_float</span><span class=\"p\">([</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">[[</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">],],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">[[</span><span class=\"o\">.</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">.</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">9</span><span class=\"p\">],],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">[[</span><span class=\"o\">.</span><span class=\"mi\">4</span><span class=\"p\">]],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">fm</span><span class=\"p\">,</span> <span class=\"n\">fs</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">build_matches_sep</span><span class=\"p\">(</span><span class=\"n\">X_fxs</span><span class=\"p\">,</span> <span class=\"n\">Y_fxs</span><span class=\"p\">,</span> <span class=\"n\">scores_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;fm = &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">fm</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;fs = &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">fs</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fm</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">isclose</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">total_flatten</span><span class=\"p\">(</span><span class=\"n\">scores_list</span><span class=\"p\">)),</span> <span class=\"n\">fs</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.cast_residual_integer\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">cast_residual_integer</code><span class=\"sig-paren\">(</span><em>rvecs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#cast_residual_integer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.cast_residual_integer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>quantize residual vectors to 8-bits using the same trunctation hack as in\nSIFT. values will typically not reach the maximum, so we can multiply by a\nhigher number for better fidelity.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>rvecs</strong> (<em>ndarray</em><em>[</em><em>float64_t</em><em>]</em>) \u2013 </td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">ndarray[uint8_t]</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.smk.smk_funcs cast_residual_integer \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rvecs</span> <span class=\"o\">=</span> <span class=\"n\">testdata_rvecs</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)[</span><span class=\"s1\">&#39;rvecs&#39;</span><span class=\"p\">][</span><span class=\"mi\">4</span><span class=\"p\">:]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rvecs_int8</span> <span class=\"o\">=</span> <span class=\"n\">cast_residual_integer</span><span class=\"p\">(</span><span class=\"n\">rvecs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rvecs_float</span> <span class=\"o\">=</span> <span class=\"n\">uncast_residual_integer</span><span class=\"p\">(</span><span class=\"n\">rvecs_int8</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Casting from float to int8 will result in a max quantization error</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">measured_error</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">rvecs_float</span> <span class=\"o\">-</span> <span class=\"n\">rvecs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># But there are limits on what this error can be</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cutoff</span> <span class=\"o\">=</span> <span class=\"mi\">127</span>  <span class=\"c1\"># np.iinfo(np.int8).max</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fidelity</span> <span class=\"o\">=</span> <span class=\"mf\">255.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">theory_error_in</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"n\">fidelity</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">theory_error_out</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">fidelity</span> <span class=\"o\">-</span> <span class=\"n\">cutoff</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">fidelity</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Determine if any component values exceed the cutoff</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">is_inside</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">rvecs</span> <span class=\"o\">*</span> <span class=\"n\">fidelity</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">cutoff</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Check theoretical maximum for values inside and outside cutoff</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">error_stats_in</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_stats</span><span class=\"p\">(</span><span class=\"n\">measured_error</span><span class=\"p\">[</span><span class=\"n\">is_inside</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">error_stats_out</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_stats</span><span class=\"p\">(</span><span class=\"n\">measured_error</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">is_inside</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;inside cutoff error stats: &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr4</span><span class=\"p\">(</span><span class=\"n\">error_stats_in</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;outside cutoff error stats: &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr4</span><span class=\"p\">(</span><span class=\"n\">error_stats_out</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">rvecs_int8</span><span class=\"o\">.</span><span class=\"n\">dtype</span> <span class=\"o\">==</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int8</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">measured_error</span><span class=\"p\">[</span><span class=\"n\">is_inside</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">theory_error_in</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">measured_error</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">is_inside</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">theory_error_out</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.compute_rvec\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">compute_rvec</code><span class=\"sig-paren\">(</span><em>vecs</em>, <em>word</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#compute_rvec\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.compute_rvec\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute residual vectors phi(x_c)</p>\n<p>Subtract each vector from its quantized word to get the resiudal, then\nnormalize residuals to unit length.</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.smk.smk_funcs compute_rvec \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">words</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">testdata_rvecs</span><span class=\"p\">(),</span> <span class=\"p\">[</span><span class=\"s1\">&#39;vecs&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;words&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">word</span> <span class=\"o\">=</span> <span class=\"n\">words</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rvecs</span><span class=\"p\">,</span> <span class=\"n\">error_flags</span> <span class=\"o\">=</span> <span class=\"n\">compute_rvec</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">word</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># recenter residuals for visualization</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cvecs</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">rvecs</span> <span class=\"o\">+</span> <span class=\"n\">word</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">word</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">&#39;r*&#39;</span><span class=\"p\">,</span> <span class=\"n\">markersize</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;word&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">&#39;go&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;original vecs&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">cvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">cvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">&#39;b.&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;re-centered rvec&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">draw_line_segments2</span><span class=\"p\">(</span><span class=\"n\">cvecs</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">word</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cvecs</span><span class=\"p\">),</span> <span class=\"n\">alpha</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;black&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_aspect</span><span class=\"p\">(</span><span class=\"s1\">&#39;equal&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.compute_stacked_agg_rvecs\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">compute_stacked_agg_rvecs</code><span class=\"sig-paren\">(</span><em>words</em>, <em>flat_wxs_assign</em>, <em>flat_vecs</em>, <em>flat_offsets</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#compute_stacked_agg_rvecs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.compute_stacked_agg_rvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>More efficient version of agg on a stacked structure</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>words</strong> (<em>ndarray</em>) \u2013 entire vocabulary of words</li>\n<li><strong>flat_wxs_assign</strong> (<em>ndarray</em>) \u2013 maps a stacked index to word index</li>\n<li><strong>flat_vecs</strong> (<em>ndarray</em>) \u2013 stacked SIFT descriptors</li>\n<li><strong>flat_offsets</strong> (<em>ndarray</em>) \u2013 offset positions per annotation</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">testdata_rvecs</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">nvecs</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">nannots</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">words</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;words&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flat_offsets</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;offset_list&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flat_wxs_assign</span><span class=\"p\">,</span> <span class=\"n\">flat_vecs</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;idx_to_wx&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;vecs&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"n\">compute_stacked_agg_rvecs</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"p\">,</span> <span class=\"n\">flat_wxs_assign</span><span class=\"p\">,</span> <span class=\"n\">flat_vecs</span><span class=\"p\">,</span> <span class=\"n\">flat_offsets</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">all_agg_vecs</span><span class=\"p\">,</span> <span class=\"n\">all_error_flags</span><span class=\"p\">,</span> <span class=\"n\">agg_offset_list</span> <span class=\"o\">=</span> <span class=\"n\">tup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">agg_rvecs_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">all_agg_vecs</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"p\">:</span><span class=\"n\">r</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">itertwo</span><span class=\"p\">(</span><span class=\"n\">agg_offset_list</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">agg_flags_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">all_error_flags</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"p\">:</span><span class=\"n\">r</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">itertwo</span><span class=\"p\">(</span><span class=\"n\">agg_offset_list</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">agg_flags_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">flat_offsets</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">testdata_rvecs</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">nvecs</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">nannots</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">words</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;words&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flat_offsets</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;offset_list&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flat_wxs_assign</span><span class=\"p\">,</span> <span class=\"n\">flat_vecs</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;idx_to_wx&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;vecs&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"n\">compute_stacked_agg_rvecs</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"p\">,</span> <span class=\"n\">flat_wxs_assign</span><span class=\"p\">,</span> <span class=\"n\">flat_vecs</span><span class=\"p\">,</span> <span class=\"n\">flat_offsets</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">all_agg_vecs</span><span class=\"p\">,</span> <span class=\"n\">all_error_flags</span><span class=\"p\">,</span> <span class=\"n\">agg_offset_list</span> <span class=\"o\">=</span> <span class=\"n\">tup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">agg_rvecs_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">all_agg_vecs</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"p\">:</span><span class=\"n\">r</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">itertwo</span><span class=\"p\">(</span><span class=\"n\">agg_offset_list</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">agg_flags_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">all_error_flags</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"p\">:</span><span class=\"n\">r</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">itertwo</span><span class=\"p\">(</span><span class=\"n\">agg_offset_list</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">agg_flags_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">flat_offsets</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.gamma_agg\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">gamma_agg</code><span class=\"sig-paren\">(</span><em>phisX</em>, <em>flagsX</em>, <em>weight_list</em>, <em>alpha</em>, <em>thresh</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#gamma_agg\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.gamma_agg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes gamma (self consistency criterion)\nIt is a scalar which ensures K(X, X) = 1</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">sccw self-consistency-criterion weight</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">float</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>Math:</dt>\n<dd>gamma(X) = (sum_{c in C} w_c M(X_c, X_c))^{-.5}</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">smk</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"o\">=</span> <span class=\"n\">testdata_smk</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qinva</span><span class=\"o\">.</span><span class=\"n\">grouped_annots</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">wx_to_weight</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">wx_to_weight</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;X.gamma = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">gamma</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">),))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.gamma_sep\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">gamma_sep</code><span class=\"sig-paren\">(</span><em>phisX_list</em>, <em>flagsX_list</em>, <em>weight_list</em>, <em>alpha</em>, <em>thresh</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#gamma_sep\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.gamma_sep\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.inv_doc_freq\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">inv_doc_freq</code><span class=\"sig-paren\">(</span><em>ndocs_total</em>, <em>ndocs_per_word</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#inv_doc_freq\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.inv_doc_freq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>ndocs_total</strong> (<em>int</em>) \u2013 numer of unique documents</li>\n<li><strong>ndocs_per_word</strong> (<em>ndarray</em>) \u2013 ndocs_per_word[i] should correspond to the\nnumber of unique documents containing word[i]</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">idf_per_word</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">ndarrary</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndocs_total</span> <span class=\"o\">=</span> <span class=\"mi\">21</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndocs_per_word</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idf_per_word</span> <span class=\"o\">=</span> <span class=\"n\">inv_doc_freq</span><span class=\"p\">(</span><span class=\"n\">ndocs_total</span><span class=\"p\">,</span> <span class=\"n\">ndocs_per_word</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">idf_per_word</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">np.array([0.  , 0.  , 0.05, 2.35, 0.34, 0.97, 0.56, 3.04, 2.35])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.invert_assigns\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">invert_assigns</code><span class=\"sig-paren\">(</span><em>idx_to_wxs</em>, <em>idx_to_maws</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#invert_assigns\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.invert_assigns\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Inverts assignment of\nvectors-&gt;to-&gt;words into words-&gt;to-&gt;vectors.\nInvert mapping \u2013 Group by word indexes</p>\n<p>This gives a HUGE speedup over the old invert_assigns</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_wxs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ma</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int32</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_wxs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ma</span><span class=\"o\">.</span><span class=\"n\">masked</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_maws</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ma</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"p\">[(</span><span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">)],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_maws</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ma</span><span class=\"o\">.</span><span class=\"n\">masked</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"n\">invert_assigns</span><span class=\"p\">(</span><span class=\"n\">idx_to_wxs</span><span class=\"p\">,</span> <span class=\"n\">idx_to_maws</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">wx_to_idxs</span><span class=\"p\">,</span> <span class=\"n\">wx_to_maws</span> <span class=\"o\">=</span> <span class=\"n\">tup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;wx_to_idxs = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr4</span><span class=\"p\">(</span><span class=\"n\">wx_to_idxs</span><span class=\"p\">,</span> <span class=\"n\">with_dtype</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">wx_to_maws = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr4</span><span class=\"p\">(</span><span class=\"n\">wx_to_maws</span><span class=\"p\">,</span> <span class=\"n\">with_dtype</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">wx_to_idxs = {</span>\n<span class=\"go\">    0: np.array([0, 2], dtype=np.int32),</span>\n<span class=\"go\">    2: np.array([1, 2], dtype=np.int32),</span>\n<span class=\"go\">    4: np.array([0], dtype=np.int32),</span>\n<span class=\"go\">}</span>\n<span class=\"go\">wx_to_maws = {</span>\n<span class=\"go\">    0: np.array([0.5, 0.5], dtype=np.float32),</span>\n<span class=\"go\">    2: np.array([1. , 0.5], dtype=np.float32),</span>\n<span class=\"go\">    4: np.array([1.], dtype=np.float32),</span>\n<span class=\"go\">}</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.invert_assigns_old\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">invert_assigns_old</code><span class=\"sig-paren\">(</span><em>idx_to_wxs</em>, <em>idx_to_maws</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#invert_assigns_old\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.invert_assigns_old\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Inverts assignment of vectors to words into words to vectors.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_wxs</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int32</span><span class=\"p\">),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int32</span><span class=\"p\">),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int32</span><span class=\"p\">),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_maws</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span>  <span class=\"mf\">0.5</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mf\">1.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span>  <span class=\"mf\">0.5</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">wx_to_idxs</span><span class=\"p\">,</span> <span class=\"n\">wx_to_maws</span> <span class=\"o\">=</span> <span class=\"n\">invert_assigns_old</span><span class=\"p\">(</span><span class=\"n\">idx_to_wxs</span><span class=\"p\">,</span> <span class=\"n\">idx_to_maws</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;wx_to_idxs = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr4</span><span class=\"p\">(</span><span class=\"n\">wx_to_idxs</span><span class=\"p\">,</span> <span class=\"n\">with_dtype</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">wx_to_maws = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr4</span><span class=\"p\">(</span><span class=\"n\">wx_to_maws</span><span class=\"p\">,</span> <span class=\"n\">with_dtype</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">wx_to_idxs = {</span>\n<span class=\"go\">    0: np.array([0, 2], dtype=np.int32),</span>\n<span class=\"go\">    2: np.array([1, 2], dtype=np.int32),</span>\n<span class=\"go\">    4: np.array([0], dtype=np.int32),</span>\n<span class=\"go\">}</span>\n<span class=\"go\">wx_to_maws = {</span>\n<span class=\"go\">    0: np.array([0.5, 0.5], dtype=np.float32),</span>\n<span class=\"go\">    2: np.array([1. , 0.5], dtype=np.float32),</span>\n<span class=\"go\">    4: np.array([0.5], dtype=np.float32),</span>\n<span class=\"go\">}</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.invert_lists\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">invert_lists</code><span class=\"sig-paren\">(</span><em>aids</em>, <em>wx_lists</em>, <em>all_wxs=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#invert_lists\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.invert_lists\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>takes corresponding lists of (aids, wxs) and maps wxs to aids</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">aids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">wx_lists</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">wx_to_aids</span> <span class=\"o\">=</span> <span class=\"n\">invert_lists</span><span class=\"p\">(</span><span class=\"n\">aids</span><span class=\"p\">,</span> <span class=\"n\">wx_lists</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;wx_to_aids = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">wx_to_aids</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">wx_to_aids = {0: [1, 2], 1: [1, 2], 3: [3], 20: [2]}</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.match_scores_agg\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">match_scores_agg</code><span class=\"sig-paren\">(</span><em>PhisX</em>, <em>PhisY</em>, <em>flagsX</em>, <em>flagsY</em>, <em>alpha</em>, <em>thresh</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#match_scores_agg\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.match_scores_agg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Scores matches to multiple words using aggregate residual vectors</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">PhisX</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span> <span class=\"mf\">0.</span>        <span class=\"p\">,</span>  <span class=\"mf\">0.</span>        <span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">1.</span>        <span class=\"p\">,</span>  <span class=\"mf\">0.</span>        <span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                  <span class=\"p\">[</span> <span class=\"mf\">0.85085751</span><span class=\"p\">,</span>  <span class=\"mf\">0.52539652</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.89795083</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.4400958</span> <span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.99934547</span><span class=\"p\">,</span>  <span class=\"mf\">0.03617512</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">PhisY</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span> <span class=\"mf\">0.88299408</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.46938411</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.12096522</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.99265675</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.99948266</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.03216222</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.08394916</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.99647004</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.96414952</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.26535957</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flagsX</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">])[:,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flagsY</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">])[:,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"mf\">3.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">thresh</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score_list</span> <span class=\"o\">=</span> <span class=\"n\">match_scores_agg</span><span class=\"p\">(</span><span class=\"n\">PhisX</span><span class=\"p\">,</span> <span class=\"n\">PhisY</span><span class=\"p\">,</span> <span class=\"n\">flagsX</span><span class=\"p\">,</span> <span class=\"n\">flagsY</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"n\">thresh</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;score_list = &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">score_list</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">score_list = np.array([1.    , 0.0018, 0.    , 1.    , 0.868 ])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.match_scores_sep\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">match_scores_sep</code><span class=\"sig-paren\">(</span><em>phisX_list</em>, <em>phisY_list</em>, <em>flagsX_list</em>, <em>flagsY_list</em>, <em>alpha</em>, <em>thresh</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#match_scores_sep\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.match_scores_sep\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Scores matches to multiple words using lists of separeated residual vectors</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.sccw_normalize\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">sccw_normalize</code><span class=\"sig-paren\">(</span><em>scores</em>, <em>weight_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#sccw_normalize\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.sccw_normalize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.selective_match_score\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">selective_match_score</code><span class=\"sig-paren\">(</span><em>phisX</em>, <em>phisY</em>, <em>flagsX</em>, <em>flagsY</em>, <em>alpha</em>, <em>thresh</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#selective_match_score\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.selective_match_score\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>computes the score of each feature match</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.selectivity\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">selectivity</code><span class=\"sig-paren\">(</span><em>u</em>, <em>alpha=3.0</em>, <em>thresh=0.0</em>, <em>out=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#selectivity\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.selectivity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The selectivity function thresholds and applies a power law.</p>\n<p>This downweights weak matches.\nThe following is the exact definition from SMK paper.\nsigma_alpha(u) = (sign(u) * (u ** alpha) if u &gt; thresh else 0)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>u</strong> (<em>ndarray</em>) \u2013 input score between (-1, +1)</li>\n<li><strong>alpha</strong> (<em>float</em>) \u2013 power law (default = 3.0)</li>\n<li><strong>thresh</strong> (<em>float</em>) \u2013 number between 0 and 1 (default = 0.0)</li>\n<li><strong>out</strong> (<em>None</em>) \u2013 inplace output (default = None)</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">score</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">float</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><dl class=\"first docutils\">\n<dt>python -m plottool plot_func \u2013show \u2013range=-1,1  </dt>\n<dd>\u2013setup=\u201dimport ibeis\u201d \u2013func ibeis.algo.smk.smk_funcs.selectivity \u201clambda u: sign(u) * abs(u)**3.0 * greater_equal(u, 0)\u201d</dd>\n</dl>\n<p class=\"last\">python -m ibeis.algo.smk.smk_funcs selectivity \u2013show</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"o\">-.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"o\">-.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"mf\">3.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">thresh</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">selectivity</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"n\">thresh</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">(),</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">[0.0000, 0.0000, 0.0000, 0.0000, 0.0010, 0.1250, 1.0000]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.testdata_rvecs\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">testdata_rvecs</code><span class=\"sig-paren\">(</span><em>dim=2</em>, <em>nvecs=13</em>, <em>nwords=5</em>, <em>nannots=4</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#testdata_rvecs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.testdata_rvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>two dimensional test data</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.smk.smk_funcs testdata_rvecs \u2013show</dd>\n<dt>Ignore:</dt>\n<dd>dim = 2\nnvecs = 13\nnwords = 5\nnannots = 5</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">testdata_rvecs</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">exec</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">execstr_dict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy.spatial</span> <span class=\"k\">import</span> <span class=\"n\">Voronoi</span><span class=\"p\">,</span> <span class=\"n\">voronoi_plot_2d</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">qt4ensure</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vor</span> <span class=\"o\">=</span> <span class=\"n\">Voronoi</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">&#39;r*&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;words&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">&#39;b.&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;vecs&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># lines showing assignments (and residuals)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pts1</span> <span class=\"o\">=</span> <span class=\"n\">vecs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pts2</span> <span class=\"o\">=</span> <span class=\"n\">words</span><span class=\"p\">[</span><span class=\"n\">idx_to_wx</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">draw_line_segments2</span><span class=\"p\">(</span><span class=\"n\">pts1</span><span class=\"p\">,</span> <span class=\"n\">pts2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">&#39;g.&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;vecs&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">voronoi_plot_2d</span><span class=\"p\">(</span><span class=\"n\">vor</span><span class=\"p\">,</span> <span class=\"n\">show_vertices</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">extents</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">get_pointset_extents</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">words</span><span class=\"p\">)))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">extents</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">scale_extents</span><span class=\"p\">(</span><span class=\"n\">extents</span><span class=\"p\">,</span> <span class=\"mf\">1.1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_aspect</span><span class=\"p\">(</span><span class=\"s1\">&#39;equal&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xlim</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">extents</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_ylim</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">extents</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.uncast_residual_integer\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">uncast_residual_integer</code><span class=\"sig-paren\">(</span><em>rvecs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#uncast_residual_integer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.uncast_residual_integer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>rvecs</strong> (<em>ndarray</em><em>[</em><em>uint8_t</em><em>]</em>) \u2013 </td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">ndarray[float64_t]</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_funcs.weight_multi_assigns\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_funcs.</code><code class=\"descname\">weight_multi_assigns</code><span class=\"sig-paren\">(</span><em>_idx_to_wx</em>, <em>_idx_to_wdist</em>, <em>massign_alpha=1.2</em>, <em>massign_sigma=80.0</em>, <em>massign_equal_weights=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_funcs/#weight_multi_assigns\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_funcs.weight_multi_assigns\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Multi Assignment Weight Filtering from Improving Bag of Features</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>(</strong><strong>)</strong> (<em>massign_equal_weights</em>) \u2013 Turns off soft weighting. Gives all assigned\nvectors weight 1</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">(idx_to_wxs, idx_to_maws)</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">tuple</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">_idx_to_wx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">_idx_to_wdist</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">11</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">25</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">.</span><span class=\"mi\">03</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">25</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">massign_alpha</span> <span class=\"o\">=</span> <span class=\"mf\">1.2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">massign_sigma</span> <span class=\"o\">=</span> <span class=\"mf\">80.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">massign_equal_weights</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_wxs</span><span class=\"p\">,</span> <span class=\"n\">idx_to_maws</span> <span class=\"o\">=</span> <span class=\"n\">weight_multi_assigns</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">_idx_to_wx</span><span class=\"p\">,</span> <span class=\"n\">_idx_to_wdist</span><span class=\"p\">,</span> <span class=\"n\">massign_alpha</span><span class=\"p\">,</span> <span class=\"n\">massign_sigma</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">massign_equal_weights</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;idx_to_wxs = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">idx_to_wxs</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">)),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">idx_to_maws = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">idx_to_maws</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">idx_to_wxs = np.ma.MaskedArray([[0., 1.],</span>\n<span class=\"go\">                   [2., inf],</span>\n<span class=\"go\">                   [4., inf],</span>\n<span class=\"go\">                   [2., 0.]])</span>\n<span class=\"go\">idx_to_maws = np.ma.MaskedArray([[0.5, 0.5],</span>\n<span class=\"go\">                   [1. , inf],</span>\n<span class=\"go\">                   [1. , inf],</span>\n<span class=\"go\">                   [0.5, 0.5]])</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_funcs</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">_idx_to_wx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">_idx_to_wdist</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">11</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">25</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">.</span><span class=\"mi\">03</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">25</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">_idx_to_wx</span> <span class=\"o\">=</span> <span class=\"n\">_idx_to_wx</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int32</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">_idx_to_wdist</span> <span class=\"o\">=</span> <span class=\"n\">_idx_to_wdist</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">massign_alpha</span> <span class=\"o\">=</span> <span class=\"mf\">1.2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">massign_sigma</span> <span class=\"o\">=</span> <span class=\"mf\">80.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">massign_equal_weights</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_wxs</span><span class=\"p\">,</span> <span class=\"n\">idx_to_maws</span> <span class=\"o\">=</span> <span class=\"n\">weight_multi_assigns</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">_idx_to_wx</span><span class=\"p\">,</span> <span class=\"n\">_idx_to_wdist</span><span class=\"p\">,</span> <span class=\"n\">massign_alpha</span><span class=\"p\">,</span> <span class=\"n\">massign_sigma</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">massign_equal_weights</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;idx_to_wxs = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">idx_to_wxs</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">)),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">idx_to_maws = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">idx_to_maws</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">idx_to_wxs = np.ma.MaskedArray([[0., 1.],</span>\n<span class=\"go\">                   [2., inf],</span>\n<span class=\"go\">                   [4., inf],</span>\n<span class=\"go\">                   [2., 0.]])</span>\n<span class=\"go\">idx_to_maws = np.ma.MaskedArray([[1., 1.],</span>\n<span class=\"go\">                   [1., inf],</span>\n<span class=\"go\">                   [1., inf],</span>\n<span class=\"go\">                   [1., 1.]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.smk.smk_pipeline\">\n<span id=\"ibeis-algo-smk-smk-pipeline-module\"></span><h2>ibeis.algo.smk.smk_pipeline module<a class=\"headerlink\" href=\"#module-ibeis.algo.smk.smk_pipeline\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"docutils\">\n<dt>Oxford Experiment:</dt>\n<dd>ibeis TestResult \u2013db Oxford -p smk:nWords=[64000],nAssign=[1],SV=[False],can_match_sameimg=True -a oxford</dd>\n<dt>Zebra Experiment:</dt>\n<dd><p class=\"first\">python -m ibeis draw_rank_cmc \u2013db GZ_Master1 \u2013show         -p :proot=smk,num_words=[64000],fg_on=False,nAssign=[1],SV=[False]            :proot=vsmany,fg_on=False,SV=[False]         -a ctrl:qmingt=2</p>\n<p class=\"last\">python -m ibeis draw_rank_cmc \u2013db PZ_Master1 \u2013show         -p :proot=smk,num_words=[64000],fg_on=False,nAssign=[1],SV=[False]            :proot=vsmany,fg_on=False,SV=[False]         -a ctrl:qmingt=2</p>\n</dd>\n</dl>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.MatchHeuristicsConfig\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.smk_pipeline.</code><code class=\"descname\">MatchHeuristicsConfig</code><span class=\"sig-paren\">(</span><em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#MatchHeuristicsConfig\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.MatchHeuristicsConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dtool.base.Config</span></code></p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMK\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.smk_pipeline.</code><code class=\"descname\">SMK</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#SMK\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMK\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<p>Harness class that controls the execution of the SMK algorithm</p>\n<p>K(X, Y) = gamma(X) * gamma(Y) * sum([Mc(Xc, Yc) for c in words])</p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMK.match_single\">\n<code class=\"descname\">match_single</code><span class=\"sig-paren\">(</span><em>qaid</em>, <em>daids</em>, <em>qreq_</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#SMK.match_single\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMK.match_single\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><p class=\"first\">python -m ibeis.algo.smk.smk_pipeline SMK.match_single \u2013profile\npython -m ibeis.algo.smk.smk_pipeline SMK.match_single \u2013show</p>\n<p class=\"last\">python -m ibeis SMK.match_single -a ctrl:qmingt=2 \u2013profile \u2013db PZ_Master1\npython -m ibeis SMK.match_single -a ctrl \u2013profile \u2013db GZ_ALL</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># FUTURE_ENABLE</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daids</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#ibs, daids = ibeis.testdata_aids(defaultdb=&#39;PZ_MTEST&#39;, default_set=&#39;dcfg&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">SMKRequest</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">daids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">daids</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;agg&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                            <span class=\"s1\">&#39;num_words&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                            <span class=\"s1\">&#39;sv_on&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ensure_data</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daids</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid</span> <span class=\"o\">=</span> <span class=\"n\">daids</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">smk</span><span class=\"o\">.</span><span class=\"n\">match_single</span><span class=\"p\">(</span><span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">daids</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">qtensure</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">ishow_analysis</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMK.predict_matches\">\n<code class=\"descname\">predict_matches</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#SMK.predict_matches\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMK.predict_matches\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">smk</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">testdata_smk</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMK.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMK.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMKRequest\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.smk_pipeline.</code><code class=\"descname\">SMKRequest</code><span class=\"sig-paren\">(</span><em>ibs=None</em>, <em>qaids=None</em>, <em>daids=None</em>, <em>config=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#SMKRequest\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMKRequest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.smk.match_chips5.EstimatorRequest\" title=\"ibeis.algo.smk.match_chips5.EstimatorRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.smk.match_chips5.EstimatorRequest</span></code></a></p>\n<p><a href=\"#id13\"><span class=\"problematic\" id=\"id14\">qreq_</span></a>-like object. Trying to work on becoming more scikit-ish</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><p class=\"first\">python -m ibeis.algo.smk.smk_pipeline SMKRequest \u2013profile\npython -m ibeis.algo.smk.smk_pipeline SMKRequest \u2013show</p>\n<dl class=\"last docutils\">\n<dt>python -m ibeis draw_rank_cmc \u2013db GZ_ALL \u2013show </dt>\n<dd>-p :proot=smk,num_words=[64000,4000],nAssign=[1,5],sv_on=[False,True] -a ctrl:qmingt=2</dd>\n<dt>python -m ibeis draw_rank_cmc \u2013db PZ_MTEST \u2013show </dt>\n<dd><dl class=\"first docutils\">\n<dt>-p :proot=smk,num_words=[64000,8000,4000],nAssign=[1,2,4],sv_on=[True,False] </dt>\n<dd>default:proot=vsmany,sv_on=[True,False] </dd>\n</dl>\n<p class=\"last\">-a default:qmingt=2</p>\n</dd>\n<dt>python -m ibeis draw_rank_cmc \u2013db PZ_MTEST \u2013show </dt>\n<dd><dl class=\"first docutils\">\n<dt>-p :proot=smk,num_words=[64000],nAssign=[1],sv_on=[True] </dt>\n<dd>default:proot=vsmany,sv_on=[True] </dd>\n</dl>\n<p class=\"last\">-a default:qmingt=2</p>\n</dd>\n<dt>python -m ibeis draw_rank_cmc \u2013db PZ_Master1 \u2013show </dt>\n<dd>-p :proot=smk,num_words=[64000],nAssign=[1],sv_on=[False] -a ctrl:qmingt=2</dd>\n<dt>python -m ibeis draw_rank_cmc \u2013db PZ_Master1 </dt>\n<dd>-p :proot=smk,num_words=[64000],nAssign=[1],sv_on=[True] -a ctrl:qmingt=2,qindex=60:80 \u2013profile</dd>\n<dt>python -m ibeis draw_rank_cmc \u2013db GZ_ALL </dt>\n<dd>-p :proot=smk,num_words=[64000],nAssign=[1],sv_on=[True] -a ctrl:qmingt=2,qindex=40:60 \u2013profile</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_aids</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaids</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daids</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span><span class=\"p\">[:]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;nAssign&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num_words&#39;</span><span class=\"p\">:</span> <span class=\"mi\">64000</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sv_on&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">SMKRequest</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaids</span><span class=\"p\">,</span> <span class=\"n\">daids</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ensure_data</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">qtensure</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ishow_analysis</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">fnum</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">viz_name_score</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ishow_analysis</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">fnum</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">viz_name_score</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMKRequest.dump_vectors\">\n<code class=\"descname\">dump_vectors</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#SMKRequest.dump_vectors\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMKRequest.dump_vectors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_aids</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:mingt=2,pername=2&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaids</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daids</span> <span class=\"o\">=</span> <span class=\"n\">aid_list</span><span class=\"p\">[:]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;nAssign&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num_words&#39;</span><span class=\"p\">:</span> <span class=\"mi\">8000</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>          <span class=\"s1\">&#39;sv_on&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">SMKRequest</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaids</span><span class=\"p\">,</span> <span class=\"n\">daids</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ensure_data</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMKRequest.ensure_data\">\n<code class=\"descname\">ensure_data</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#SMKRequest.ensure_data\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMKRequest.ensure_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"go\">qreq_ = ibeis.testdata_qreq_(</span>\n<span class=\"go\">    defaultdb=&#39;Oxford&#39;, a=&#39;oxford&#39;,</span>\n<span class=\"go\">    p=&#39;default:proot=smk,nAssign=1,num_words=64000,SV=False,can_match_sameimg=True,dim_size=None&#39;)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMKRequest.execute_pipeline\">\n<code class=\"descname\">execute_pipeline</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#SMKRequest.execute_pipeline\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMKRequest.execute_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">smk</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">testdata_smk</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMKRequest.get_qreq_dannot_kpts\">\n<code class=\"descname\">get_qreq_dannot_kpts</code><span class=\"sig-paren\">(</span><em>daids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#SMKRequest.get_qreq_dannot_kpts\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMKRequest.get_qreq_dannot_kpts\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMKRequest.get_qreq_qannot_kpts\">\n<code class=\"descname\">get_qreq_qannot_kpts</code><span class=\"sig-paren\">(</span><em>qaids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#SMKRequest.get_qreq_qannot_kpts\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMKRequest.get_qreq_qannot_kpts\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMKRequest.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMKRequest.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.SMKRequestConfig\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.smk_pipeline.</code><code class=\"descname\">SMKRequestConfig</code><span class=\"sig-paren\">(</span><em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#SMKRequestConfig\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.SMKRequestConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dtool.base.Config</span></code></p>\n<p>Figure out how to do this</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.check_can_match\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_pipeline.</code><code class=\"descname\">check_can_match</code><span class=\"sig-paren\">(</span><em>qaid</em>, <em>hit_daids</em>, <em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#check_can_match\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.check_can_match\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.match_kernel_agg\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_pipeline.</code><code class=\"descname\">match_kernel_agg</code><span class=\"sig-paren\">(</span><em>X</em>, <em>Y</em>, <em>wx_to_weight</em>, <em>alpha</em>, <em>thresh</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#match_kernel_agg\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.match_kernel_agg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.match_kernel_sep\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_pipeline.</code><code class=\"descname\">match_kernel_sep</code><span class=\"sig-paren\">(</span><em>X</em>, <em>Y</em>, <em>wx_to_weight</em>, <em>alpha</em>, <em>thresh</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#match_kernel_sep\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.match_kernel_sep\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.testdata_smk\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_pipeline.</code><code class=\"descname\">testdata_smk</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#testdata_smk\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.testdata_smk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.smk_pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.smk_pipeline.word_isect\">\n<code class=\"descclassname\">ibeis.algo.smk.smk_pipeline.</code><code class=\"descname\">word_isect</code><span class=\"sig-paren\">(</span><em>X</em>, <em>Y</em>, <em>wx_to_weight</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/smk_pipeline/#word_isect\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.smk_pipeline.word_isect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.smk.vocab_indexer\">\n<span id=\"ibeis-algo-smk-vocab-indexer-module\"></span><h2>ibeis.algo.smk.vocab_indexer module<a class=\"headerlink\" href=\"#module-ibeis.algo.smk.vocab_indexer\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.vocab_indexer.VisualVocab\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.vocab_indexer.</code><code class=\"descname\">VisualVocab</code><span class=\"sig-paren\">(</span><em>words=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/vocab_indexer/#VisualVocab\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.vocab_indexer.VisualVocab\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<p>Class that maintains a list of visual words (cluster centers)\nAlso maintains a nearest neighbor index structure for finding words.\nThis class is build using the depcache</p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.vocab_indexer.VisualVocab.build\">\n<code class=\"descname\">build</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/vocab_indexer/#VisualVocab.build\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.vocab_indexer.VisualVocab.build\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.vocab_indexer.VisualVocab.nn_index\">\n<code class=\"descname\">nn_index</code><span class=\"sig-paren\">(</span><em>idx_to_vec</em>, <em>nAssign</em>, <em>checks=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/vocab_indexer/#VisualVocab.nn_index\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.vocab_indexer.VisualVocab.nn_index\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_vec</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">get_feat_vecs</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vocab</span> <span class=\"o\">=</span> <span class=\"n\">vocab</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nAssign</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.vocab_indexer.VisualVocab.render_vocab\">\n<code class=\"descname\">render_vocab</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/vocab_indexer/#VisualVocab.render_vocab\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.vocab_indexer.VisualVocab.render_vocab\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Renders the average patch of each word.\nThis is a quick visualization of the entire vocabulary.</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.smk.vocab_indexer render_vocab \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.vocab_indexer</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vocab</span> <span class=\"o\">=</span> <span class=\"n\">testdata_vocab</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">num_words</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">all_words</span> <span class=\"o\">=</span> <span class=\"n\">vocab</span><span class=\"o\">.</span><span class=\"n\">render_vocab</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">qt4ensure</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">all_words</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.smk.vocab_indexer.VisualVocab.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.smk.vocab_indexer.VisualVocab.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.smk.vocab_indexer.VisualVocab.shape\">\n<code class=\"descname\">shape</code><a class=\"headerlink\" href=\"#ibeis.algo.smk.vocab_indexer.VisualVocab.shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.smk.vocab_indexer.VocabConfig\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.smk.vocab_indexer.</code><code class=\"descname\">VocabConfig</code><span class=\"sig-paren\">(</span><em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/vocab_indexer/#VocabConfig\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.vocab_indexer.VocabConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dtool.base.Config</span></code></p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.vocab_indexer.compute_vocab\">\n<code class=\"descclassname\">ibeis.algo.smk.vocab_indexer.</code><code class=\"descname\">compute_vocab</code><span class=\"sig-paren\">(</span><em>depc</em>, <em>fid_list</em>, <em>config</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/vocab_indexer/#compute_vocab\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.vocab_indexer.compute_vocab\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Depcache method for computing a new visual vocab</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><p class=\"first\">python -m ibeis.core_annots \u2013exec-compute_neighbor_index \u2013show\npython -m ibeis show_depc_annot_table_input \u2013show \u2013tablename=neighbor_index</p>\n<p>python -m ibeis.algo.smk.vocab_indexer \u2013exec-compute_vocab:0\npython -m ibeis.algo.smk.vocab_indexer \u2013exec-compute_vocab:1</p>\n<p class=\"last\"># FIXME make util_tests register\npython -m ibeis.algo.smk.vocab_indexer compute_vocab:0</p>\n</dd>\n<dt>Ignore:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Lev Oxford Debug Example</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;Oxford&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">depc</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"p\">[</span><span class=\"s1\">&#39;vocab&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Check what currently exists in vocab table</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">print_configs</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">print_table</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">print_internal_info</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Grab aids used to compute vocab</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.expt.experiment_helpers</span> <span class=\"k\">import</span> <span class=\"n\">get_annotcfg_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">expanded_aids_list</span> <span class=\"o\">=</span> <span class=\"n\">get_annotcfg_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;oxford&#39;</span><span class=\"p\">])[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaids</span><span class=\"p\">,</span> <span class=\"n\">daids</span> <span class=\"o\">=</span> <span class=\"n\">expanded_aids_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vocab_aids</span> <span class=\"o\">=</span> <span class=\"n\">daids</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num_words&#39;</span><span class=\"p\">:</span> <span class=\"mi\">64000</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">exists</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">check_rowids</span><span class=\"p\">(</span><span class=\"s1\">&#39;vocab&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">vocab_aids</span><span class=\"p\">],</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;exists = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">exists</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vocab_rowid</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">get_rowids</span><span class=\"p\">(</span><span class=\"s1\">&#39;vocab&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">vocab_aids</span><span class=\"p\">],</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;vocab_rowid = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">vocab_rowid</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vocab</span> <span class=\"o\">=</span> <span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">get_row_data</span><span class=\"p\">([</span><span class=\"n\">vocab_rowid</span><span class=\"p\">],</span> <span class=\"s1\">&#39;words&#39;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;vocab = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">vocab</span><span class=\"p\">,))</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.vocab_indexer</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Test depcache access</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_aids</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">depc</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_tuple</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">aid_list</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rowid_kw</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tablename</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;vocab&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vocabid_list</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">get_rowids</span><span class=\"p\">(</span><span class=\"n\">tablename</span><span class=\"p\">,</span> <span class=\"n\">input_tuple</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">rowid_kw</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vocab</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">tablename</span><span class=\"p\">,</span> <span class=\"n\">input_tuple</span><span class=\"p\">,</span> <span class=\"s1\">&#39;words&#39;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">vocab</span><span class=\"o\">.</span><span class=\"n\">wordflann</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">vocab</span><span class=\"o\">.</span><span class=\"n\">wordflann</span><span class=\"o\">.</span><span class=\"n\">_FLANN__curindex_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">vocab</span><span class=\"o\">.</span><span class=\"n\">wordflann</span><span class=\"o\">.</span><span class=\"n\">_FLANN__curindex_data</span> <span class=\"ow\">is</span> <span class=\"n\">vocab</span><span class=\"o\">.</span><span class=\"n\">wx_to_word</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.vocab_indexer</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_aids</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">depc</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fid_list</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">get_rowids</span><span class=\"p\">(</span><span class=\"s1\">&#39;feat&#39;</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">VocabConfig</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vocab</span><span class=\"p\">,</span> <span class=\"n\">train_vecs</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">exec_func_src</span><span class=\"p\">(</span><span class=\"n\">compute_vocab</span><span class=\"p\">,</span> <span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;vocab&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;train_vecs&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_to_vec</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">get_feat_vecs</span><span class=\"p\">(</span><span class=\"n\">aid_list</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"n\">vocab</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">train_vecs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">centroids</span> <span class=\"o\">=</span> <span class=\"n\">vocab</span><span class=\"o\">.</span><span class=\"n\">wx_to_word</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">plot_centroids</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">centroids</span><span class=\"p\">,</span> <span class=\"n\">num_pca_dims</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#config = ibs.depc_annot[&#39;vocab&#39;].configclass()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.vocab_indexer.testdata_vocab\">\n<code class=\"descclassname\">ibeis.algo.smk.vocab_indexer.</code><code class=\"descname\">testdata_vocab</code><span class=\"sig-paren\">(</span><em>defaultdb='testdb1'</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/vocab_indexer/#testdata_vocab\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.vocab_indexer.testdata_vocab\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.smk.vocab_indexer</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num_words&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.smk\">\n<span id=\"module-contents\"></span><h2>Module contents<a class=\"headerlink\" href=\"#module-ibeis.algo.smk\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"ibeis.algo.smk.IMPORT_TUPLES\">\n<code class=\"descclassname\">ibeis.algo.smk.</code><code class=\"descname\">IMPORT_TUPLES</code><em class=\"property\"> = [('match_chips5', None), ('smk_pipeline', None), ('vocab_indexer', None)]</em><a class=\"headerlink\" href=\"#ibeis.algo.smk.IMPORT_TUPLES\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>cd /home/joncrall/code/ibeis/ibeis/algo/smk\nmakeinit.py \u2013modname=ibeis.algo.smk</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Type:</th><td class=\"field-body\">Regen Command</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.reassign_submodule_attributes\">\n<code class=\"descclassname\">ibeis.algo.smk.</code><code class=\"descname\">reassign_submodule_attributes</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/#reassign_submodule_attributes\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.reassign_submodule_attributes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>why reloading all the modules doesnt do this I don\u2019t know</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.reload_subs\">\n<code class=\"descclassname\">ibeis.algo.smk.</code><code class=\"descname\">reload_subs</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/smk/#reload_subs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.smk.reload_subs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reloads ibeis.algo.smk and submodules</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.smk.rrrr\">\n<code class=\"descclassname\">ibeis.algo.smk.</code><code class=\"descname\">rrrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.smk.rrrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reloads ibeis.algo.smk and submodules</p>\n</dd></dl>\n\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ibeis.algo.verif", "ibeis.algo.verif package", "N", "next"], ["ibeis.algo.preproc", "ibeis.algo.preproc package", "P", "previous"]], "sourcename": "ibeis.algo.smk.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">ibeis.algo.smk package</a><ul>\n<li><a class=\"reference internal\" href=\"#submodules\">Submodules</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.smk.inverted_index\">ibeis.algo.smk.inverted_index module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.smk.match_chips5\">ibeis.algo.smk.match_chips5 module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.smk.pickle_flann\">ibeis.algo.smk.pickle_flann module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.smk.script_smk\">ibeis.algo.smk.script_smk module</a><ul>\n<li><a class=\"reference internal\" href=\"#feat-info\">Feat Info</a></li>\n<li><a class=\"reference internal\" href=\"#name-num-vecs-n-annots\">name     | num_vecs   | n_annots |</a></li>\n<li><a class=\"reference internal\" href=\"#cluster-algo-config\">Cluster Algo Config</a></li>\n<li><a class=\"reference internal\" href=\"#assign-algo-config\">Assign Algo Config</a></li>\n<li><a class=\"reference internal\" href=\"#name-algo-trees-checks\">name   | algo   | trees | checks     |</a></li>\n<li><a class=\"reference internal\" href=\"#smk-results\">SMK Results</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.smk.smk_funcs\">ibeis.algo.smk.smk_funcs module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.smk.smk_pipeline\">ibeis.algo.smk.smk_pipeline module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.smk.vocab_indexer\">ibeis.algo.smk.vocab_indexer module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.smk\">Module contents</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "ibeis.algo.smk", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}