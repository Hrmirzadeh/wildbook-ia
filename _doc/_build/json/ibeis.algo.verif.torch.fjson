{"parents": [{"link": "../ibeis/", "title": "ibeis package"}, {"link": "../ibeis.algo/", "title": "ibeis.algo package"}, {"link": "../ibeis.algo.verif/", "title": "ibeis.algo.verif package"}], "prev": {"link": "../ibeis.algo.verif/", "title": "ibeis.algo.verif package"}, "next": {"link": "../ibeis.control/", "title": "ibeis.control package"}, "title": "ibeis.algo.verif.torch package", "meta": {}, "body": "<div class=\"section\" id=\"ibeis-algo-verif-torch-package\">\n<h1>ibeis.algo.verif.torch package<a class=\"headerlink\" href=\"#ibeis-algo-verif-torch-package\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"submodules\">\n<h2>Submodules<a class=\"headerlink\" href=\"#submodules\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"ibeis-algo-verif-torch-fit-harness-module\">\n<h2>ibeis.algo.verif.torch.fit_harness module<a class=\"headerlink\" href=\"#ibeis-algo-verif-torch-fit-harness-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.torch.gpu_util\">\n<span id=\"ibeis-algo-verif-torch-gpu-util-module\"></span><h2>ibeis.algo.verif.torch.gpu_util module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.torch.gpu_util\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.torch.gpu_util.find_unused_gpu\">\n<code class=\"descclassname\">ibeis.algo.verif.torch.gpu_util.</code><code class=\"descname\">find_unused_gpu</code><span class=\"sig-paren\">(</span><em>min_memory=0</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/gpu_util/#find_unused_gpu\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.gpu_util.find_unused_gpu\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Finds GPU with the lowest memory usage by parsing output of nvidia-smi</p>\n<p>python -c \u201cfrom pysseg.util import gpu_util; print(gpu_util.find_unused_gpu())\u201d</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.torch.gpu_util.gpu_info\">\n<code class=\"descclassname\">ibeis.algo.verif.torch.gpu_util.</code><code class=\"descname\">gpu_info</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/gpu_util/#gpu_info\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.gpu_util.gpu_info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Parses nvidia-smi</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.torch.gpu_util.have_gpu\">\n<code class=\"descclassname\">ibeis.algo.verif.torch.gpu_util.</code><code class=\"descname\">have_gpu</code><span class=\"sig-paren\">(</span><em>min_memory=8000</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/gpu_util/#have_gpu\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.gpu_util.have_gpu\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Determine if we are on a machine with a good GPU</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.torch.lr_schedule\">\n<span id=\"ibeis-algo-verif-torch-lr-schedule-module\"></span><h2>ibeis.algo.verif.torch.lr_schedule module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.torch.lr_schedule\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.lr_schedule.Exponential\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.torch.lr_schedule.</code><code class=\"descname\">Exponential</code><span class=\"sig-paren\">(</span><em>init_lr=0.001</em>, <em>decay_rate=0.01</em>, <em>lr_decay_epoch=100</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/lr_schedule/#Exponential\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.lr_schedule.Exponential\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>Decay learning rate by a factor of <cite>decay_rate</cite> every <cite>lr_decay_epoch</cite>\nepochs.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.torch.lr_schedule</span> <span class=\"k\">import</span> <span class=\"o\">*</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lr_scheduler</span> <span class=\"o\">=</span> <span class=\"n\">Exponential</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rates</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">lr_scheduler</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">1E-3</span><span class=\"p\">,</span> <span class=\"mf\">1E-3</span><span class=\"p\">,</span> <span class=\"mf\">1E-5</span><span class=\"p\">,</span> <span class=\"mf\">1E-5</span><span class=\"p\">,</span> <span class=\"mf\">1E-7</span><span class=\"p\">,</span> <span class=\"mf\">1E-7</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">isclose</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">rates</span><span class=\"p\">)))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.torch.models\">\n<span id=\"ibeis-algo-verif-torch-models-module\"></span><h2>ibeis.algo.verif.torch.models module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.torch.models\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.models.Siamese\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.torch.models.</code><code class=\"descname\">Siamese</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/models/#Siamese\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.models.Siamese\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">torch.nn.modules.module.Module</span></code></p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.siamese</span> <span class=\"k\">import</span> <span class=\"o\">*</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"n\">Siamese</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.torch.models.Siamese.forward\">\n<code class=\"descname\">forward</code><span class=\"sig-paren\">(</span><em>input1</em>, <em>input2</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/models/#Siamese.forward\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.models.Siamese.forward\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute a resnet50 vector for each input and look at the L2 distance\nbetween the vectors.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.torch.models.visualize\">\n<code class=\"descclassname\">ibeis.algo.verif.torch.models.</code><code class=\"descname\">visualize</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/models/#visualize\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.models.visualize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.torch.netmath\">\n<span id=\"ibeis-algo-verif-torch-netmath-module\"></span><h2>ibeis.algo.verif.torch.netmath module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.torch.netmath\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.netmath.ContrastiveLoss\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.torch.netmath.</code><code class=\"descname\">ContrastiveLoss</code><span class=\"sig-paren\">(</span><em>margin=1.0</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#ContrastiveLoss\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.ContrastiveLoss\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">torch.nn.modules.module.Module</span></code></p>\n<p>Contrastive loss function.</p>\n<p class=\"rubric\">References</p>\n<p><a class=\"reference external\" href=\"https://github.com/delijati/pytorch-siamese/blob/master/contrastive.py\">https://github.com/delijati/pytorch-siamese/blob/master/contrastive.py</a></p>\n<dl class=\"docutils\">\n<dt>LaTeX:</dt>\n<dd>$(y E)^2 + ((1 - y) max(m - E, 0)^2)$</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.siamese</span> <span class=\"k\">import</span> <span class=\"o\">*</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs1</span><span class=\"p\">,</span> <span class=\"n\">vecs2</span><span class=\"p\">,</span> <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">testdata_siam_desc</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"n\">ContrastiveLoss</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">exec_func_src</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">forward</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">forward</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">PairwiseDistance</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)(</span><span class=\"n\">vecs1</span><span class=\"p\">,</span> <span class=\"n\">vecs2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loss2x</span><span class=\"p\">,</span> <span class=\"n\">dist_l2</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">exec_func_src</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">forward</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;loss2x&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dist_l2&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loss2x</span><span class=\"p\">,</span> <span class=\"n\">dist_l2</span><span class=\"p\">,</span> <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">loss</span><span class=\"p\">,</span> <span class=\"n\">dist_l2</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">bool</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dist0_l2</span> <span class=\"o\">=</span> <span class=\"n\">dist_l2</span><span class=\"p\">[</span><span class=\"n\">label</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dist1_l2</span> <span class=\"o\">=</span> <span class=\"n\">dist_l2</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">label</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loss0</span> <span class=\"o\">=</span> <span class=\"n\">loss2x</span><span class=\"p\">[</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loss1</span> <span class=\"o\">=</span> <span class=\"n\">loss2x</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot2</span><span class=\"p\">(</span><span class=\"n\">dist0_l2</span><span class=\"p\">,</span> <span class=\"n\">loss0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">TRUE_BLUE</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;imposter_loss&#39;</span><span class=\"p\">,</span> <span class=\"n\">y_label</span><span class=\"o\">=</span><span class=\"s1\">&#39;loss&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot2</span><span class=\"p\">(</span><span class=\"n\">dist1_l2</span><span class=\"p\">,</span> <span class=\"n\">loss1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">FALSE_RED</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;genuine_loss&#39;</span><span class=\"p\">,</span> <span class=\"n\">y_label</span><span class=\"o\">=</span><span class=\"s1\">&#39;loss&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;l2-dist&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.torch.netmath.ContrastiveLoss.forward\">\n<code class=\"descname\">forward</code><span class=\"sig-paren\">(</span><em>output</em>, <em>label</em>, <em>weight=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#ContrastiveLoss.forward\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.ContrastiveLoss.forward\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines the computation performed at every call.</p>\n<p>Should be overridden by all subclasses.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Module</span></code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.netmath.Criterions\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.torch.netmath.</code><code class=\"descname\">Criterions</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#Criterions\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.Criterions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.verif.torch.netmath.NetMathParams\" title=\"ibeis.algo.verif.torch.netmath.NetMathParams\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.verif.torch.netmath.NetMathParams</span></code></a></p>\n<p>A collection of standard and custom loss criterion</p>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.netmath.Criterions.ContrastiveLoss\">\n<em class=\"property\">class </em><code class=\"descname\">ContrastiveLoss</code><span class=\"sig-paren\">(</span><em>margin=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.Criterions.ContrastiveLoss\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">torch.nn.modules.module.Module</span></code></p>\n<p>Contrastive loss function.</p>\n<p class=\"rubric\">References</p>\n<p><a class=\"reference external\" href=\"https://github.com/delijati/pytorch-siamese/blob/master/contrastive.py\">https://github.com/delijati/pytorch-siamese/blob/master/contrastive.py</a></p>\n<dl class=\"docutils\">\n<dt>LaTeX:</dt>\n<dd>$(y E)^2 + ((1 - y) max(m - E, 0)^2)$</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.siamese</span> <span class=\"k\">import</span> <span class=\"o\">*</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs1</span><span class=\"p\">,</span> <span class=\"n\">vecs2</span><span class=\"p\">,</span> <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">testdata_siam_desc</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"n\">ContrastiveLoss</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">exec_func_src</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">forward</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">forward</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">PairwiseDistance</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)(</span><span class=\"n\">vecs1</span><span class=\"p\">,</span> <span class=\"n\">vecs2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loss2x</span><span class=\"p\">,</span> <span class=\"n\">dist_l2</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">exec_func_src</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">forward</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;loss2x&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dist_l2&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loss2x</span><span class=\"p\">,</span> <span class=\"n\">dist_l2</span><span class=\"p\">,</span> <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">loss</span><span class=\"p\">,</span> <span class=\"n\">dist_l2</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">bool</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dist0_l2</span> <span class=\"o\">=</span> <span class=\"n\">dist_l2</span><span class=\"p\">[</span><span class=\"n\">label</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dist1_l2</span> <span class=\"o\">=</span> <span class=\"n\">dist_l2</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">label</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loss0</span> <span class=\"o\">=</span> <span class=\"n\">loss2x</span><span class=\"p\">[</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loss1</span> <span class=\"o\">=</span> <span class=\"n\">loss2x</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot2</span><span class=\"p\">(</span><span class=\"n\">dist0_l2</span><span class=\"p\">,</span> <span class=\"n\">loss0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">TRUE_BLUE</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;imposter_loss&#39;</span><span class=\"p\">,</span> <span class=\"n\">y_label</span><span class=\"o\">=</span><span class=\"s1\">&#39;loss&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plot2</span><span class=\"p\">(</span><span class=\"n\">dist1_l2</span><span class=\"p\">,</span> <span class=\"n\">loss1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">FALSE_RED</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;genuine_loss&#39;</span><span class=\"p\">,</span> <span class=\"n\">y_label</span><span class=\"o\">=</span><span class=\"s1\">&#39;loss&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;l2-dist&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.torch.netmath.Criterions.ContrastiveLoss.forward\">\n<code class=\"descname\">forward</code><span class=\"sig-paren\">(</span><em>output</em>, <em>label</em>, <em>weight=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.Criterions.ContrastiveLoss.forward\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines the computation performed at every call.</p>\n<p>Should be overridden by all subclasses.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Module</span></code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"staticmethod\">\n<dt id=\"ibeis.algo.verif.torch.netmath.Criterions.cross_entropy2d\">\n<em class=\"property\">static </em><code class=\"descname\">cross_entropy2d</code><span class=\"sig-paren\">(</span><em>output</em>, <em>label</em>, <em>weight=None</em>, <em>size_average=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#Criterions.cross_entropy2d\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.Criterions.cross_entropy2d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><a class=\"reference external\" href=\"https://github.com/ycszen/pytorch-seg/blob/master/loss.py\">https://github.com/ycszen/pytorch-seg/blob/master/loss.py</a></p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.netmath.LRSchedules\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.torch.netmath.</code><code class=\"descname\">LRSchedules</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#LRSchedules\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.LRSchedules\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.verif.torch.netmath.NetMathParams\" title=\"ibeis.algo.verif.torch.netmath.NetMathParams\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.verif.torch.netmath.NetMathParams</span></code></a></p>\n<p>A collection of standard and custom learning rate schedulers</p>\n<dl class=\"staticmethod\">\n<dt id=\"ibeis.algo.verif.torch.netmath.LRSchedules.exp\">\n<em class=\"property\">static </em><code class=\"descname\">exp</code><span class=\"sig-paren\">(</span><em>optimizer</em>, <em>epoch</em>, <em>init_lr=0.001</em>, <em>lr_decay_epoch=2</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#LRSchedules.exp\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.LRSchedules.exp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decay learning rate by a factor of 0.1 every lr_decay_epoch epochs.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.netmath.Metrics\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.torch.netmath.</code><code class=\"descname\">Metrics</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#Metrics\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.Metrics\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.verif.torch.netmath.NetMathParams\" title=\"ibeis.algo.verif.torch.netmath.NetMathParams\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.verif.torch.netmath.NetMathParams</span></code></a></p>\n<dl class=\"staticmethod\">\n<dt id=\"ibeis.algo.verif.torch.netmath.Metrics.tpr\">\n<em class=\"property\">static </em><code class=\"descname\">tpr</code><span class=\"sig-paren\">(</span><em>output</em>, <em>label</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#Metrics.tpr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.Metrics.tpr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>true positive rate</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.netmath.NetMathParams\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.torch.netmath.</code><code class=\"descname\">NetMathParams</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#NetMathParams\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.NetMathParams\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.verif.torch.netmath.NetMathParams.lookup\">\n<em class=\"property\">classmethod </em><code class=\"descname\">lookup</code><span class=\"sig-paren\">(</span><em>key_or_scheduler</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#NetMathParams.lookup\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.NetMathParams.lookup\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Accepts either a string that encodes a known scheduler or a\ncustom callable that is returned as-is.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>key_or_scheduler</strong> (<em>str</em><em> or </em><em>func</em>) \u2013 scheduler name or the func itself</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.netmath.Optimizers\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.torch.netmath.</code><code class=\"descname\">Optimizers</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#Optimizers\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.Optimizers\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.verif.torch.netmath.NetMathParams\" title=\"ibeis.algo.verif.torch.netmath.NetMathParams\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.verif.torch.netmath.NetMathParams</span></code></a></p>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.netmath.Optimizers.Adam\">\n<em class=\"property\">class </em><code class=\"descname\">Adam</code><span class=\"sig-paren\">(</span><em>params</em>, <em>lr=0.001</em>, <em>betas=(0.9</em>, <em>0.999)</em>, <em>eps=1e-08</em>, <em>weight_decay=0</em>, <em>amsgrad=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.Optimizers.Adam\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">torch.optim.optimizer.Optimizer</span></code></p>\n<p>Implements Adam algorithm.</p>\n<p>It has been proposed in <a class=\"reference external\" href=\"https://arxiv.org/abs/1412.6980\">Adam: A Method for Stochastic Optimization</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>params</strong> (<em>iterable</em>) \u2013 iterable of parameters to optimize or dicts defining\nparameter groups</li>\n<li><strong>lr</strong> (<em>float</em><em>, </em><em>optional</em>) \u2013 learning rate (default: 1e-3)</li>\n<li><strong>betas</strong> (<em>Tuple</em><em>[</em><em>float</em><em>, </em><em>float</em><em>]</em><em>, </em><em>optional</em>) \u2013 coefficients used for computing\nrunning averages of gradient and its square (default: (0.9, 0.999))</li>\n<li><strong>eps</strong> (<em>float</em><em>, </em><em>optional</em>) \u2013 term added to the denominator to improve\nnumerical stability (default: 1e-8)</li>\n<li><strong>weight_decay</strong> (<em>float</em><em>, </em><em>optional</em>) \u2013 weight decay (L2 penalty) (default: 0)</li>\n<li><strong>amsgrad</strong> (<em>boolean</em><em>, </em><em>optional</em>) \u2013 whether to use the AMSGrad variant of this\nalgorithm from the paper <a class=\"reference external\" href=\"https://openreview.net/forum?id=ryQu7f-RZ\">On the Convergence of Adam and Beyond</a></li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.torch.netmath.Optimizers.Adam.step\">\n<code class=\"descname\">step</code><span class=\"sig-paren\">(</span><em>closure=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.Optimizers.Adam.step\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs a single optimization step.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>closure</strong> (<em>callable</em><em>, </em><em>optional</em>) \u2013 A closure that reevaluates the model\nand returns the loss.</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.netmath.Optimizers.SGD\">\n<em class=\"property\">class </em><code class=\"descname\">SGD</code><span class=\"sig-paren\">(</span><em>params</em>, <em>lr=&lt;object object&gt;</em>, <em>momentum=0</em>, <em>dampening=0</em>, <em>weight_decay=0</em>, <em>nesterov=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.Optimizers.SGD\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">torch.optim.optimizer.Optimizer</span></code></p>\n<p>Implements stochastic gradient descent (optionally with momentum).</p>\n<p>Nesterov momentum is based on the formula from\n<a class=\"reference external\" href=\"http://www.cs.toronto.edu/%7Ehinton/absps/momentum.pdf\">On the importance of initialization and momentum in deep learning</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>params</strong> (<em>iterable</em>) \u2013 iterable of parameters to optimize or dicts defining\nparameter groups</li>\n<li><strong>lr</strong> (<em>float</em>) \u2013 learning rate</li>\n<li><strong>momentum</strong> (<em>float</em><em>, </em><em>optional</em>) \u2013 momentum factor (default: 0)</li>\n<li><strong>weight_decay</strong> (<em>float</em><em>, </em><em>optional</em>) \u2013 weight decay (L2 penalty) (default: 0)</li>\n<li><strong>dampening</strong> (<em>float</em><em>, </em><em>optional</em>) \u2013 dampening for momentum (default: 0)</li>\n<li><strong>nesterov</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 enables Nesterov momentum (default: False)</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">SGD</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">momentum</span><span class=\"o\">=</span><span class=\"mf\">0.9</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loss_fn</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">),</span> <span class=\"n\">target</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p>The implementation of SGD with Momentum/Nesterov subtly differs from\nSutskever et. al. and implementations in some other frameworks.</p>\n<p>Considering the specific case of Momentum, the update can be written as</p>\n<div class=\"system-message\">\n<p class=\"system-message-title\">System Message: WARNING/2 (<tt class=\"docutils\">v = \\rho * v + g \\\\\np = p - lr * v\n\n</tt>)</p>\nlatex exited with error\n[stdout]\nThis is pdfTeX, Version 3.14159265-2.6-1.40.19 (TeX Live 2018/MacPorts 2018.47642_7) (preloaded format=latex)\n restricted \\write18 enabled.\nentering extended mode\n(./math.tex\nLaTeX2e &lt;2018-04-01&gt; patch level 2\nBabel &lt;3.18&gt; and hyphenation patterns for 3 language(s) loaded.\n(/opt/local/share/texmf-texlive/tex/latex/base/article.cls\nDocument Class: article 2014/09/29 v1.4h Standard LaTeX document class\n(/opt/local/share/texmf-texlive/tex/latex/base/size12.clo))\n(/opt/local/share/texmf-texlive/tex/latex/base/inputenc.sty\n\n! LaTeX Error: File `utf8x.def' not found.\n\nType X to quit or &lt;RETURN&gt; to proceed,\nor enter new name. (Default extension: def)\n\nEnter file name: \n! Emergency stop.\n&lt;read *&gt; \n         \nl.165 \\endinput\n               ^^M\nNo pages of output.\nTranscript written on math.log.\n</div>\n<p>where p, g, v and <div class=\"system-message\">\n<p class=\"system-message-title\">System Message: WARNING/2 (<tt class=\"docutils\">\\rho</tt>)</p>\nlatex exited with error\n[stdout]\nThis is pdfTeX, Version 3.14159265-2.6-1.40.19 (TeX Live 2018/MacPorts 2018.47642_7) (preloaded format=latex)\n restricted \\write18 enabled.\nentering extended mode\n(./math.tex\nLaTeX2e &lt;2018-04-01&gt; patch level 2\nBabel &lt;3.18&gt; and hyphenation patterns for 3 language(s) loaded.\n(/opt/local/share/texmf-texlive/tex/latex/base/article.cls\nDocument Class: article 2014/09/29 v1.4h Standard LaTeX document class\n(/opt/local/share/texmf-texlive/tex/latex/base/size12.clo))\n(/opt/local/share/texmf-texlive/tex/latex/base/inputenc.sty\n\n! LaTeX Error: File `utf8x.def' not found.\n\nType X to quit or &lt;RETURN&gt; to proceed,\nor enter new name. (Default extension: def)\n\nEnter file name: \n! Emergency stop.\n&lt;read *&gt; \n         \nl.165 \\endinput\n               ^^M\nNo pages of output.\nTranscript written on math.log.\n</div>\n denote the parameters, gradient,\nvelocity, and momentum respectively.</p>\n<p>This is in contrast to Sutskever et. al. and\nother frameworks which employ an update of the form</p>\n<div class=\"system-message\">\n<p class=\"system-message-title\">System Message: WARNING/2 (<tt class=\"docutils\">v = \\rho * v + lr * g \\\\\np = p - v\n\n</tt>)</p>\nlatex exited with error\n[stdout]\nThis is pdfTeX, Version 3.14159265-2.6-1.40.19 (TeX Live 2018/MacPorts 2018.47642_7) (preloaded format=latex)\n restricted \\write18 enabled.\nentering extended mode\n(./math.tex\nLaTeX2e &lt;2018-04-01&gt; patch level 2\nBabel &lt;3.18&gt; and hyphenation patterns for 3 language(s) loaded.\n(/opt/local/share/texmf-texlive/tex/latex/base/article.cls\nDocument Class: article 2014/09/29 v1.4h Standard LaTeX document class\n(/opt/local/share/texmf-texlive/tex/latex/base/size12.clo))\n(/opt/local/share/texmf-texlive/tex/latex/base/inputenc.sty\n\n! LaTeX Error: File `utf8x.def' not found.\n\nType X to quit or &lt;RETURN&gt; to proceed,\nor enter new name. (Default extension: def)\n\nEnter file name: \n! Emergency stop.\n&lt;read *&gt; \n         \nl.165 \\endinput\n               ^^M\nNo pages of output.\nTranscript written on math.log.\n</div>\n<p class=\"last\">The Nesterov version is analogously modified.</p>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.torch.netmath.Optimizers.SGD.step\">\n<code class=\"descname\">step</code><span class=\"sig-paren\">(</span><em>closure=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.Optimizers.SGD.step\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs a single optimization step.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>closure</strong> (<em>callable</em><em>, </em><em>optional</em>) \u2013 A closure that reevaluates the model\nand returns the loss.</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.torch.netmath.testdata_siam_desc\">\n<code class=\"descclassname\">ibeis.algo.verif.torch.netmath.</code><code class=\"descname\">testdata_siam_desc</code><span class=\"sig-paren\">(</span><em>num_data=128</em>, <em>desc_dim=8</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/netmath/#testdata_siam_desc\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.netmath.testdata_siam_desc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.torch.old_harness\">\n<span id=\"ibeis-algo-verif-torch-old-harness-module\"></span><h2>ibeis.algo.verif.torch.old_harness module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.torch.old_harness\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.torch.siamese\">\n<span id=\"ibeis-algo-verif-torch-siamese-module\"></span><h2>ibeis.algo.verif.torch.siamese module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.torch.siamese\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.torch.train_main\">\n<span id=\"ibeis-algo-verif-torch-train-main-module\"></span><h2>ibeis.algo.verif.torch.train_main module<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.torch.train_main\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.train_main.LRSchedule\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.torch.train_main.</code><code class=\"descname\">LRSchedule</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/train_main/#LRSchedule\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.train_main.LRSchedule\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<dl class=\"staticmethod\">\n<dt id=\"ibeis.algo.verif.torch.train_main.LRSchedule.exp\">\n<em class=\"property\">static </em><code class=\"descname\">exp</code><span class=\"sig-paren\">(</span><em>optimizer</em>, <em>epoch</em>, <em>init_lr=0.001</em>, <em>lr_decay_epoch=2</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/train_main/#LRSchedule.exp\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.train_main.LRSchedule.exp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decay learning rate by a factor of 0.1 every lr_decay_epoch epochs.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.verif.torch.train_main.LabeledPairDataset\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.verif.torch.train_main.</code><code class=\"descname\">LabeledPairDataset</code><span class=\"sig-paren\">(</span><em>img1_fpaths</em>, <em>img2_fpaths</em>, <em>labels</em>, <em>transform='default'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/train_main/#LabeledPairDataset\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.train_main.LabeledPairDataset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">torch.utils.data.dataset.Dataset</span></code></p>\n<dl class=\"docutils\">\n<dt>transform=transforms.Compose([</dt>\n<dd><blockquote class=\"first\">\n<div>transforms.Scale(224),\ntransforms.ToTensor(),\ntorchvision.transforms.Normalize([0.5, 0.5, 0.5], [0.225, 0.225, 0.225])</div></blockquote>\n<p class=\"last\">]</p>\n</dd>\n<dt>Ignore:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.torch.train_main</span> <span class=\"k\">import</span> <span class=\"o\">*</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.vsone</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span> <span class=\"o\">=</span> <span class=\"n\">OneVsOneProblem</span><span class=\"o\">.</span><span class=\"n\">from_empty</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">infr</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">load_samples</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">samples</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">samples</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">print_info</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xval_kw</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">xval_kw</span><span class=\"o\">.</span><span class=\"n\">asdict</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">skf_list</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">stratified_kfold_indices</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">xval_kw</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">train_idx</span><span class=\"p\">,</span> <span class=\"n\">test_idx</span> <span class=\"o\">=</span> <span class=\"n\">skf_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">aids1</span><span class=\"p\">,</span> <span class=\"n\">aids2</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">aid_pairs</span><span class=\"p\">[</span><span class=\"n\">train_idx</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">pblm</span><span class=\"o\">.</span><span class=\"n\">samples</span><span class=\"p\">[</span><span class=\"s1\">&#39;match_state&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">y_enc</span><span class=\"p\">[</span><span class=\"n\">train_idx</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">labels</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int64</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">chip_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;resize_dim&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;wh&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dim_size&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">224</span><span class=\"p\">,</span> <span class=\"mi\">224</span><span class=\"p\">)}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">img1_fpaths</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;chips&#39;</span><span class=\"p\">,</span> <span class=\"n\">aids1</span><span class=\"p\">,</span> <span class=\"n\">read_extern</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"o\">=</span><span class=\"s1\">&#39;img&#39;</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">chip_config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">img2_fpaths</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">depc_annot</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;chips&#39;</span><span class=\"p\">,</span> <span class=\"n\">aids2</span><span class=\"p\">,</span> <span class=\"n\">read_extern</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">colnames</span><span class=\"o\">=</span><span class=\"s1\">&#39;img&#39;</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">chip_config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"n\">LabeledPairDataset</span><span class=\"p\">(</span><span class=\"n\">img1_fpaths</span><span class=\"p\">,</span> <span class=\"n\">img2_fpaths</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">img1</span><span class=\"p\">,</span> <span class=\"n\">img2</span><span class=\"p\">,</span> <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.verif.torch.train_main.LabeledPairDataset.class_weights\">\n<code class=\"descname\">class_weights</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/train_main/#LabeledPairDataset.class_weights\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.train_main.LabeledPairDataset.class_weights\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.verif.torch.train_main.siam_vsone_train\">\n<code class=\"descclassname\">ibeis.algo.verif.torch.train_main.</code><code class=\"descname\">siam_vsone_train</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/verif/torch/train_main/#siam_vsone_train\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.verif.torch.train_main.siam_vsone_train\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.verif.torch.train_main siam_vsone_train</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.verif.torch.train_main</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">siam_vsone_train</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.verif.torch\">\n<span id=\"module-contents\"></span><h2>Module contents<a class=\"headerlink\" href=\"#module-ibeis.algo.verif.torch\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ibeis.control", "ibeis.control package", "N", "next"], ["ibeis.algo.verif", "ibeis.algo.verif package", "P", "previous"]], "sourcename": "ibeis.algo.verif.torch.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">ibeis.algo.verif.torch package</a><ul>\n<li><a class=\"reference internal\" href=\"#submodules\">Submodules</a></li>\n<li><a class=\"reference internal\" href=\"#ibeis-algo-verif-torch-fit-harness-module\">ibeis.algo.verif.torch.fit_harness module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.torch.gpu_util\">ibeis.algo.verif.torch.gpu_util module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.torch.lr_schedule\">ibeis.algo.verif.torch.lr_schedule module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.torch.models\">ibeis.algo.verif.torch.models module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.torch.netmath\">ibeis.algo.verif.torch.netmath module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.torch.old_harness\">ibeis.algo.verif.torch.old_harness module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.torch.siamese\">ibeis.algo.verif.torch.siamese module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.torch.train_main\">ibeis.algo.verif.torch.train_main module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.verif.torch\">Module contents</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "ibeis.algo.verif.torch", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}