{"parents": [{"link": "../ibeis/", "title": "ibeis package"}, {"link": "../ibeis.algo/", "title": "ibeis.algo package"}], "prev": {"link": "../ibeis.algo/", "title": "ibeis.algo package"}, "next": {"link": "../ibeis.algo.detect.nms/", "title": "ibeis.algo.detect.nms package"}, "title": "ibeis.algo.detect package", "meta": {}, "body": "<div class=\"section\" id=\"ibeis-algo-detect-package\">\n<h1>ibeis.algo.detect package<a class=\"headerlink\" href=\"#ibeis-algo-detect-package\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"subpackages\">\n<h2>Subpackages<a class=\"headerlink\" href=\"#subpackages\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"toctree-wrapper compound\">\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"../ibeis.algo.detect.nms/\">ibeis.algo.detect.nms package</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.detect.nms/#submodules\">Submodules</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.detect.nms/#module-ibeis.algo.detect.nms.py_cpu_nms\">ibeis.algo.detect.nms.py_cpu_nms module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../ibeis.algo.detect.nms/#module-ibeis.algo.detect.nms\">Module contents</a></li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"section\" id=\"submodules\">\n<h2>Submodules<a class=\"headerlink\" href=\"#submodules\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.azure\">\n<span id=\"ibeis-algo-detect-azure-module\"></span><h2>ibeis.algo.detect.azure module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.azure\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interface to Azure object proposals.</p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.azure.detect\">\n<code class=\"descclassname\">ibeis.algo.detect.azure.</code><code class=\"descname\">detect</code><span class=\"sig-paren\">(</span><em>gpath_list</em>, <em>config_filepath</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/azure/#detect\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.azure.detect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Detect image filepaths with azure.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gpath_list</strong> (<em>list of str</em>) \u2013 the list of image paths that need proposal candidates</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the Azure documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.azure.detect_gid_list\">\n<code class=\"descclassname\">ibeis.algo.detect.azure.</code><code class=\"descname\">detect_gid_list</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gid_list</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/azure/#detect_gid_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.azure.detect_gid_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Detect gid_list with azure.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the Azure documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>ibs</strong> (<em>ibeis.IBEISController</em>) \u2013 image analysis api</li>\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>Kwargs:</dt>\n<dd>detector, config_filepath, weights_filepath, verbose</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\"><em>tuple</em> \u2013 (gid, gpath, result_list)</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.azure.label\">\n<code class=\"descclassname\">ibeis.algo.detect.azure.</code><code class=\"descname\">label</code><span class=\"sig-paren\">(</span><em>chip_filepath_list</em>, <em>labeler_weight_filepath</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/azure/#label\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.azure.label\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Classify aid_list with azure.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.azure.label_aid_list\">\n<code class=\"descclassname\">ibeis.algo.detect.azure.</code><code class=\"descname\">label_aid_list</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>aid_list</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/azure/#label_aid_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.azure.label_aid_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Classify aid_list with azure.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>aid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS annotation rowids that need classifying</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the Azure documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\"><em>tuple</em> \u2013 (gid, gpath, result_list)</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.darknet\">\n<span id=\"ibeis-algo-detect-darknet-module\"></span><h2>ibeis.algo.detect.darknet module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.darknet\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interface to Darknet object proposals.</p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.darknet.detect\">\n<code class=\"descclassname\">ibeis.algo.detect.darknet.</code><code class=\"descname\">detect</code><span class=\"sig-paren\">(</span><em>gpath_list</em>, <em>config_filepath</em>, <em>weight_filepath</em>, <em>class_filepath</em>, <em>sensitivity</em>, <em>verbose=False</em>, <em>use_gpu=True</em>, <em>use_gpu_id=0</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/darknet/#detect\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.darknet.detect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gpath_list</strong> (<em>list of str</em>) \u2013 the list of image paths that need proposal candidates</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the Darknet documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.darknet.detect_gid_list\">\n<code class=\"descclassname\">ibeis.algo.detect.darknet.</code><code class=\"descname\">detect_gid_list</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gid_list</em>, <em>downsample=True</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/darknet/#detect_gid_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.darknet.detect_gid_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 <p>a flag to indicate if the original image\nsizes should be used; defaults to True</p>\n<p>True:  ibs.get_image_detectpaths() is used\nFalse: ibs.get_image_paths() is used</p>\n</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the Darknet documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>ibs</strong> (<em>ibeis.IBEISController</em>) \u2013 image analysis api</li>\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 a flag to indicate if the original image\nsizes should be used; defaults to True</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>Kwargs:</dt>\n<dd>detector, config_filepath, weights_filepath, verbose</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\"><em>tuple</em> \u2013 (gid, gpath, result_list)</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.detect.darknet detect_gid_list \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.detect.darknet</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.core_images</span> <span class=\"k\">import</span> <span class=\"n\">LocalizerConfig</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_gids</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;verbose&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">downsample</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"n\">detect_gid_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">downsample</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result lens = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result[0] = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;verbose&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">downsample</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"n\">detect_gid_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">downsample</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result lens = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result[0] = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\">results (list of dict)</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.fasterrcnn\">\n<span id=\"ibeis-algo-detect-fasterrcnn-module\"></span><h2>ibeis.algo.detect.fasterrcnn module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.fasterrcnn\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interface to Faster R-CNN object proposals.</p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.fasterrcnn.detect\">\n<code class=\"descclassname\">ibeis.algo.detect.fasterrcnn.</code><code class=\"descname\">detect</code><span class=\"sig-paren\">(</span><em>gpath_list</em>, <em>config_filepath</em>, <em>weight_filepath</em>, <em>class_filepath</em>, <em>sensitivity</em>, <em>verbose=False</em>, <em>use_gpu=True</em>, <em>use_gpu_id=0</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/fasterrcnn/#detect\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.fasterrcnn.detect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gpath_list</strong> (<em>list of str</em>) \u2013 the list of image paths that need proposal candidates</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the Faster R-CNN documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.fasterrcnn.detect_gid_list\">\n<code class=\"descclassname\">ibeis.algo.detect.fasterrcnn.</code><code class=\"descname\">detect_gid_list</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gid_list</em>, <em>downsample=True</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/fasterrcnn/#detect_gid_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.fasterrcnn.detect_gid_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 <p>a flag to indicate if the original image\nsizes should be used; defaults to True</p>\n<p>True:  ibs.get_image_detectpaths() is used\nFalse: ibs.get_image_paths() is used</p>\n</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the Faster R-CNN documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>ibs</strong> (<em>ibeis.IBEISController</em>) \u2013 image analysis api</li>\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 a flag to indicate if the original image\nsizes should be used; defaults to True</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>Kwargs:</dt>\n<dd>detector, config_filepath, weights_filepath, verbose</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\"><em>tuple</em> \u2013 (gid, gpath, result_list)</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.detect.fasterrcnn detect_gid_list \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.detect.fasterrcnn</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.core_images</span> <span class=\"k\">import</span> <span class=\"n\">LocalizerConfig</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_gids</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;verbose&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">downsample</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"n\">detect_gid_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">downsample</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result lens = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result[0] = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;verbose&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">downsample</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"n\">detect_gid_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">downsample</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result lens = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result[0] = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\">results (list of dict)</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.grabmodels\">\n<span id=\"ibeis-algo-detect-grabmodels-module\"></span><h2>ibeis.algo.detect.grabmodels module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.grabmodels\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.grabmodels.assert_models\">\n<code class=\"descclassname\">ibeis.algo.detect.grabmodels.</code><code class=\"descname\">assert_models</code><span class=\"sig-paren\">(</span><em>modeldir='default'</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/grabmodels/#assert_models\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.grabmodels.assert_models\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.grabmodels.ensure_models\">\n<code class=\"descclassname\">ibeis.algo.detect.grabmodels.</code><code class=\"descname\">ensure_models</code><span class=\"sig-paren\">(</span><em>modeldir='default'</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/grabmodels/#ensure_models\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.grabmodels.ensure_models\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>modeldir</strong> (<em>str</em>) \u2013 </td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.detect.grabmodels \u2013test-ensure_models</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.detect.grabmodels</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">modeldir</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ensure_models</span><span class=\"p\">(</span><span class=\"n\">modeldir</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.grabmodels.get_species_trees_paths\">\n<code class=\"descclassname\">ibeis.algo.detect.grabmodels.</code><code class=\"descname\">get_species_trees_paths</code><span class=\"sig-paren\">(</span><em>species</em>, <em>modeldir='default'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/grabmodels/#get_species_trees_paths\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.grabmodels.get_species_trees_paths\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>species</strong> \u2013 </li>\n<li><strong>modeldir</strong> (<em>str</em>) \u2013 </li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">trees_path</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\"><p>?</p>\n</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.detect.grabmodels \u2013test-get_species_trees_paths</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.detect.grabmodels</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># build test data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">species</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_SPECIES</span><span class=\"o\">.</span><span class=\"n\">ZEB_PLAIN</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">modeldir</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># execute function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">trees_path</span> <span class=\"o\">=</span> <span class=\"n\">get_species_trees_paths</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"p\">,</span> <span class=\"n\">modeldir</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># verify results</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">trees_path</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.grabmodels.iter_algo_modeldirs\">\n<code class=\"descclassname\">ibeis.algo.detect.grabmodels.</code><code class=\"descname\">iter_algo_modeldirs</code><span class=\"sig-paren\">(</span><em>modeldir='default'</em>, <em>ensurebase=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/grabmodels/#iter_algo_modeldirs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.grabmodels.iter_algo_modeldirs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.grabmodels.redownload_models\">\n<code class=\"descclassname\">ibeis.algo.detect.grabmodels.</code><code class=\"descname\">redownload_models</code><span class=\"sig-paren\">(</span><em>modeldir='default'</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/grabmodels/#redownload_models\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.grabmodels.redownload_models\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>modeldir</strong> (<em>str</em>) \u2013 (default = \u2018default\u2019)</li>\n<li><strong>verbose</strong> (<em>bool</em>) \u2013 verbosity flag(default = True)</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.detect.grabmodels \u2013test-redownload_models</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># SCRIPT</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.detect.grabmodels</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">redownload_models</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.lightnet\">\n<span id=\"ibeis-algo-detect-lightnet-module\"></span><h2>ibeis.algo.detect.lightnet module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.lightnet\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interface to Lightnet object proposals.</p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.lightnet.detect\">\n<code class=\"descclassname\">ibeis.algo.detect.lightnet.</code><code class=\"descname\">detect</code><span class=\"sig-paren\">(</span><em>gpath_list</em>, <em>config_filepath=None</em>, <em>weight_filepath=None</em>, <em>classes_filepath=None</em>, <em>sensitivity=0.0</em>, <em>verbose=False</em>, <em>flip=False</em>, <em>batch_size=8</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/lightnet/#detect\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.lightnet.detect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Detect image filepaths with lightnet.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gpath_list</strong> (<em>list of str</em>) \u2013 the list of image paths that need proposal candidates</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the Lightnet documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.lightnet.detect_gid_list\">\n<code class=\"descclassname\">ibeis.algo.detect.lightnet.</code><code class=\"descname\">detect_gid_list</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gid_list</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/lightnet/#detect_gid_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.lightnet.detect_gid_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Detect gid_list with lightnet.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the Lightnet documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>ibs</strong> (<em>ibeis.IBEISController</em>) \u2013 image analysis api</li>\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>Kwargs:</dt>\n<dd>detector, config_filepath, weight_filepath, verbose</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\"><em>tuple</em> \u2013 (gid, gpath, result_list)</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.randomforest\">\n<span id=\"ibeis-algo-detect-randomforest-module\"></span><h2>ibeis.algo.detect.randomforest module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.randomforest\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interface to pyrf random forest object detection.</p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.randomforest.detect\">\n<code class=\"descclassname\">ibeis.algo.detect.randomforest.</code><code class=\"descname\">detect</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gpath_list</em>, <em>tree_path_list</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/randomforest/#detect\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.randomforest.detect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>gpath_list</strong> (<em>list of str</em>) \u2013 the list of image paths that need detection</li>\n<li><strong>tree_path_list</strong> (<em>list of str</em>) \u2013 the list of trees to load for detection</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the PyRF documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.randomforest.detect_gid_list\">\n<code class=\"descclassname\">ibeis.algo.detect.randomforest.</code><code class=\"descname\">detect_gid_list</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gid_list</em>, <em>tree_path_list</em>, <em>downsample=True</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/randomforest/#detect_gid_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.randomforest.detect_gid_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>tree_path_list</strong> (<em>list of str</em>) \u2013 the list of trees to load for detection</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 <p>a flag to indicate if the original image\nsizes should be used; defaults to True</p>\n<p>True:  ibs.get_image_detectpaths() is used\nFalse: ibs.get_image_paths() is used</p>\n</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the PyRF documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\">results (list of dict)</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.randomforest.detect_gid_list_with_species\">\n<code class=\"descclassname\">ibeis.algo.detect.randomforest.</code><code class=\"descname\">detect_gid_list_with_species</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gid_list</em>, <em>species</em>, <em>downsample=True</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/randomforest/#detect_gid_list_with_species\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.randomforest.detect_gid_list_with_species\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>species</strong> (<em>str</em>) \u2013 the species that should be used to select the pre-trained\nrandom forest model</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 <p>a flag to indicate if the original image\nsizes should be used; defaults to True</p>\n<p>True:  ibs.get_image_detectpaths() is used\nFalse: ibs.get_image_paths() is used</p>\n</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the PyRF documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.detect.randomforest \u2013test-detect_gid_list_with_species</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.detect.randomforest</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.detect.randomforest</span> <span class=\"k\">import</span> <span class=\"n\">_get_models</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># build test data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">species</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_SPECIES</span><span class=\"o\">.</span><span class=\"n\">ZEB_PLAIN</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_gids</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">downsample</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># execute function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">detect_gid_list_with_species</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">species</span><span class=\"p\">,</span> <span class=\"n\">downsample</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># verify results</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.randomforest.detect_gpath_list_with_species\">\n<code class=\"descclassname\">ibeis.algo.detect.randomforest.</code><code class=\"descname\">detect_gpath_list_with_species</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gpath_list</em>, <em>species</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/randomforest/#detect_gpath_list_with_species\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.randomforest.detect_gpath_list_with_species\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>gpath_list</strong> (<em>list of str</em>) \u2013 the list of image paths that need detection</li>\n<li><strong>species</strong> (<em>str</em>) \u2013 the species that should be used to select the pre-trained\nrandom forest model</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 <p>a flag to indicate if the original image\nsizes should be used; defaults to True</p>\n<p>True:  ibs.get_image_detectpaths() is used\nFalse: ibs.get_image_paths() is used</p>\n</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the PyRF documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.randomforest.train_gid_list\">\n<code class=\"descclassname\">ibeis.algo.detect.randomforest.</code><code class=\"descname\">train_gid_list</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gid_list</em>, <em>trees_path=None</em>, <em>species=None</em>, <em>setup=True</em>, <em>teardown=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/randomforest/#train_gid_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.randomforest.train_gid_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>trees_path</strong> (<em>str</em>) \u2013 the path that the trees will be saved into (along\nwith temporary training inventory folders that are deleted once\ntraining is finished)</li>\n<li><strong>species</strong> (<em>str</em>) \u2013 the species that should be used to assign to the newly\ntrained trees</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the PyRF documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">None</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.randomforest.train_gpath_list\">\n<code class=\"descclassname\">ibeis.algo.detect.randomforest.</code><code class=\"descname\">train_gpath_list</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>train_pos_cpath_list</em>, <em>train_neg_cpath_list</em>, <em>trees_path=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/randomforest/#train_gpath_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.randomforest.train_gpath_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>train_pos_cpath_list</strong> (<em>list of str</em>) \u2013 the list of positive image paths\nfor training</li>\n<li><strong>train_neg_cpath_list</strong> (<em>list of str</em>) \u2013 the list of negative image paths\nfor training</li>\n<li><strong>trees_path</strong> (<em>str</em>) \u2013 the path that the trees will be saved into (along\nwith temporary training inventory folders that are deleted once\ntraining is finished)</li>\n<li><strong>species</strong> (<em>str</em><em>, </em><em>optional</em>) \u2013 the species that should be used to assign to\nthe newly trained trees</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the PyRF documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">None</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.rf\">\n<span id=\"ibeis-algo-detect-rf-module\"></span><h2>ibeis.algo.detect.rf module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.rf\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interface to Darknet object proposals.</p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.rf.classify\">\n<code class=\"descclassname\">ibeis.algo.detect.rf.</code><code class=\"descname\">classify</code><span class=\"sig-paren\">(</span><em>vector_list</em>, <em>weight_filepath</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/rf/#classify\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.rf.classify\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>thumbail_list</strong> (<em>list of str</em>) \u2013 the list of image thumbnails that need classifying</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.rf.classify_helper\">\n<code class=\"descclassname\">ibeis.algo.detect.rf.</code><code class=\"descname\">classify_helper</code><span class=\"sig-paren\">(</span><em>weight_filepath</em>, <em>vector_list</em>, <em>index_list=None</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/rf/#classify_helper\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.rf.classify_helper\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.selectivesearch\">\n<span id=\"ibeis-algo-detect-selectivesearch-module\"></span><h2>ibeis.algo.detect.selectivesearch module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.selectivesearch\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interface to Selective Search object proposals.</p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.selectivesearch.detect\">\n<code class=\"descclassname\">ibeis.algo.detect.selectivesearch.</code><code class=\"descname\">detect</code><span class=\"sig-paren\">(</span><em>gpath_list</em>, <em>matlab_command='selective_search'</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/selectivesearch/#detect\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.selectivesearch.detect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gpath_list</strong> (<em>list of str</em>) \u2013 the list of image paths that need proposal candidates</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the Selective Search documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.selectivesearch.detect_gid_list\">\n<code class=\"descclassname\">ibeis.algo.detect.selectivesearch.</code><code class=\"descname\">detect_gid_list</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gid_list</em>, <em>downsample=True</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/selectivesearch/#detect_gid_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.selectivesearch.detect_gid_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 <p>a flag to indicate if the original image\nsizes should be used; defaults to True</p>\n<p>True:  ibs.get_image_detectpaths() is used\nFalse: ibs.get_image_paths() is used</p>\n</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the Selective Search documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>ibs</strong> (<em>ibeis.IBEISController</em>) \u2013 image analysis api</li>\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 a flag to indicate if the original image\nsizes should be used; defaults to True</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>Kwargs:</dt>\n<dd>detector, config_filepath, weights_filepath, verbose</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\"><em>tuple</em> \u2013 (gid, gpath, result_list)</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.detect.selectivesearch detect_gid_list \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.detect.selectivesearch</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.core_images</span> <span class=\"k\">import</span> <span class=\"n\">LocalizerConfig</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_gids</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;matlab_command&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;selective_search&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;verbose&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">downsample</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"n\">detect_gid_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">downsample</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result lens = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result[0] = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;matlab_command&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;selective_search_rcnn&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;verbose&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">downsample</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"n\">detect_gid_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">downsample</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result lens = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result[0] = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\">results (list of dict)</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.ssd\">\n<span id=\"ibeis-algo-detect-ssd-module\"></span><h2>ibeis.algo.detect.ssd module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.ssd\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interface to SSD object proposals.</p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.ssd.detect\">\n<code class=\"descclassname\">ibeis.algo.detect.ssd.</code><code class=\"descname\">detect</code><span class=\"sig-paren\">(</span><em>gpath_list</em>, <em>config_filepath</em>, <em>weight_filepath</em>, <em>class_filepath</em>, <em>sensitivity</em>, <em>verbose=False</em>, <em>use_gpu=True</em>, <em>use_gpu_id=0</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/ssd/#detect\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.ssd.detect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gpath_list</strong> (<em>list of str</em>) \u2013 the list of image paths that need proposal candidates</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the SSD documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.ssd.detect_gid_list\">\n<code class=\"descclassname\">ibeis.algo.detect.ssd.</code><code class=\"descname\">detect_gid_list</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gid_list</em>, <em>downsample=True</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/ssd/#detect_gid_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.ssd.detect_gid_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 <p>a flag to indicate if the original image\nsizes should be used; defaults to True</p>\n<p>True:  ibs.get_image_detectpaths() is used\nFalse: ibs.get_image_paths() is used</p>\n</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the SSD documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>ibs</strong> (<em>ibeis.IBEISController</em>) \u2013 image analysis api</li>\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 a flag to indicate if the original image\nsizes should be used; defaults to True</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>Kwargs:</dt>\n<dd>detector, config_filepath, weights_filepath, verbose</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\"><em>tuple</em> \u2013 (gid, gpath, result_list)</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.detect.ssd detect_gid_list \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.detect.ssd</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.core_images</span> <span class=\"k\">import</span> <span class=\"n\">LocalizerConfig</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_gids</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;verbose&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">downsample</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"n\">detect_gid_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">downsample</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result lens = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result[0] = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;verbose&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">downsample</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"n\">detect_gid_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">downsample</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result lens = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result[0] = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">results_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]))))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\">results (list of dict)</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.svm\">\n<span id=\"ibeis-algo-detect-svm-module\"></span><h2>ibeis.algo.detect.svm module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.svm\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interface to Darknet object proposals.</p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.svm.classify\">\n<code class=\"descclassname\">ibeis.algo.detect.svm.</code><code class=\"descname\">classify</code><span class=\"sig-paren\">(</span><em>vector_list</em>, <em>weight_filepath</em>, <em>verbose=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/svm/#classify\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.svm.classify\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>thumbail_list</strong> (<em>list of str</em>) \u2013 the list of image thumbnails that need classifying</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.svm.classify_helper\">\n<code class=\"descclassname\">ibeis.algo.detect.svm.</code><code class=\"descname\">classify_helper</code><span class=\"sig-paren\">(</span><em>weight_filepath</em>, <em>vector_list</em>, <em>index_list=None</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/svm/#classify_helper\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.svm.classify_helper\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.wic\">\n<span id=\"ibeis-algo-detect-wic-module\"></span><h2>ibeis.algo.detect.wic module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.wic\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interface to Lightnet object proposals.</p>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.detect.wic.ImageFilePathList\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.detect.wic.</code><code class=\"descname\">ImageFilePathList</code><span class=\"sig-paren\">(</span><em>filepaths</em>, <em>targets=None</em>, <em>transform=None</em>, <em>target_transform=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/wic/#ImageFilePathList\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.wic.ImageFilePathList\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">torch.utils.data.dataset.Dataset</span></code></p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.detect.wic.StratifiedSampler\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.detect.wic.</code><code class=\"descname\">StratifiedSampler</code><span class=\"sig-paren\">(</span><em>dataset</em>, <em>phase</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/wic/#StratifiedSampler\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.wic.StratifiedSampler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">torch.utils.data.sampler.Sampler</span></code></p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.wic.finetune\">\n<code class=\"descclassname\">ibeis.algo.detect.wic.</code><code class=\"descname\">finetune</code><span class=\"sig-paren\">(</span><em>model</em>, <em>dataloaders</em>, <em>criterion</em>, <em>optimizer</em>, <em>scheduler</em>, <em>device</em>, <em>num_epochs=64</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/wic/#finetune\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.wic.finetune\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.wic.test\">\n<code class=\"descclassname\">ibeis.algo.detect.wic.</code><code class=\"descname\">test</code><span class=\"sig-paren\">(</span><em>gpath_list</em>, <em>classifier_weight_filepath=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/wic/#test\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.wic.test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.wic.test_ensemble\">\n<code class=\"descclassname\">ibeis.algo.detect.wic.</code><code class=\"descname\">test_ensemble</code><span class=\"sig-paren\">(</span><em>filepath_list</em>, <em>weights_path_list</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/wic/#test_ensemble\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.wic.test_ensemble\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.wic.test_single\">\n<code class=\"descclassname\">ibeis.algo.detect.wic.</code><code class=\"descname\">test_single</code><span class=\"sig-paren\">(</span><em>filepath_list</em>, <em>weights_path</em>, <em>batch_size=512</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/wic/#test_single\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.wic.test_single\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.wic.train\">\n<code class=\"descclassname\">ibeis.algo.detect.wic.</code><code class=\"descname\">train</code><span class=\"sig-paren\">(</span><em>data_path</em>, <em>output_path</em>, <em>batch_size=32</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/wic/#train\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.wic.train\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.wic.visualize_augmentations\">\n<code class=\"descclassname\">ibeis.algo.detect.wic.</code><code class=\"descname\">visualize_augmentations</code><span class=\"sig-paren\">(</span><em>dataset</em>, <em>augmentation</em>, <em>tag</em>, <em>num_per_class=5</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/wic/#visualize_augmentations\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.wic.visualize_augmentations\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect.yolo\">\n<span id=\"ibeis-algo-detect-yolo-module\"></span><h2>ibeis.algo.detect.yolo module<a class=\"headerlink\" href=\"#module-ibeis.algo.detect.yolo\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interface to pydarknet yolo object detection.</p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.yolo.detect\">\n<code class=\"descclassname\">ibeis.algo.detect.yolo.</code><code class=\"descname\">detect</code><span class=\"sig-paren\">(</span><em>gpath_list</em>, <em>detector=None</em>, <em>config_filepath=None</em>, <em>weights_filepath=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/yolo/#detect\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.yolo.detect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gpath_list</strong> (<em>list of str</em>) \u2013 the list of image paths that need detection</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the PyDarknet documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">iter</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.detect.yolo</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.core_images</span> <span class=\"k\">import</span> <span class=\"n\">LocalizerConfig</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;WS_ALL&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">images</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">_rowids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gpath_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_image_paths</span><span class=\"p\">(</span><span class=\"n\">gid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dpath</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/media/raid/work/WS_ALL/localizer_backup/&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">weights_filepath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dpath</span><span class=\"p\">,</span> <span class=\"s1\">&#39;detect.yolo.2.39000.weights&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config_filepath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dpath</span><span class=\"p\">,</span> <span class=\"s1\">&#39;detect.yolo.2.cfg&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">LocalizerConfig</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">weights_filepath</span><span class=\"o\">=</span><span class=\"n\">weights_filepath</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">config_filepath</span><span class=\"o\">=</span><span class=\"n\">config_filepath</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">asdict</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete_dict_keys</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;weights_filepath&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;config_filepath&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete_dict_keys</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;thumbnail_cfg&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;species&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;algo&#39;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.yolo.detect_gid_list\">\n<code class=\"descclassname\">ibeis.algo.detect.yolo.</code><code class=\"descname\">detect_gid_list</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>gid_list</em>, <em>downsample=False</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/yolo/#detect_gid_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.yolo.detect_gid_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 <p>a flag to indicate if the original image\nsizes should be used; defaults to True</p>\n<p>True:  ibs.get_image_detectpaths() is used\nFalse: ibs.get_image_paths() is used</p>\n</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Kwargs (optional): refer to the PyDarknet documentation for configuration settings</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>ibs</strong> (<em>ibeis.IBEISController</em>) \u2013 image analysis api</li>\n<li><strong>gid_list</strong> (<em>list of int</em>) \u2013 the list of IBEIS image_rowids that need detection</li>\n<li><strong>downsample</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 a flag to indicate if the original image\nsizes should be used; defaults to True</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>Kwargs:</dt>\n<dd>detector, config_filepath, weights_filepath, verbose</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\"><em>tuple</em> \u2013 (gid, gpath, result_list)</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.detect.yolo detect_gid_list \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.detect.yolo</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.core_images</span> <span class=\"k\">import</span> <span class=\"n\">LocalizerConfig</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;WS_ALL&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">images</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">_rowids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">LocalizerConfig</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">{</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"s1\">&#39;weights_filepath&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;/media/raid/work/WS_ALL/localizer_backup/detect.yolo.2.39000.weights&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"s1\">&#39;config_filepath&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;/media/raid/work/WS_ALL/localizer_backup/detect.yolo.2.cfg&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">exec</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">execstr_dict</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">),</span> <span class=\"nb\">globals</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#classes_fpath = &#39;/media/raid/work/WS_ALL/localizer_backup/detect.yolo.2.cfg.classes&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">downsample</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">gid</span><span class=\"p\">,</span> <span class=\"n\">gpath</span><span class=\"p\">,</span> <span class=\"n\">result_list</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">detect_gid_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">gid_list</span><span class=\"p\">,</span> <span class=\"n\">downsample</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;(gid, gpath, result_list) = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">((</span><span class=\"n\">gid</span><span class=\"p\">,</span> <span class=\"n\">gpath</span><span class=\"p\">,</span> <span class=\"n\">result_list</span><span class=\"p\">)),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Yields:</th><td class=\"field-body\">results (list of dict)</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.detect\">\n<span id=\"module-contents\"></span><h2>Module contents<a class=\"headerlink\" href=\"#module-ibeis.algo.detect\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"ibeis.algo.detect.IMPORT_TUPLES\">\n<code class=\"descclassname\">ibeis.algo.detect.</code><code class=\"descname\">IMPORT_TUPLES</code><em class=\"property\"> = [('grabmodels', None), ('randomforest', None), ('wic', None), ('yolo', None)]</em><a class=\"headerlink\" href=\"#ibeis.algo.detect.IMPORT_TUPLES\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>cd /Users/bluemellophone/code/ibeis/ibeis/algo/detect\nmakeinit.py \u2013modname=ibeis.algo.detect</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Type:</th><td class=\"field-body\">Regen Command</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.reassign_submodule_attributes\">\n<code class=\"descclassname\">ibeis.algo.detect.</code><code class=\"descname\">reassign_submodule_attributes</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/#reassign_submodule_attributes\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.reassign_submodule_attributes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>why reloading all the modules doesnt do this I don\u2019t know</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.reload_subs\">\n<code class=\"descclassname\">ibeis.algo.detect.</code><code class=\"descname\">reload_subs</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/detect/#reload_subs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.detect.reload_subs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reloads ibeis.algo.detect and submodules</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.detect.rrrr\">\n<code class=\"descclassname\">ibeis.algo.detect.</code><code class=\"descname\">rrrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.detect.rrrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reloads ibeis.algo.detect and submodules</p>\n</dd></dl>\n\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ibeis.algo.detect.nms", "ibeis.algo.detect.nms package", "N", "next"], ["ibeis.algo", "ibeis.algo package", "P", "previous"]], "sourcename": "ibeis.algo.detect.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">ibeis.algo.detect package</a><ul>\n<li><a class=\"reference internal\" href=\"#subpackages\">Subpackages</a></li>\n<li><a class=\"reference internal\" href=\"#submodules\">Submodules</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.azure\">ibeis.algo.detect.azure module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.darknet\">ibeis.algo.detect.darknet module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.fasterrcnn\">ibeis.algo.detect.fasterrcnn module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.grabmodels\">ibeis.algo.detect.grabmodels module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.lightnet\">ibeis.algo.detect.lightnet module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.randomforest\">ibeis.algo.detect.randomforest module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.rf\">ibeis.algo.detect.rf module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.selectivesearch\">ibeis.algo.detect.selectivesearch module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.ssd\">ibeis.algo.detect.ssd module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.svm\">ibeis.algo.detect.svm module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.wic\">ibeis.algo.detect.wic module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect.yolo\">ibeis.algo.detect.yolo module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.detect\">Module contents</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "ibeis.algo.detect", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}