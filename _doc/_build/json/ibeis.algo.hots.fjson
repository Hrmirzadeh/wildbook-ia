{"parents": [{"link": "../ibeis/", "title": "ibeis package"}, {"link": "../ibeis.algo/", "title": "ibeis.algo package"}], "prev": {"link": "../ibeis.algo.graph.tests/", "title": "ibeis.algo.graph.tests package"}, "next": {"link": "../ibeis.algo.preproc/", "title": "ibeis.algo.preproc package"}, "title": "ibeis.algo.hots package", "meta": {}, "body": "<div class=\"section\" id=\"ibeis-algo-hots-package\">\n<h1>ibeis.algo.hots package<a class=\"headerlink\" href=\"#ibeis-algo-hots-package\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"submodules\">\n<h2>Submodules<a class=\"headerlink\" href=\"#submodules\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots._pipeline_helpers\">\n<span id=\"ibeis-algo-hots-pipeline-helpers-module\"></span><h2>ibeis.algo.hots._pipeline_helpers module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots._pipeline_helpers\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots._pipeline_helpers.testdata_post_sver\">\n<code class=\"descclassname\">ibeis.algo.hots._pipeline_helpers.</code><code class=\"descname\">testdata_post_sver</code><span class=\"sig-paren\">(</span><em>defaultdb='PZ_MTEST'</em>, <em>qaid_list=None</em>, <em>daid_list=None</em>, <em>codename='vsmany'</em>, <em>cfgdict=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/_pipeline_helpers/#testdata_post_sver\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots._pipeline_helpers.testdata_post_sver\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots._pipeline_helpers</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots._pipeline_helpers.testdata_pre\">\n<code class=\"descclassname\">ibeis.algo.hots._pipeline_helpers.</code><code class=\"descname\">testdata_pre</code><span class=\"sig-paren\">(</span><em>stopnode, defaultdb='testdb1', p=['default'], a=['default:qindex=0:1,dindex=0:5'], **kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/_pipeline_helpers/#testdata_pre\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots._pipeline_helpers.testdata_pre\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>New (1-1-2016) generic pipeline node testdata getter</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>stopnode</strong> (<em>str</em>) \u2013 name of pipeline function to be tested</li>\n<li><strong>defaultdb</strong> (<em>str</em>) \u2013 (default = u\u2019testdb1\u2019)</li>\n<li><strong>p</strong> (<em>list</em>) \u2013 (default = [u\u2019default:\u2019])</li>\n<li><strong>a</strong> (<em>list</em>) \u2013 (default = [u\u2019default:qsize=1,dsize=4\u2019])</li>\n<li><strong>**kwargs</strong> \u2013 passed to <a href=\"#id1\"><span class=\"problematic\" id=\"id2\">testdata_qreq_</span></a>\nqaid_override, daid_override</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">(ibs, <a href=\"#id3\"><span class=\"problematic\" id=\"id4\">qreq_</span></a>, args)</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">tuple</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots._pipeline_helpers \u2013exec-testdata_pre \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots._pipeline_helpers</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">stopnode</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;build_chipmatches&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">defaultdb</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;testdb1&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;default:&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;default:qindex=0:1,dindex=0:5&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"n\">stopnode</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots._pipeline_helpers.testdata_pre_baselinefilter\">\n<code class=\"descclassname\">ibeis.algo.hots._pipeline_helpers.</code><code class=\"descname\">testdata_pre_baselinefilter</code><span class=\"sig-paren\">(</span><em>defaultdb='testdb1'</em>, <em>qaid_list=None</em>, <em>daid_list=None</em>, <em>codename='vsmany'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/_pipeline_helpers/#testdata_pre_baselinefilter\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots._pipeline_helpers.testdata_pre_baselinefilter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots._pipeline_helpers.testdata_pre_sver\">\n<code class=\"descclassname\">ibeis.algo.hots._pipeline_helpers.</code><code class=\"descname\">testdata_pre_sver</code><span class=\"sig-paren\">(</span><em>defaultdb='PZ_MTEST'</em>, <em>qaid_list=None</em>, <em>daid_list=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/_pipeline_helpers/#testdata_pre_sver\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots._pipeline_helpers.testdata_pre_sver\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots._pipeline_helpers</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots._pipeline_helpers.testdata_sparse_matchinfo_nonagg\">\n<code class=\"descclassname\">ibeis.algo.hots._pipeline_helpers.</code><code class=\"descname\">testdata_sparse_matchinfo_nonagg</code><span class=\"sig-paren\">(</span><em>defaultdb='testdb1', p=['default']</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/_pipeline_helpers/#testdata_sparse_matchinfo_nonagg\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots._pipeline_helpers.testdata_sparse_matchinfo_nonagg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots._pipeline_helpers.testrun_pipeline_upto\">\n<code class=\"descclassname\">ibeis.algo.hots._pipeline_helpers.</code><code class=\"descname\">testrun_pipeline_upto</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>stop_node='end'</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/_pipeline_helpers/#testrun_pipeline_upto\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots._pipeline_helpers.testrun_pipeline_upto\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Main tester function. Runs the pipeline by mirroring\n<cite>request_ibeis_query_L0</cite>, but stops at a requested breakpoint and returns\nthe local variables.</p>\n<p>convinience: runs pipeline for tests\nthis should mirror request_ibeis_query_L0</p>\n<dl class=\"docutils\">\n<dt>Ignore:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># TODO: autogenerate</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># The following is a stub that starts the autogeneration process</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots</span> <span class=\"k\">import</span> <span class=\"n\">pipeline</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_func_sourcecode</span><span class=\"p\">(</span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">request_ibeis_query_L0</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                <span class=\"n\">strip_docstr</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">stripdef</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                <span class=\"n\">strip_comments</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">&#39;^\\s*$\\n&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">MULTILINE</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">replace_between_tags</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">sentinal</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.chip_match\">\n<span id=\"ibeis-algo-hots-chip-match-module\"></span><h2>ibeis.algo.hots.chip_match module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.chip_match\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>python -m utool.util_inspect check_module_usage \u2013pat=\u201dchip_match.py\u201d</p>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.chip_match.AnnotMatch\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">AnnotMatch</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#AnnotMatch\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.AnnotMatch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.hots.chip_match.MatchBaseIO\" title=\"ibeis.algo.hots.chip_match.MatchBaseIO\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.hots.chip_match.MatchBaseIO</span></code></a>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.hots.chip_match._BaseVisualization</span></code>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.hots.chip_match._AnnotMatchConvenienceGetter</span></code></p>\n<p>This implements part the match between whole annotations and the other\nannotaions / names. This does not include algorithm specific feature\nmatches.</p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.AnnotMatch.evaluate_dnids\">\n<code class=\"descname\">evaluate_dnids</code><span class=\"sig-paren\">(</span><em>qreq_=None</em>, <em>ibs=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#AnnotMatch.evaluate_dnids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.AnnotMatch.evaluate_dnids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.hots.chip_match.AnnotMatch.from_dict\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_dict</code><span class=\"sig-paren\">(</span><em>class_dict</em>, <em>ibs=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#AnnotMatch.from_dict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.AnnotMatch.from_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Convert dict of arguments back to ChipMatch object</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.AnnotMatch.initialize\">\n<code class=\"descname\">initialize</code><span class=\"sig-paren\">(</span><em>qaid=None</em>, <em>daid_list=None</em>, <em>score_list=None</em>, <em>dnid_list=None</em>, <em>qnid=None</em>, <em>unique_nids=None</em>, <em>name_score_list=None</em>, <em>annot_score_list=None</em>, <em>autoinit=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#AnnotMatch.initialize\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.AnnotMatch.initialize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>qaid and daid_list are not optional. fm_list and fsv_list are strongly\nencouraged and will probalby break things if they are not there.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.AnnotMatch.set_cannonical_annot_score\">\n<code class=\"descname\">set_cannonical_annot_score</code><span class=\"sig-paren\">(</span><em>annot_score_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#AnnotMatch.set_cannonical_annot_score\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.AnnotMatch.set_cannonical_annot_score\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.AnnotMatch.set_cannonical_name_score\">\n<code class=\"descname\">set_cannonical_name_score</code><span class=\"sig-paren\">(</span><em>annot_score_list</em>, <em>name_score_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#AnnotMatch.set_cannonical_name_score\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.AnnotMatch.set_cannonical_name_score\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.AnnotMatch.to_dict\">\n<code class=\"descname\">to_dict</code><span class=\"sig-paren\">(</span><em>ibs=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#AnnotMatch.to_dict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.AnnotMatch.to_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">ChipMatch</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.hots.chip_match._ChipMatchVisualization</span></code>, <a class=\"reference internal\" href=\"#ibeis.algo.hots.chip_match.AnnotMatch\" title=\"ibeis.algo.hots.chip_match.AnnotMatch\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.hots.chip_match.AnnotMatch</span></code></a>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.hots.chip_match._ChipMatchScorers</span></code>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.hots.old_chip_match._OldStyleChipMatchSimulator</span></code>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.hots.chip_match._ChipMatchConvenienceGetter</span></code>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.hots.chip_match._ChipMatchDebugger</span></code></p>\n<p>behaves as as the ChipMatchOldTup named tuple until we\ncompletely replace the old structure</p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.append_featscore_column\">\n<code class=\"descname\">append_featscore_column</code><span class=\"sig-paren\">(</span><em>filtkey</em>, <em>filtweight_list</em>, <em>inplace=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.append_featscore_column\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.append_featscore_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.arraycast_self\">\n<code class=\"descname\">arraycast_self</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.arraycast_self\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.arraycast_self\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Ensures internal structure is in numpy array formats\nTODO: come up with better name\nRemove old initialize method and rename to initialize?</p>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.combine_cms\">\n<em class=\"property\">classmethod </em><code class=\"descname\">combine_cms</code><span class=\"sig-paren\">(</span><em>cm_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.combine_cms\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.combine_cms\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.core_annots</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">depc</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">testdata_core</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">depc</span><span class=\"o\">.</span><span class=\"n\">new_request</span><span class=\"p\">(</span><span class=\"s1\">&#39;vsone&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">{</span><span class=\"s1\">&#39;dim_size&#39;</span><span class=\"p\">:</span> <span class=\"mi\">450</span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rawres_list2</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">postprocess</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take_column</span><span class=\"p\">(</span><span class=\"n\">rawres_list2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">ChipMatch</span><span class=\"o\">.</span><span class=\"n\">combine_cms</span><span class=\"p\">(</span><span class=\"n\">cm_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">score_name_nsum</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">ishow_analysis</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.compress_annots\">\n<code class=\"descname\">compress_annots</code><span class=\"sig-paren\">(</span><em>flags</em>, <em>inplace=False</em>, <em>keepscores=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.compress_annots\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.compress_annots\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.compress_results\">\n<code class=\"descname\">compress_results</code><span class=\"sig-paren\">(</span><em>inplace=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.compress_results\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.compress_results\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.compress_top_feature_matches\">\n<code class=\"descname\">compress_top_feature_matches</code><span class=\"sig-paren\">(</span><em>num=10</em>, <em>rng=&lt;module 'numpy.random' from '/Users/jason.parham/virtualenv/wildme3/lib/python3.6/site-packages/numpy/random/__init__.py'&gt;</em>, <em>use_random=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.compress_top_feature_matches\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.compress_top_feature_matches\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>DO NOT USE</p>\n<p>FIXME: Use boolean lists</p>\n<p>Removes all but the best feature matches for testing purposes\nrng = np.random.RandomState(0)</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.extend_results\">\n<code class=\"descname\">extend_results</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>other_aids=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.extend_results\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.extend_results\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a new ChipMatch containing empty data for an extended set of\naids</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>qreq</strong> (<em>ibeis.QueryRequest</em>) \u2013 query request object with hyper-parameters</li>\n<li><strong>other_aids</strong> (<em>None</em>) \u2013 (default = None)</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">out</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">ibeis.ChipMatch</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.chip_match \u2013exec-extend_results \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.chip_match</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_cm</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                              <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:dindex=0:10,qindex=0:1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                              <span class=\"n\">t</span><span class=\"o\">=</span><span class=\"s1\">&#39;best:SV=False&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">daid_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">9</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">assert_self</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">other_aids</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">extend_results</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">other_aids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">daid_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">118</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">assert_self</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.from_dict\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_dict</code><span class=\"sig-paren\">(</span><em>class_dict</em>, <em>ibs=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.from_dict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.from_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Convert dict of arguments back to ChipMatch object</p>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.from_json\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_json</code><span class=\"sig-paren\">(</span><em>json_str</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.from_json\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.from_json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Convert json string back to ChipMatch object</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd># FIXME: util_test is broken with classmethods\npython -m ibeis.algo.hots.chip_match \u2013test-from_json \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.chip_match</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm1</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_cm</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">json_str</span> <span class=\"o\">=</span> <span class=\"n\">cm1</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">ChipMatch</span><span class=\"o\">.</span><span class=\"n\">from_json</span><span class=\"p\">(</span><span class=\"n\">json_str</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_name_nsum</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">show_single_namematch</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.get_fpath\">\n<code class=\"descname\">get_fpath</code><span class=\"sig-paren\">(</span><em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.get_fpath\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.get_fpath\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.initialize\">\n<code class=\"descname\">initialize</code><span class=\"sig-paren\">(</span><em>qaid=None</em>, <em>daid_list=None</em>, <em>fm_list=None</em>, <em>fsv_list=None</em>, <em>fk_list=None</em>, <em>score_list=None</em>, <em>H_list=None</em>, <em>fsv_col_lbls=None</em>, <em>dnid_list=None</em>, <em>qnid=None</em>, <em>unique_nids=None</em>, <em>name_score_list=None</em>, <em>annot_score_list=None</em>, <em>autoinit=True</em>, <em>filtnorm_aids=None</em>, <em>filtnorm_fxs=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.initialize\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.initialize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>qaid and daid_list are not optional. fm_list and fsv_list are strongly\nencouraged and will probalby break things if they are not there.</p>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.load_from_fpath\">\n<em class=\"property\">classmethod </em><code class=\"descname\">load_from_fpath</code><span class=\"sig-paren\">(</span><em>fpath</em>, <em>verbose=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.load_from_fpath\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.load_from_fpath\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.save\">\n<code class=\"descname\">save</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>verbose=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.save\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.save\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.shortlist_subset\">\n<code class=\"descname\">shortlist_subset</code><span class=\"sig-paren\">(</span><em>top_aids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.shortlist_subset\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.shortlist_subset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>returns a new cmtup_old with only the requested daids\nTODO: rectify with take_feature_matches</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.sortself\">\n<code class=\"descname\">sortself</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.sortself\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.sortself\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>reorders the internal data using cm.score_list</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.take_annots\">\n<code class=\"descname\">take_annots</code><span class=\"sig-paren\">(</span><em>idx_list</em>, <em>inplace=False</em>, <em>keepscores=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.take_annots\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.take_annots\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Keeps results only for the selected annotation indices.</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.chip_match take_annots</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.chip_match</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_cm</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                              <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:dindex=0:10,qindex=0:1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                              <span class=\"n\">t</span><span class=\"o\">=</span><span class=\"s1\">&#39;best:sv=False&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">num_daids</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">inplace</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">keepscores</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">other</span> <span class=\"o\">=</span> <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">take_annots</span><span class=\"p\">(</span><span class=\"n\">idx_list</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"p\">,</span> <span class=\"n\">keepscores</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;out = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">nl</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Because the subset was all aids in order, the output</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ChipMatch should be exactly the same.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">inspect_difference</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">),</span> <span class=\"s1\">&#39;Should be exactly equal!&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.chip_match</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_cm</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                              <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:dindex=0:10,qindex=0:1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                              <span class=\"n\">t</span><span class=\"o\">=</span><span class=\"s1\">&#39;best:SV=False&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">inplace</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">keepscores</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">other</span> <span class=\"o\">=</span> <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">take_annots</span><span class=\"p\">(</span><span class=\"n\">idx_list</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"p\">,</span> <span class=\"n\">keepscores</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;out = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">nl</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.take_feature_matches\">\n<code class=\"descname\">take_feature_matches</code><span class=\"sig-paren\">(</span><em>indicies_list</em>, <em>inplace=False</em>, <em>keepscores=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.take_feature_matches\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.take_feature_matches\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Removes outlier feature matches\nTODO: rectify with shortlist_subset</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>indicies_list</strong> (<em>list</em>) \u2013 list of lists of indicies to keep.\nif an item is None, the match to the corresponding daid is\nremoved.</li>\n<li><strong>inplace</strong> (<em>bool</em>) \u2013 (default = False)</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">out</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">ibeis.ChipMatch</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.chip_match \u2013exec-take_feature_matches \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.chip_match</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_cm</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:dindex=0:10,qindex=0:1&#39;</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"o\">=</span><span class=\"s1\">&#39;best:SV=False&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indicies_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">num_daids</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">inplace</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">keepscores</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">take_feature_matches</span><span class=\"p\">(</span><span class=\"n\">indicies_list</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"p\">,</span> <span class=\"n\">keepscores</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">inspect_difference</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">),</span> <span class=\"s1\">&#39;should be different&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;out = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.ChipMatch.to_json\">\n<code class=\"descname\">to_json</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#ChipMatch.to_json\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.ChipMatch.to_json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Serialize ChipMatch object as JSON string</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.chip_match \u2013test-ChipMatch.to_json:0\npython -m ibeis.algo.hots.chip_match \u2013test-ChipMatch.to_json\npython -m ibeis.algo.hots.chip_match \u2013test-ChipMatch.to_json:1 \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Simple doctest demonstrating the json format</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.chip_match</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_cm</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">compress_top_feature_matches</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">rng</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">RandomState</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Serialize</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n\\n</span><span class=\"s1\">Raw ChipMatch JSON:</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">json_str</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json_str</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n\\n</span><span class=\"s1\">Pretty ChipMatch JSON:</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Pretty String Formatting</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dictrep</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">from_json</span><span class=\"p\">(</span><span class=\"n\">json_str</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dictrep</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete_dict_keys</span><span class=\"p\">(</span><span class=\"n\">dictrep</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">key</span> <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">dictrep</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">val</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span>  <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2_json</span><span class=\"p\">(</span><span class=\"n\">dictrep</span><span class=\"p\">,</span> <span class=\"n\">nl</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">key_order_metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;strlen&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># test to convert back and forth from json</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.chip_match</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_cm</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm1</span> <span class=\"o\">=</span> <span class=\"n\">cm</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Serialize</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">json_str</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">json_str</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Unserialize</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">ChipMatch</span><span class=\"o\">.</span><span class=\"n\">from_json</span><span class=\"p\">(</span><span class=\"n\">json_str</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Show if it works</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_name_nsum</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">show_single_namematch</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># result = (&#39;json_str = \\n%s&#39; % (str(json_str),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># print(result)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.chip_match.MatchBaseIO\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">MatchBaseIO</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#MatchBaseIO\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.MatchBaseIO\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.MatchBaseIO.copy\">\n<code class=\"descname\">copy</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#MatchBaseIO.copy\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.MatchBaseIO.copy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.hots.chip_match.MatchBaseIO.load_from_fpath\">\n<em class=\"property\">classmethod </em><code class=\"descname\">load_from_fpath</code><span class=\"sig-paren\">(</span><em>fpath</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#MatchBaseIO.load_from_fpath\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.MatchBaseIO.load_from_fpath\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.MatchBaseIO.save_to_fpath\">\n<code class=\"descname\">save_to_fpath</code><span class=\"sig-paren\">(</span><em>fpath</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#MatchBaseIO.save_to_fpath\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.MatchBaseIO.save_to_fpath\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python ibeis \u2013tf MatchBaseIO.save_to_fpath \u2013verbtest \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.chip_match</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid</span> <span class=\"o\">=</span> <span class=\"mi\">18</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre_sver</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">qaid</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_name_nsum</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dpath</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_app_resource_dir</span><span class=\"p\">(</span><span class=\"s1\">&#39;ibeis&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fpath</span> <span class=\"o\">=</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dpath</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tmp_chipmatch.cPkl&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">save_to_fpath</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm2</span> <span class=\"o\">=</span> <span class=\"n\">ChipMatch</span><span class=\"o\">.</span><span class=\"n\">load_from_fpath</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">cm</span> <span class=\"o\">==</span> <span class=\"n\">cm2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">ishow_analysis</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"ibeis.algo.hots.chip_match.NeedRecomputeError\">\n<em class=\"property\">exception </em><code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">NeedRecomputeError</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#NeedRecomputeError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.NeedRecomputeError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Exception</span></code></p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.chip_match.TestLogger\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">TestLogger</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#TestLogger\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.TestLogger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.TestLogger.context\">\n<code class=\"descname\">context</code><span class=\"sig-paren\">(</span><em>name</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#TestLogger.context\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.TestLogger.context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.TestLogger.end_test\">\n<code class=\"descname\">end_test</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#TestLogger.end_test\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.TestLogger.end_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.TestLogger.log_failed\">\n<code class=\"descname\">log_failed</code><span class=\"sig-paren\">(</span><em>msg</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#TestLogger.log_failed\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.TestLogger.log_failed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.TestLogger.log_passed\">\n<code class=\"descname\">log_passed</code><span class=\"sig-paren\">(</span><em>msg</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#TestLogger.log_passed\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.TestLogger.log_passed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.TestLogger.log_skipped\">\n<code class=\"descname\">log_skipped</code><span class=\"sig-paren\">(</span><em>msg</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#TestLogger.log_skipped\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.TestLogger.log_skipped\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.TestLogger.skip_test\">\n<code class=\"descname\">skip_test</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#TestLogger.skip_test\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.TestLogger.skip_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.chip_match.TestLogger.start_test\">\n<code class=\"descname\">start_test</code><span class=\"sig-paren\">(</span><em>name</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#TestLogger.start_test\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.TestLogger.start_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.aslist\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">aslist</code><span class=\"sig-paren\">(</span><em>arr</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#aslist\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.aslist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.check_arrs_eq\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">check_arrs_eq</code><span class=\"sig-paren\">(</span><em>arr1</em>, <em>arr2</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#check_arrs_eq\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.check_arrs_eq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.convert_numpy\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">convert_numpy</code><span class=\"sig-paren\">(</span><em>arr</em>, <em>dtype</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#convert_numpy\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.convert_numpy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.convert_numpy_lists\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">convert_numpy_lists</code><span class=\"sig-paren\">(</span><em>arr_list</em>, <em>dtype</em>, <em>dims=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#convert_numpy_lists\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.convert_numpy_lists\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.extend_nplists\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">extend_nplists</code><span class=\"sig-paren\">(</span><em>x_list</em>, <em>num</em>, <em>shape</em>, <em>dtype</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#extend_nplists\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.extend_nplists\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.extend_nplists_\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">extend_nplists_</code><span class=\"sig-paren\">(</span><em>x_list</em>, <em>num</em>, <em>shape</em>, <em>dtype</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#extend_nplists_\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.extend_nplists_\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.extend_pylist\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">extend_pylist</code><span class=\"sig-paren\">(</span><em>x_list</em>, <em>num</em>, <em>val</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#extend_pylist\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.extend_pylist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.extend_pylist_\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">extend_pylist_</code><span class=\"sig-paren\">(</span><em>x_list</em>, <em>num</em>, <em>val</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#extend_pylist_\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.extend_pylist_\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.extend_scores\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">extend_scores</code><span class=\"sig-paren\">(</span><em>vals</em>, <em>num</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#extend_scores\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.extend_scores\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.filtnorm_op\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">filtnorm_op</code><span class=\"sig-paren\">(</span><em>filtnorm_</em>, <em>op_</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#filtnorm_op\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.filtnorm_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.get_chipmatch_fname\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">get_chipmatch_fname</code><span class=\"sig-paren\">(</span><em>qaid</em>, <em>qreq_</em>, <em>qauuid=None</em>, <em>cfgstr=None</em>, <em>TRUNCATE_UUIDS=False</em>, <em>MAX_FNAME_LEN=200</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#get_chipmatch_fname\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.get_chipmatch_fname\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.chip_match \u2013test-get_chipmatch_fname</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.chip_match</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;spatial_verification&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:sqrd_dist_on=True&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">cm_list_FILT</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">get_chipmatch_fname</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">qauuid</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                            <span class=\"n\">TRUNCATE_UUIDS</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">MAX_FNAME_LEN</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">fname</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>qaid=18_cm_cvgrsbnffsgifyom_quuid=a126d459-b730-573e-7a21-92894b016565.cPkl</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.prepare_dict_uuids\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">prepare_dict_uuids</code><span class=\"sig-paren\">(</span><em>class_dict</em>, <em>ibs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#prepare_dict_uuids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.prepare_dict_uuids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Hacks to ensure proper uuid conversion</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.safe_check_lens_eq\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">safe_check_lens_eq</code><span class=\"sig-paren\">(</span><em>None</em>, <em>1</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#safe_check_lens_eq\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.safe_check_lens_eq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>safe_check_lens_eq([3], [2, 4])</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.safe_check_nested_lens_eq\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">safe_check_nested_lens_eq</code><span class=\"sig-paren\">(</span><em>None</em>, <em>1</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#safe_check_nested_lens_eq\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.safe_check_nested_lens_eq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>safe_check_nested_lens_eq([[3, 4]], [[2, 4]])\nsafe_check_nested_lens_eq([[1, 2, 3], [1, 2]], [[1, 2, 3], [1, 2]])\nsafe_check_nested_lens_eq([[1, 2, 3], [1, 2]], [[1, 2, 3], [1]])</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.safecast_numpy_lists\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">safecast_numpy_lists</code><span class=\"sig-paren\">(</span><em>arr_list</em>, <em>dtype=None</em>, <em>dims=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#safecast_numpy_lists\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.safecast_numpy_lists\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.safeop\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">safeop</code><span class=\"sig-paren\">(</span><em>op_</em>, <em>xs</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#safeop\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.safeop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.chip_match.testdata_cm\">\n<code class=\"descclassname\">ibeis.algo.hots.chip_match.</code><code class=\"descname\">testdata_cm</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/chip_match/#testdata_cm\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.chip_match.testdata_cm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.exceptions\">\n<span id=\"ibeis-algo-hots-exceptions-module\"></span><h2>ibeis.algo.hots.exceptions module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.exceptions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"exception\">\n<dt id=\"ibeis.algo.hots.exceptions.HotsCacheMissError\">\n<em class=\"property\">exception </em><code class=\"descclassname\">ibeis.algo.hots.exceptions.</code><code class=\"descname\">HotsCacheMissError</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/exceptions/#HotsCacheMissError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.exceptions.HotsCacheMissError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Exception</span></code></p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"ibeis.algo.hots.exceptions.HotsNeedsRecomputeError\">\n<em class=\"property\">exception </em><code class=\"descclassname\">ibeis.algo.hots.exceptions.</code><code class=\"descname\">HotsNeedsRecomputeError</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/exceptions/#HotsNeedsRecomputeError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.exceptions.HotsNeedsRecomputeError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Exception</span></code></p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.exceptions.NoDescriptorsException\">\n<code class=\"descclassname\">ibeis.algo.hots.exceptions.</code><code class=\"descname\">NoDescriptorsException</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>qaid</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/exceptions/#NoDescriptorsException\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.exceptions.NoDescriptorsException\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"ibeis.algo.hots.exceptions.QueryException\">\n<em class=\"property\">exception </em><code class=\"descclassname\">ibeis.algo.hots.exceptions.</code><code class=\"descname\">QueryException</code><span class=\"sig-paren\">(</span><em>msg</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/exceptions/#QueryException\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.exceptions.QueryException\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Exception</span></code></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.hstypes\">\n<span id=\"ibeis-algo-hots-hstypes-module\"></span><h2>ibeis.algo.hots.hstypes module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.hstypes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>hstypes\nTodo:\n* SIFT: Root_SIFT -&gt; L2 normalized -&gt; Centering.\n# <a class=\"reference external\" href=\"http://hal.archives-ouvertes.fr/docs/00/84/07/21/PDF/RR-8325.pdf\">http://hal.archives-ouvertes.fr/docs/00/84/07/21/PDF/RR-8325.pdf</a>\nThe devil is in the deatails\n<a class=\"reference external\" href=\"http://www.robots.ox.ac.uk/~vilem/bmvc2011.pdf\">http://www.robots.ox.ac.uk/~vilem/bmvc2011.pdf</a>\nThis says dont clip, do rootsift instead\n# <a class=\"reference external\" href=\"http://hal.archives-ouvertes.fr/docs/00/68/81/69/PDF/hal_v1.pdf\">http://hal.archives-ouvertes.fr/docs/00/68/81/69/PDF/hal_v1.pdf</a>\n* Quantization of residual vectors\n* Burstiness normalization for N-SMK\n* Implemented A-SMK\n* Incorporate Spatial Verification\n* Implement correct cfgstrs based on algorithm input\nfor cached computations.\n* Color by word\n* Profile on hyrule\n* Train vocab on paris\n* Remove self matches.\n* New SIFT parameters for pyhesaff (root, powerlaw, meanwhatever, output_dtype)</p>\n<p>Issues:\n* 10GB are in use when performing query on Oxford 5K\n* errors when there is a word without any database vectors.\ncurrently a weight of zero is hacked in</p>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.hstypes.FiltKeys\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.hstypes.</code><code class=\"descname\">FiltKeys</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/hstypes/#FiltKeys\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.hstypes.FiltKeys\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.hstypes.FiltKeys.BARL2\">\n<code class=\"descname\">BARL2</code><em class=\"property\"> = 'bar_l2'</em><a class=\"headerlink\" href=\"#ibeis.algo.hots.hstypes.FiltKeys.BARL2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.hstypes.FiltKeys.DIST\">\n<code class=\"descname\">DIST</code><em class=\"property\"> = 'dist'</em><a class=\"headerlink\" href=\"#ibeis.algo.hots.hstypes.FiltKeys.DIST\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.hstypes.FiltKeys.DISTINCTIVENESS\">\n<code class=\"descname\">DISTINCTIVENESS</code><em class=\"property\"> = 'distinctiveness'</em><a class=\"headerlink\" href=\"#ibeis.algo.hots.hstypes.FiltKeys.DISTINCTIVENESS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.hstypes.FiltKeys.FG\">\n<code class=\"descname\">FG</code><em class=\"property\"> = 'fg'</em><a class=\"headerlink\" href=\"#ibeis.algo.hots.hstypes.FiltKeys.FG\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.hstypes.FiltKeys.HOMOGERR\">\n<code class=\"descname\">HOMOGERR</code><em class=\"property\"> = 'homogerr'</em><a class=\"headerlink\" href=\"#ibeis.algo.hots.hstypes.FiltKeys.HOMOGERR\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.hstypes.FiltKeys.LNBNN\">\n<code class=\"descname\">LNBNN</code><em class=\"property\"> = 'lnbnn'</em><a class=\"headerlink\" href=\"#ibeis.algo.hots.hstypes.FiltKeys.LNBNN\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.hstypes.FiltKeys.RATIO\">\n<code class=\"descname\">RATIO</code><em class=\"property\"> = 'ratio'</em><a class=\"headerlink\" href=\"#ibeis.algo.hots.hstypes.FiltKeys.RATIO\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"ibeis.algo.hots.hstypes.PSEUDO_UINT8_MAX_SQRD\">\n<code class=\"descclassname\">ibeis.algo.hots.hstypes.</code><code class=\"descname\">PSEUDO_UINT8_MAX_SQRD</code><em class=\"property\"> = 262144.0</em><a class=\"headerlink\" href=\"#ibeis.algo.hots.hstypes.PSEUDO_UINT8_MAX_SQRD\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>vt.distance.understanding_pseudomax_props</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Type:</th><td class=\"field-body\">SeeAlso</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.match_chips4\">\n<span id=\"ibeis-algo-hots-match-chips4-module\"></span><h2>ibeis.algo.hots.match_chips4 module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.match_chips4\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Runs functions in pipeline to get query reuslts and does some caching.</p>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.match_chips4.execute_query2\">\n<code class=\"descclassname\">ibeis.algo.hots.match_chips4.</code><code class=\"descname\">execute_query2</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>verbose</em>, <em>save_qcache</em>, <em>batch_size=None</em>, <em>use_supercache=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/match_chips4/#execute_query2\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.match_chips4.execute_query2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Breaks up query request into several subrequests\nto process \u201cmore efficiently\u201d and safer as well.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.match_chips4.execute_query_and_save_L1\">\n<code class=\"descclassname\">ibeis.algo.hots.match_chips4.</code><code class=\"descname\">execute_query_and_save_L1</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>use_cache</em>, <em>save_qcache</em>, <em>verbose=True</em>, <em>batch_size=None</em>, <em>use_supercache=False</em>, <em>invalidate_supercache=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/match_chips4/#execute_query_and_save_L1\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.match_chips4.execute_query_and_save_L1\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>qreq</strong> (<em>ibeis.QueryRequest</em>) \u2013 </li>\n<li><strong>use_cache</strong> (<em>bool</em>) \u2013 </li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\">qaid2_cm</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.match_chips4 execute_query_and_save_L1:0\npython -m ibeis.algo.hots.match_chips4 execute_query_and_save_L1:1\npython -m ibeis.algo.hots.match_chips4 execute_query_and_save_L1:2\npython -m ibeis.algo.hots.match_chips4 execute_query_and_save_L1:3</dd>\n<dt>Example0:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># SLOW_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># xdoctest: +SKIP</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.match_chips4</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict1</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">&#39;vsmany&#39;</span><span class=\"p\">,</span> <span class=\"n\">sv_on</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_cfg_lbl</span><span class=\"p\">(</span><span class=\"n\">cfgdict1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">main_helpers</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">use_cache</span><span class=\"p\">,</span> <span class=\"n\">save_qcache</span><span class=\"p\">,</span> <span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid2_cm</span> <span class=\"o\">=</span> <span class=\"n\">execute_query_and_save_L1</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">use_cache</span><span class=\"p\">,</span> <span class=\"n\">save_qcache</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qaid2_cm</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example1:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># SLOW_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># xdoctest: +SKIP</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.match_chips4</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict1</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">&#39;vsone&#39;</span><span class=\"p\">,</span> <span class=\"n\">sv_on</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_cfg_lbl</span><span class=\"p\">(</span><span class=\"n\">cfgdict1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">main_helpers</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">use_cache</span><span class=\"p\">,</span> <span class=\"n\">save_qcache</span><span class=\"p\">,</span> <span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid2_cm</span> <span class=\"o\">=</span> <span class=\"n\">execute_query_and_save_L1</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">use_cache</span><span class=\"p\">,</span> <span class=\"n\">save_qcache</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qaid2_cm</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example1:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># SLOW_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># xdoctest: +SKIP</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># TEST SAVE</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.match_chips4</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict1</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">&#39;vsmany&#39;</span><span class=\"p\">,</span> <span class=\"n\">sv_on</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_cfg_lbl</span><span class=\"p\">(</span><span class=\"n\">cfgdict1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">main_helpers</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">use_cache</span><span class=\"p\">,</span> <span class=\"n\">save_qcache</span><span class=\"p\">,</span> <span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid2_cm</span> <span class=\"o\">=</span> <span class=\"n\">execute_query_and_save_L1</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">use_cache</span><span class=\"p\">,</span> <span class=\"n\">save_qcache</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qaid2_cm</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example2:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># SLOW_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># xdoctest: +SKIP</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># TEST LOAD</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.match_chips4</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict1</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">&#39;vsmany&#39;</span><span class=\"p\">,</span> <span class=\"n\">sv_on</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_cfg_lbl</span><span class=\"p\">(</span><span class=\"n\">cfgdict1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">main_helpers</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">use_cache</span><span class=\"p\">,</span> <span class=\"n\">save_qcache</span><span class=\"p\">,</span> <span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid2_cm</span> <span class=\"o\">=</span> <span class=\"n\">execute_query_and_save_L1</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">use_cache</span><span class=\"p\">,</span> <span class=\"n\">save_qcache</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qaid2_cm</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example2:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># TEST PARTIAL HIT</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.match_chips4</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict1</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">&#39;vsmany&#39;</span><span class=\"p\">,</span> <span class=\"n\">sv_on</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">prescore_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;csum&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_cfg_lbl</span><span class=\"p\">(</span><span class=\"n\">cfgdict1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">main_helpers</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                                              <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                                              <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">use_cache</span><span class=\"p\">,</span> <span class=\"n\">save_qcache</span><span class=\"p\">,</span> <span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid2_cm</span> <span class=\"o\">=</span> <span class=\"n\">execute_query_and_save_L1</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">use_cache</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                     <span class=\"n\">save_qcache</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                     <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">qaid2_cm</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">get_fpath</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">qaid2_cm</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">get_fpath</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">qaid2_cm</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">get_fpath</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">qaid2_cm</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">get_fpath</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Re-execute&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid2_cm_</span> <span class=\"o\">=</span> <span class=\"n\">execute_query_and_save_L1</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">use_cache</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                      <span class=\"n\">save_qcache</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                      <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">all</span><span class=\"p\">([</span><span class=\"n\">qaid2_cm_</span><span class=\"p\">[</span><span class=\"n\">qaid</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">qaid2_cm</span><span class=\"p\">[</span><span class=\"n\">qaid</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">qaid</span> <span class=\"ow\">in</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">[</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">fpath</span> <span class=\"ow\">in</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_chipmatch_fpaths</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">)]</span>\n</pre></div>\n</div>\n</dd>\n<dt>Ignore:</dt>\n<dd>other = <a href=\"#id5\"><span class=\"problematic\" id=\"id6\">cm_</span></a> = qaid2_cm_[qaid]\ncm = qaid2_cm[qaid]</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.match_chips4.submit_query_request\">\n<code class=\"descclassname\">ibeis.algo.hots.match_chips4.</code><code class=\"descname\">submit_query_request</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>use_cache=None</em>, <em>use_bigcache=None</em>, <em>verbose=None</em>, <em>save_qcache=None</em>, <em>use_supercache=None</em>, <em>invalidate_supercache=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/match_chips4/#submit_query_request\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.match_chips4.submit_query_request\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Called from <a href=\"#id7\"><span class=\"problematic\" id=\"id8\">qreq_</span></a>.execute</p>\n<p>Checks a big cache for qaid2_cm.  If cache miss, tries to load each cm\nindividually.  On an individual cache miss, it preforms the query.</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.match_chips4 \u2013test-submit_query_request</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># SLOW_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># xdoctest: +SKIP</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.match_chips4</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">use_bigcache</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">use_cache</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">submit_query_request</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.name_scoring\">\n<span id=\"ibeis-algo-hots-name-scoring-module\"></span><h2>ibeis.algo.hots.name_scoring module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.name_scoring\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.name_scoring.NameScoreTup\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.name_scoring.</code><code class=\"descname\">NameScoreTup</code><span class=\"sig-paren\">(</span><em>sorted_nids</em>, <em>sorted_nscore</em>, <em>sorted_aids</em>, <em>sorted_scores</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.hots.name_scoring.NameScoreTup\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">tuple</span></code></p>\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.name_scoring.NameScoreTup.sorted_aids\">\n<code class=\"descname\">sorted_aids</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.name_scoring.NameScoreTup.sorted_aids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Alias for field number 2</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.name_scoring.NameScoreTup.sorted_nids\">\n<code class=\"descname\">sorted_nids</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.name_scoring.NameScoreTup.sorted_nids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Alias for field number 0</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.name_scoring.NameScoreTup.sorted_nscore\">\n<code class=\"descname\">sorted_nscore</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.name_scoring.NameScoreTup.sorted_nscore\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Alias for field number 1</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.name_scoring.NameScoreTup.sorted_scores\">\n<code class=\"descname\">sorted_scores</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.name_scoring.NameScoreTup.sorted_scores\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Alias for field number 3</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.name_scoring.align_name_scores_with_annots\">\n<code class=\"descclassname\">ibeis.algo.hots.name_scoring.</code><code class=\"descname\">align_name_scores_with_annots</code><span class=\"sig-paren\">(</span><em>annot_score_list</em>, <em>annot_aid_list</em>, <em>daid2_idx</em>, <em>name_groupxs</em>, <em>name_score_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/name_scoring/#align_name_scores_with_annots\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.name_scoring.align_name_scores_with_annots\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>takes name scores and gives them to the best annotation</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">list of scores aligned with cm.daid_list and cm.dnid_list</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first\">score_list</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>annot_score_list</strong> (<em>list</em>) \u2013 score associated with each annot</li>\n<li><strong>name_groupxs</strong> (<em>list</em>) \u2013 groups annot_score lists into groups compatible with name_score_list</li>\n<li><strong>name_score_list</strong> (<em>list</em>) \u2013 score assocated with name</li>\n<li><strong>nid2_nidx</strong> (<em>dict</em>) \u2013 mapping from nids to index in name score list</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.name_scoring \u2013test-align_name_scores_with_annots\npython -m ibeis.algo.hots.name_scoring \u2013test-align_name_scores_with_annots \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.name_scoring</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_post_sver</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">evaluate_csum_annot_score</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">evaluate_nsum_name_score</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Annot aligned lists</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">annot_score_list</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">algo_annot_scores</span><span class=\"p\">[</span><span class=\"s1\">&#39;csum&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">annot_aid_list</span>   <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">daid_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid2_idx</span>        <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">daid2_idx</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Name aligned lists</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">name_score_list</span>  <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">algo_name_scores</span><span class=\"p\">[</span><span class=\"s1\">&#39;nsum&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">name_groupxs</span>     <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">name_groupxs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Execute Function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score_list</span> <span class=\"o\">=</span> <span class=\"n\">align_name_scores_with_annots</span><span class=\"p\">(</span><span class=\"n\">annot_score_list</span><span class=\"p\">,</span> <span class=\"n\">annot_aid_list</span><span class=\"p\">,</span> <span class=\"n\">daid2_idx</span><span class=\"p\">,</span> <span class=\"n\">name_groupxs</span><span class=\"p\">,</span> <span class=\"n\">name_score_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Check that the correct name gets the highest score</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">name_score_list</span><span class=\"p\">[</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">nid2_nidx</span><span class=\"p\">[</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">qnid</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">test_index</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">score_list</span> <span class=\"o\">==</span> <span class=\"n\">target</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_list</span> <span class=\"o\">=</span> <span class=\"n\">score_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_name_rowids</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">daid_list</span><span class=\"p\">[</span><span class=\"n\">test_index</span><span class=\"p\">]),</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">qnid</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">isunique</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">dnid_list</span><span class=\"p\">[</span><span class=\"n\">score_list</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"s1\">&#39;bad name score&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">top_idx</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">algo_name_scores</span><span class=\"p\">[</span><span class=\"s1\">&#39;nsum&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">get_top_nids</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">unique_nids</span><span class=\"p\">[</span><span class=\"n\">top_idx</span><span class=\"p\">],</span> <span class=\"s1\">&#39;bug in alignment&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">show_ranked_matches</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.name_scoring</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">annot_score_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">annot_aid_list</span>   <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid2_idx</span>        <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Name aligned lists</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">name_score_list</span>  <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">name_groupxs</span>     <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Execute Function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score_list</span> <span class=\"o\">=</span> <span class=\"n\">align_name_scores_with_annots</span><span class=\"p\">(</span><span class=\"n\">annot_score_list</span><span class=\"p\">,</span> <span class=\"n\">annot_aid_list</span><span class=\"p\">,</span> <span class=\"n\">daid2_idx</span><span class=\"p\">,</span> <span class=\"n\">name_groupxs</span><span class=\"p\">,</span> <span class=\"n\">name_score_list</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.name_scoring.compute_fmech_score\">\n<code class=\"descclassname\">ibeis.algo.hots.name_scoring.</code><code class=\"descname\">compute_fmech_score</code><span class=\"sig-paren\">(</span><em>cm</em>, <em>qreq_=None</em>, <em>hack_single_ori=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/name_scoring/#compute_fmech_score\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.name_scoring.compute_fmech_score\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>nsum. This is the fmech scoring mechanism.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>cm</strong> (<em>ibeis.ChipMatch</em>) \u2013 </td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">(unique_nids, nsum_score_list)</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">tuple</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.name_scoring \u2013test-compute_fmech_score\npython -m ibeis.algo.hots.name_scoring \u2013test-compute_fmech_score:0\npython -m ibeis.algo.hots.name_scoring \u2013test-compute_fmech_score:2\nutprof.py -m ibeis.algo.hots.name_scoring \u2013test-compute_fmech_score:2\nutprof.py -m ibeis.algo.hots.pipeline \u2013test-request_ibeis_query_L0:0 \u2013db PZ_Master1 -a timectrl:qindex=0:256</dd>\n<dt>Example0:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.name_scoring</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">testdata_chipmatch</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nsum_score_list</span> <span class=\"o\">=</span> <span class=\"n\">compute_fmech_score</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">nsum_score_list</span> <span class=\"o\">==</span> <span class=\"p\">[</span> <span class=\"mf\">4.</span><span class=\"p\">,</span>  <span class=\"mf\">7.</span><span class=\"p\">,</span>  <span class=\"mf\">5.</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example1:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.name_scoring</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_post_sver</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">evaluate_dnids</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">_cast_scores</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#cm.qnid = 1   # Hack for testdb1 names</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nsum_score_list</span> <span class=\"o\">=</span> <span class=\"n\">compute_fmech_score</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#assert np.all(nsum_nid_list == cm.unique_nids), &#39;nids out of alignment&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flags</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">unique_nids</span> <span class=\"o\">==</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">qnid</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">max_true</span> <span class=\"o\">=</span> <span class=\"n\">nsum_score_list</span><span class=\"p\">[</span><span class=\"n\">flags</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">max_false</span> <span class=\"o\">=</span> <span class=\"n\">nsum_score_list</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">flags</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">max_true</span> <span class=\"o\">&gt;</span> <span class=\"n\">max_false</span><span class=\"p\">,</span> <span class=\"s1\">&#39;is this truely a hard case?&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">max_true</span> <span class=\"o\">&gt;</span> <span class=\"mf\">1.2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;score=</span><span class=\"si\">%r</span><span class=\"s1\"> should be higher for aid=18&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">max_true</span><span class=\"p\">,)</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example2:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.name_scoring</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_post_sver</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">],</span> <span class=\"n\">cfgdict</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">query_rotation_heuristic</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_name_nsum</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">show_ranked_matches</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">ori</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example3:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.name_scoring</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#ibs, qreq_, cm_list = plh.testdata_pre_sver(&#39;testdb1&#39;, qaid_list=[1])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_post_sver</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">cfgdict</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">query_rotation_heuristic</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_name_nsum</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">show_ranked_matches</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">ori</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.name_scoring.get_chipmatch_namescore_nonvoting_feature_flags\">\n<code class=\"descclassname\">ibeis.algo.hots.name_scoring.</code><code class=\"descname\">get_chipmatch_namescore_nonvoting_feature_flags</code><span class=\"sig-paren\">(</span><em>cm</em>, <em>qreq_=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/name_scoring/#get_chipmatch_namescore_nonvoting_feature_flags\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.name_scoring.get_chipmatch_namescore_nonvoting_feature_flags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>DEPRICATE</p>\n<p>Computes flags to desribe which features can or can not vote</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.name_scoring \u2013exec-get_chipmatch_namescore_nonvoting_feature_flags</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># FIXME: breaks when fg_on=True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.name_scoring</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots</span> <span class=\"k\">import</span> <span class=\"n\">name_scoring</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Test to make sure name score and chips score are equal when per_name=1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;spatial_verification&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:dpername=1,qsize=1,dsize=10&#39;</span><span class=\"p\">],</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:K=1,fg_on=True&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">cm_list_FILT</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">evaluate_dnids</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">featflat_list</span> <span class=\"o\">=</span> <span class=\"n\">get_chipmatch_namescore_nonvoting_feature_flags</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">,</span> <span class=\"n\">featflat_list</span><span class=\"p\">))),</span> <span class=\"s1\">&#39;all features should be able to vote in K=1, per_name=1 case&#39;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.name_scoring.get_namescore_nonvoting_feature_flags\">\n<code class=\"descclassname\">ibeis.algo.hots.name_scoring.</code><code class=\"descname\">get_namescore_nonvoting_feature_flags</code><span class=\"sig-paren\">(</span><em>fm_list</em>, <em>fs_list</em>, <em>dnid_list</em>, <em>name_groupxs</em>, <em>kpts1=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/name_scoring/#get_namescore_nonvoting_feature_flags\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.name_scoring.get_namescore_nonvoting_feature_flags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>DEPRICATE</p>\n<p>fm_list = [fm[:min(len(fm), 10)] for fm in fm_list]\nfs_list = [fs[:min(len(fs), 10)] for fs in fs_list]</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.name_scoring.testdata_chipmatch\">\n<code class=\"descclassname\">ibeis.algo.hots.name_scoring.</code><code class=\"descname\">testdata_chipmatch</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/name_scoring/#testdata_chipmatch\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.name_scoring.testdata_chipmatch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.neighbor_index\">\n<span id=\"ibeis-algo-hots-neighbor-index-module\"></span><h2>ibeis.algo.hots.neighbor_index module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.neighbor_index\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>multi_index.py as well</p>\n<p><a class=\"reference external\" href=\"https://github.com/spotify/annoy\">https://github.com/spotify/annoy</a></p>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.neighbor_index.</code><code class=\"descname\">NeighborIndex</code><span class=\"sig-paren\">(</span><em>flann_params</em>, <em>cfgstr</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>wrapper class around flann\nstores flann index and data it needs to index into</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">testdata_nnindexer</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.add_ibeis_support\">\n<code class=\"descname\">add_ibeis_support</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>new_daid_list</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.add_ibeis_support\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.add_ibeis_support\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p># TODO: ensure that the memcache changes appropriately</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.add_support\">\n<code class=\"descname\">add_support</code><span class=\"sig-paren\">(</span><em>new_daid_list</em>, <em>new_vecs_list</em>, <em>new_fgws_list</em>, <em>new_fxs_list</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.add_support\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.add_support\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>adds support data (aka data to be indexed)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>new_daid_list</strong> (<em>list</em>) \u2013 list of annotation ids that are being added</li>\n<li><strong>new_vecs_list</strong> (<em>list</em>) \u2013 list of descriptor vectors for each annotation</li>\n<li><strong>new_fgws_list</strong> (<em>list</em>) \u2013 list of weights per vector for each annotation</li>\n<li><strong>verbose</strong> (<em>bool</em>) \u2013 verbosity flag(default = True)</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index \u2013test-add_support</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">testdata_nnindexer</span><span class=\"p\">(</span><span class=\"n\">use_memcache</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">new_daid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_vec</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_vecs</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_internal_query_config2</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># get before data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">qfx2_idx1</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist1</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">new_vecs_list</span><span class=\"p\">,</span> <span class=\"n\">new_fgws_list</span><span class=\"p\">,</span> <span class=\"n\">new_fxs_list</span> <span class=\"o\">=</span> <span class=\"n\">get_support_data</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">new_daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># execute test function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">add_support</span><span class=\"p\">(</span><span class=\"n\">new_daid_list</span><span class=\"p\">,</span> <span class=\"n\">new_vecs_list</span><span class=\"p\">,</span> <span class=\"n\">new_fgws_list</span><span class=\"p\">,</span> <span class=\"n\">new_fxs_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># test before data vs after data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">qfx2_idx2</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist2</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qfx2_idx2</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"n\">qfx2_idx1</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.batch_knn\">\n<code class=\"descname\">batch_knn</code><span class=\"sig-paren\">(</span><em>vecs</em>, <em>K</em>, <em>chunksize=4096</em>, <em>label='batch knn'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.batch_knn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.batch_knn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Works like <cite>indexer.knn</cite> but the input is split into batches and\nprogress is reported to give an esimated time remaining.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.build_and_save\">\n<code class=\"descname\">build_and_save</code><span class=\"sig-paren\">(</span><em>cachedir</em>, <em>verbose=True</em>, <em>memtrack=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.build_and_save\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.build_and_save\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.debug_nnindexer\">\n<code class=\"descname\">debug_nnindexer</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.debug_nnindexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.debug_nnindexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Makes sure the indexer has valid SIFT descriptors</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.empty_neighbors\">\n<code class=\"descname\">empty_neighbors</code><span class=\"sig-paren\">(</span><em>nQfx</em>, <em>K</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.empty_neighbors\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.empty_neighbors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.ensure_indexer\">\n<code class=\"descname\">ensure_indexer</code><span class=\"sig-paren\">(</span><em>cachedir</em>, <em>verbose=True</em>, <em>force_rebuild=False</em>, <em>memtrack=None</em>, <em>prog_hook=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.ensure_indexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.ensure_indexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Ensures that you get a neighbor indexer. It either loads a chached\nindexer or rebuilds a new one.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.ext\">\n<code class=\"descname\">ext</code><em class=\"property\"> = '.flann'</em><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.ext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_cfgstr\">\n<code class=\"descname\">get_cfgstr</code><span class=\"sig-paren\">(</span><em>noquery=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_cfgstr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_cfgstr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>returns string which uniquely identified configuration and support data</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>noquery</strong> (<em>bool</em>) \u2013 if True cfgstr is only relevant to building the\nindex. No search params are returned (default = False)</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">flann_cfgstr</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">str</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index \u2013test-get_cfgstr</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">fg_on</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:fg_on=False&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">load_indexer</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">indexer</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">noquery</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flann_cfgstr</span> <span class=\"o\">=</span> <span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">get_cfgstr</span><span class=\"p\">(</span><span class=\"n\">noquery</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;flann_cfgstr = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">flann_cfgstr</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">flann_cfgstr = _FLANN((algo=kdtree,seed=42,t=8,))_VECS((11260,128)gj5nea@ni0%f3aja)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_dtype\">\n<code class=\"descname\">get_dtype</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_dtype\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_dtype\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_fname\">\n<code class=\"descname\">get_fname</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_fname\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_fname\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_fpath\">\n<code class=\"descname\">get_fpath</code><span class=\"sig-paren\">(</span><em>cachedir</em>, <em>cfgstr=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_fpath\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_fpath\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_indexed_aids\">\n<code class=\"descname\">get_indexed_aids</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_indexed_aids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_indexed_aids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_indexed_vecs\">\n<code class=\"descname\">get_indexed_vecs</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_indexed_vecs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_indexed_vecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_aids\">\n<code class=\"descname\">get_nn_aids</code><span class=\"sig-paren\">(</span><em>qfx2_nnidx</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_nn_aids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_aids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>qfx2_nnidx</strong> \u2013 (N x K) qfx2_idx[n][k] is the index of the kth\napproximate nearest data vector</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><dl class=\"docutils\">\n<dt>(N x K) qfx2_fx[n][k] is the annotation id index of the</dt>\n<dd>kth approximate nearest data vector</dd>\n</dl>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">qfx2_aid</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index \u2013exec-get_nn_aids</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">fg_on</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:fg_on=False,dim_size=450,resize_dim=area&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">load_indexer</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">indexer</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_vec</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_vecs</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_internal_qaids</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_internal_query_config2</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">num_neighbors</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">qfx2_nnidx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">num_neighbors</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_aid</span> <span class=\"o\">=</span> <span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">get_nn_aids</span><span class=\"p\">(</span><span class=\"n\">qfx2_nnidx</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qfx2_aid</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">num_neighbors</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;qfx2_aid.shape = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">qfx2_aid</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qfx2_aid</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">4</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_inbounds</span><span class=\"p\">(</span><span class=\"n\">qfx2_aid</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">1200</span><span class=\"p\">,</span> <span class=\"mi\">1300</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_axs\">\n<code class=\"descname\">get_nn_axs</code><span class=\"sig-paren\">(</span><em>qfx2_nnidx</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_nn_axs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_axs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>gets matching internal annotation indices</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_featxs\">\n<code class=\"descname\">get_nn_featxs</code><span class=\"sig-paren\">(</span><em>qfx2_nnidx</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_nn_featxs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_featxs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>qfx2_nnidx</strong> \u2013 (N x K) qfx2_idx[n][k] is the index of the kth\napproximate nearest data vector</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><dl class=\"docutils\">\n<dt>(N x K) qfx2_fx[n][k] is the feature index (w.r.t the</dt>\n<dd>source annotation) of the kth approximate\nnearest data vector</dd>\n</dl>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">qfx2_fx</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_fgws\">\n<code class=\"descname\">get_nn_fgws</code><span class=\"sig-paren\">(</span><em>qfx2_nnidx</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_nn_fgws\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_fgws\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets forground weights of neighbors</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis \u2013tf NeighborIndex.get_nn_fgws</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>qfx2_nnidx</strong> \u2013 (N x K) qfx2_idx[n][k] is the index of the kth\napproximate nearest data vector</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><dl class=\"docutils\">\n<dt>(N x K) qfx2_fgw[n][k] is the annotation id index of the</dt>\n<dd>kth forground weight</dd>\n</dl>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">qfx2_fgw</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">testdata_nnindexer</span><span class=\"p\">(</span><span class=\"n\">dbname</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_nnidx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_fgw</span> <span class=\"o\">=</span> <span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">get_nn_fgws</span><span class=\"p\">(</span><span class=\"n\">qfx2_nnidx</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_nids\">\n<code class=\"descname\">get_nn_nids</code><span class=\"sig-paren\">(</span><em>qfx2_nnidx</em>, <em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_nn_nids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_nids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>iccv hack, todo: make faster by direct lookup from idx</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_vecs\">\n<code class=\"descname\">get_nn_vecs</code><span class=\"sig-paren\">(</span><em>qfx2_nnidx</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_nn_vecs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_nn_vecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>gets matching vectors</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_prefix\">\n<code class=\"descname\">get_prefix</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_prefix\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_prefix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.get_removed_idxs\">\n<code class=\"descname\">get_removed_idxs</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.get_removed_idxs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.get_removed_idxs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>__removed_ids = nnindexer.flann._FLANN__removed_ids\ninvalid_idxs = nnindexer.get_removed_idxs()\nassert len(np.intersect1d(invalid_idxs, __removed_ids)) == len(__removed_ids)</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.init_support\">\n<code class=\"descname\">init_support</code><span class=\"sig-paren\">(</span><em>aid_list</em>, <em>vecs_list</em>, <em>fgws_list</em>, <em>fxs_list</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.init_support\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.init_support\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>prepares inverted indicies and FLANN data structure</p>\n<p>flattens vecs_list and builds a reverse index from the flattened indices\n(idx) to the original aids and fxs</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.knn\">\n<code class=\"descname\">knn</code><span class=\"sig-paren\">(</span><em>qfx2_vec</em>, <em>K</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.knn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.knn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the indices and squared distance to the nearest K neighbors.\nThe distance is noramlized between zero and one using\nVEC_PSEUDO_MAX_DISTANCE = (np.sqrt(2) * VEC_PSEUDO_MAX)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>qfx2_vec</strong> \u2013 (N x D) an array of N, D-dimensional query vectors</li>\n<li><strong>K</strong> \u2013 number of approximate nearest neighbors to find</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>Returns: tuple of (qfx2_idx, qfx2_dist)</dt>\n<dd><dl class=\"first last docutils\">\n<dt>ndarray <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">qfx2_idx[n][k] (N x K) is the index of the kth</span></dt>\n<dd>approximate nearest data vector w.r.t qfx2_vec[n]</dd>\n<dt>ndarray <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">qfx2_dist[n][k] (N x K) is the distance to the kth</span></dt>\n<dd>approximate nearest data vector w.r.t. qfx2_vec[n]\ndistance is normalized squared euclidean distance.</dd>\n</dl>\n</dd>\n<dt>CommandLine:</dt>\n<dd>python -m ibeis \u2013tf NeighborIndex.knn:0 \u2013debug2\npython -m ibeis \u2013tf NeighborIndex.knn:1</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indexer</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">testdata_nnindexer</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_vec</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_vecs</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_internal_query_config2</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">debug_nnindexer</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">check_sift_validity</span><span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"p\">),</span> <span class=\"s1\">&#39;bad SIFT properties&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; &#39;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">qfx2_dist</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;qfx2_vec.dtype = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;indexer.max_distance_sqrd = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">max_distance_sqrd</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">qfx2_dist</span> <span class=\"o\">&lt;</span> <span class=\"mf\">1.0</span><span class=\"p\">),</span> <span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"s1\">&#39;distance should be less than 1. got </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">qfx2_dist</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Ensure distance calculations are correct</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_dvec</span> <span class=\"o\">=</span> <span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">idx2_vec</span><span class=\"p\">[</span><span class=\"n\">qfx2_idx</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">targetdist</span> <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">L2_sift</span><span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dvec</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">T</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rawdist</span>    <span class=\"o\">=</span> <span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">L2_sqrd</span><span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dvec</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">qfx2_dist</span> <span class=\"o\">*</span> <span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">max_distance_sqrd</span> <span class=\"o\">==</span> <span class=\"n\">rawdist</span><span class=\"p\">),</span> <span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"s1\">&#39;inconsistant distance calculations&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">targetdist</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">),</span> <span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"s1\">&#39;inconsistant distance calculations&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"docutils\">\n<dt>Example2:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indexer</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">testdata_nnindexer</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_vec</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">get_dtype</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; &#39;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">qfx2_dist</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 2) (0, 2)</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.load\">\n<code class=\"descname\">load</code><span class=\"sig-paren\">(</span><em>cachedir=None</em>, <em>fpath=None</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.load\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.load\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Loads a cached flann neighbor indexer from disk (not the data)</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.num_indexed_annots\">\n<code class=\"descname\">num_indexed_annots</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.num_indexed_annots\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.num_indexed_annots\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.num_indexed_vecs\">\n<code class=\"descname\">num_indexed_vecs</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.num_indexed_vecs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.num_indexed_vecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.prefix1\">\n<code class=\"descname\">prefix1</code><em class=\"property\"> = 'flann'</em><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.prefix1\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.reindex\">\n<code class=\"descname\">reindex</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>memtrack=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.reindex\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.reindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>indexes all vectors with FLANN.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.remove_ibeis_support\">\n<code class=\"descname\">remove_ibeis_support</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>remove_daid_list</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.remove_ibeis_support\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.remove_ibeis_support\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p># TODO: ensure that the memcache changes appropriately</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.remove_support\">\n<code class=\"descname\">remove_support</code><span class=\"sig-paren\">(</span><em>remove_daid_list</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.remove_support\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.remove_support\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index \u2013test-remove_support</dd>\n<dt>SeeAlso:</dt>\n<dd>~/code/flann/src/python/pyflann/index.py</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># SLOW_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># xdoctest: +SKIP</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># (IMPORTANT)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">testdata_nnindexer</span><span class=\"p\">(</span><span class=\"n\">use_memcache</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remove_daid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_vec</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_vecs</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_internal_query_config2</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># get before data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">qfx2_idx1</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist1</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># execute test function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">remove_support</span><span class=\"p\">(</span><span class=\"n\">remove_daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># test before data vs after data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">qfx2_idx2</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist2</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ax2_nvecs</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_hist</span><span class=\"p\">(</span><span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">idx2_ax</span><span class=\"p\">),</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">ax2_aid</span><span class=\"p\">)))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qfx2_idx2</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"n\">ax2_nvecs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s1\">&#39;should only get points from aid 7&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qfx2_idx1</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"n\">ax2_nvecs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s1\">&#39;should get points from everyone&#39;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.requery_knn\">\n<code class=\"descname\">requery_knn</code><span class=\"sig-paren\">(</span><em>qfx2_vec</em>, <em>K</em>, <em>pad</em>, <em>impossible_aids</em>, <em>recover=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.requery_knn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.requery_knn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>hack for iccv - this is a highly coupled function</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index requery_knn</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">load_indexer</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indexer</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">indexer</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qannot</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">internal_qannots</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_vec</span> <span class=\"o\">=</span> <span class=\"n\">qannot</span><span class=\"o\">.</span><span class=\"n\">vecs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pad</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid</span> <span class=\"o\">=</span> <span class=\"n\">qannot</span><span class=\"o\">.</span><span class=\"n\">aid</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">impossible_aids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_groundtruth</span><span class=\"p\">(</span><span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">noself</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">impossible_aids</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_idx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span> <span class=\"o\">=</span> <span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">requery_knn</span><span class=\"p\">(</span><span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">,</span> <span class=\"n\">pad</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                          <span class=\"n\">impossible_aids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#indexer.get_nn_axs(qfx2_idx)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diff</span><span class=\"p\">(</span><span class=\"n\">qfx2_dist</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex.save\">\n<code class=\"descname\">save</code><span class=\"sig-paren\">(</span><em>cachedir=None</em>, <em>fpath=None</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex.save\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex.save\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Caches a flann neighbor indexer to disk (not the data)</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex2\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.neighbor_index.</code><code class=\"descname\">NeighborIndex2</code><span class=\"sig-paren\">(</span><em>flann_params=None</em>, <em>cfgstr=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex2\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex\" title=\"ibeis.algo.hots.neighbor_index.NeighborIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.hots.neighbor_index.NeighborIndex</span></code></a>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<dl class=\"staticmethod\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex2.get_support\">\n<em class=\"property\">static </em><code class=\"descname\">get_support</code><span class=\"sig-paren\">(</span><em>depc</em>, <em>aid_list</em>, <em>config</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex2.get_support\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex2.get_support\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex2.on_load\">\n<code class=\"descname\">on_load</code><span class=\"sig-paren\">(</span><em>depc</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex2.on_load\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex2.on_load\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex2.on_save\">\n<code class=\"descname\">on_save</code><span class=\"sig-paren\">(</span><em>depc</em>, <em>fpath</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#NeighborIndex2.on_save\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex2.on_save\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index.NeighborIndex2.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.NeighborIndex2.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index.get_support_data\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index.</code><code class=\"descname\">get_support_data</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>daid_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#get_support_data\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.get_support_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index get_support_data \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;:fgw_thresh=.9,maxscale_thresh=10&#39;</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;:size=2&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tup</span>  <span class=\"o\">=</span> <span class=\"n\">get_support_data</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs_list</span><span class=\"p\">,</span> <span class=\"n\">fgws_list</span><span class=\"p\">,</span> <span class=\"n\">fxs_list</span> <span class=\"o\">=</span> <span class=\"n\">tup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">all</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">fgws</span> <span class=\"o\">&gt;</span> <span class=\"o\">.</span><span class=\"mi\">9</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">fgws</span> <span class=\"ow\">in</span> <span class=\"n\">fgws_list</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;depth_profile = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">depth_profile</span><span class=\"p\">(</span><span class=\"n\">tup</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>depth_profile = [[(128, 128), (174, 128)], [128, 174], [128, 174]]</p>\n<p>I can\u2019t figure out why this tests isn\u2019t determenistic all the time and\nI can\u2019t get it to reproduce non-determenism.</p>\n<p>This could be due to theano.</p>\n<p>depth_profile = [[(39, 128), (22, 128)], [39, 22], [39, 22]]\ndepth_profile = [[(35, 128), (24, 128)], [35, 24], [35, 24]]\ndepth_profile = [[(34, 128), (31, 128)], [34, 31], [34, 31]]\ndepth_profile = [[(83, 128), (129, 128)], [83, 129], [83, 129]]\ndepth_profile = [[(13, 128), (104, 128)], [13, 104], [13, 104]]</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index.in1d_shape\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index.</code><code class=\"descname\">in1d_shape</code><span class=\"sig-paren\">(</span><em>arr1</em>, <em>arr2</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#in1d_shape\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.in1d_shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index.invert_index\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index.</code><code class=\"descname\">invert_index</code><span class=\"sig-paren\">(</span><em>vecs_list</em>, <em>fgws_list</em>, <em>ax_list</em>, <em>fxs_list</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#invert_index\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.invert_index\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Aggregates descriptors of input annotations and returns inverted information</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>vecs_list</strong> (<em>list</em>) \u2013 </li>\n<li><strong>fgws_list</strong> (<em>list</em>) \u2013 </li>\n<li><strong>ax_list</strong> (<em>list</em>) \u2013 </li>\n<li><strong>fxs_list</strong> (<em>list</em>) \u2013 </li>\n<li><strong>verbose</strong> (<em>bool</em>) \u2013 verbosity flag(default = True)</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">(idx2_vec, idx2_fgw, idx2_ax, idx2_fx)</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">tuple</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index invert_index</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rng</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">RandomState</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DIM_SIZE</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nFeat_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"n\">nFeat</span><span class=\"p\">,</span> <span class=\"n\">DIM_SIZE</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">nFeat</span> <span class=\"ow\">in</span> <span class=\"n\">nFeat_list</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fgws_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"n\">nFeat</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">nFeat</span> <span class=\"ow\">in</span> <span class=\"n\">nFeat_list</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fxs_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">nFeat</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">nFeat</span> <span class=\"ow\">in</span> <span class=\"n\">nFeat_list</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ax_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">vecs_list</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fgws_list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"n\">invert_index</span><span class=\"p\">(</span><span class=\"n\">vecs_list</span><span class=\"p\">,</span> <span class=\"n\">fgws_list</span><span class=\"p\">,</span> <span class=\"n\">ax_list</span><span class=\"p\">,</span> <span class=\"n\">fxs_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">idx2_vec</span><span class=\"p\">,</span> <span class=\"n\">idx2_fgw</span><span class=\"p\">,</span> <span class=\"n\">idx2_ax</span><span class=\"p\">,</span> <span class=\"n\">idx2_fx</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">tup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;output depth_profile = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">depth_profile</span><span class=\"p\">(</span><span class=\"n\">tup</span><span class=\"p\">),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">output depth_profile = [(8, 16), 1, 8, 8]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:species=zebra_plains&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:fgw_thresh=.999&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs_list</span><span class=\"p\">,</span> <span class=\"n\">fgws_list</span><span class=\"p\">,</span> <span class=\"n\">fxs_list</span> <span class=\"o\">=</span> <span class=\"n\">get_support_data</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ax_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">vecs_list</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">input_</span> <span class=\"o\">=</span> <span class=\"n\">vecs_list</span><span class=\"p\">,</span> <span class=\"n\">fgws_list</span><span class=\"p\">,</span> <span class=\"n\">ax_list</span><span class=\"p\">,</span> <span class=\"n\">fxs_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;input depth_profile = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">depth_profile</span><span class=\"p\">(</span><span class=\"n\">input_</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"n\">invert_index</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">input_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">idx2_vec</span><span class=\"p\">,</span> <span class=\"n\">idx2_fgw</span><span class=\"p\">,</span> <span class=\"n\">idx2_ax</span><span class=\"p\">,</span> <span class=\"n\">idx2_fx</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">tup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;output depth_profile = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">depth_profile</span><span class=\"p\">(</span><span class=\"n\">tup</span><span class=\"p\">),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>output depth_profile = [(1912, 128), 1912, 1912, 1912]</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index.testdata_nnindexer\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index.</code><code class=\"descname\">testdata_nnindexer</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index/#testdata_nnindexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index.testdata_nnindexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.neighbor_index_cache\">\n<span id=\"ibeis-algo-hots-neighbor-index-cache-module\"></span><h2>ibeis.algo.hots.neighbor_index_cache module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.neighbor_index_cache\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>NEEDS CLEANUP</p>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">UUIDMapHyrbridCache</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#UUIDMapHyrbridCache\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>Class that lets multiple ways of writing to the uuid_map\nbe swapped in and out interchangably</p>\n<p>TODO: the global read / write should periodically sync itself to disk and it\nshould be loaded from disk initially</p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache.dump\">\n<code class=\"descname\">dump</code><span class=\"sig-paren\">(</span><em>cachedir</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#UUIDMapHyrbridCache.dump\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache.dump\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache.init\">\n<code class=\"descname\">init</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#UUIDMapHyrbridCache.init\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache.init\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache.load\">\n<code class=\"descname\">load</code><span class=\"sig-paren\">(</span><em>cachedir</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#UUIDMapHyrbridCache.load\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache.load\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a cache UUIDMap</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache.read_uuid_map_dict\">\n<code class=\"descname\">read_uuid_map_dict</code><span class=\"sig-paren\">(</span><em>uuid_map_fpath</em>, <em>min_reindex_thresh</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#UUIDMapHyrbridCache.read_uuid_map_dict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache.read_uuid_map_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>uses in memory dictionary instead of disk</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache.write_uuid_map_dict\">\n<code class=\"descname\">write_uuid_map_dict</code><span class=\"sig-paren\">(</span><em>uuid_map_fpath</em>, <em>visual_uuid_list</em>, <em>daids_hashid</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#UUIDMapHyrbridCache.write_uuid_map_dict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.UUIDMapHyrbridCache.write_uuid_map_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>uses in memory dictionary instead of disk</p>\n<p>let the multi-indexer know about any big caches we\u2019ve made multi-indexer.\nAlso lets nnindexer know about other prebuilt indexers so it can attempt to\njust add points to them as to avoid a rebuild.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.background_flann_func\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">background_flann_func</code><span class=\"sig-paren\">(</span><em>cachedir</em>, <em>daid_list</em>, <em>vecs_list</em>, <em>fgws_list</em>, <em>fxs_list</em>, <em>flann_params</em>, <em>cfgstr</em>, <em>uuid_map_fpath</em>, <em>daids_hashid</em>, <em>visual_uuid_list</em>, <em>min_reindex_thresh</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#background_flann_func\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.background_flann_func\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FIXME: Duplicate code</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.build_nnindex_cfgstr\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">build_nnindex_cfgstr</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>daid_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#build_nnindex_cfgstr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.build_nnindex_cfgstr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>builds a string that  uniquely identified an indexer built with parameters\nfrom the input query requested and indexing descriptor from the input\nannotation ids</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>qreq</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.query_request.QueryRequest\" title=\"ibeis.algo.hots.query_request.QueryRequest\"><em>QueryRequest</em></a>) \u2013 query request object with hyper-parameters</li>\n<li><strong>daid_list</strong> (<em>list</em>) \u2013 </li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">nnindex_cfgstr</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index_cache \u2013test-build_nnindex_cfgstr</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"o\">=</span><span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_SPECIES</span><span class=\"o\">.</span><span class=\"n\">ZEB_PLAIN</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">cfgdict</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">fg_on</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindex_cfgstr</span> <span class=\"o\">=</span> <span class=\"n\">build_nnindex_cfgstr</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">nnindex_cfgstr</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>_VUUIDS((6)ylydksaqdigdecdd)_FLANN(8_kdtrees)_FeatureWeight(detector=cnn,sz256,thresh=20,ksz=20,enabled=False)_FeatureWeight(detector=cnn,sz256,thresh=20,ksz=20,enabled=False)</p>\n<p>_VUUIDS((6)ylydksaqdigdecdd)_FLANN(8_kdtrees)_FEATWEIGHT(OFF)_FEAT(<a href=\"#id9\"><span class=\"problematic\" id=\"id10\">hesaff+sift_</span></a>)_CHIP(sz450)</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.can_request_background_nnindexer\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">can_request_background_nnindexer</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#can_request_background_nnindexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.can_request_background_nnindexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.check_background_process\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">check_background_process</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#check_background_process\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.check_background_process\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>checks to see if the process has finished and then\nwrites the uuid map to disk</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.clear_memcache\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">clear_memcache</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#clear_memcache\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.clear_memcache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.clear_uuid_cache\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">clear_uuid_cache</code><span class=\"sig-paren\">(</span><em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#clear_uuid_cache\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.clear_uuid_cache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index_cache \u2013test-clear_uuid_cache</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:fg_on=True&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fgws_list</span> <span class=\"o\">=</span> <span class=\"n\">clear_uuid_cache</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">fgws_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.get_data_cfgstr\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">get_data_cfgstr</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>daid_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#get_data_cfgstr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.get_data_cfgstr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>part 2 data hash id</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.get_nnindexer_uuid_map_fpath\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">get_nnindexer_uuid_map_fpath</code><span class=\"sig-paren\">(</span><em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#get_nnindexer_uuid_map_fpath\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.get_nnindexer_uuid_map_fpath\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index_cache get_nnindexer_uuid_map_fpath</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:fgw_thresh=.3&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">uuid_map_fpath</span> <span class=\"o\">=</span> <span class=\"n\">get_nnindexer_uuid_map_fpath</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">path_ndir_split</span><span class=\"p\">(</span><span class=\"n\">uuid_map_fpath</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>\u2026/_ibeis_cache/flann/uuid_map_mzwwsbjisbkdxorl.cPkl\n\u2026/_ibeis_cache/flann/uuid_map_FLANN(8_kdtrees_fgwthrsh=0.3)_Feat(hesaff+sift)_Chip(sz700,width).cPkl\n\u2026/_ibeis_cache/flann/uuid_map_FLANN(8_kdtrees)_Feat(hesaff+sift)_Chip(sz700,width).cPkl\n\u2026/_ibeis_cache/flann/uuid_map_FLANN(8_kdtrees)_FEAT(<a href=\"#id11\"><span class=\"problematic\" id=\"id12\">hesaff+sift_</span></a>)_CHIP(sz450).cPkl</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.group_daids_by_cached_nnindexer\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">group_daids_by_cached_nnindexer</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>daid_list</em>, <em>min_reindex_thresh</em>, <em>max_covers=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#group_daids_by_cached_nnindexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.group_daids_by_cached_nnindexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index_cache \u2013test-group_daids_by_cached_nnindexer</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ZEB_PLAIN</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_SPECIES</span><span class=\"o\">.</span><span class=\"n\">ZEB_PLAIN</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"o\">=</span><span class=\"n\">ZEB_PLAIN</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Set the params a bit lower</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">max_covers</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">min_reindex_thresh</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">min_reindex_thresh</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">min_reindex_thresh</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># STEP 0: CLEAR THE CACHE</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">clear_uuid_cache</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># STEP 1: ASSERT EMPTY INDEX</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"o\">=</span><span class=\"n\">ZEB_PLAIN</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">uncovered_aids</span><span class=\"p\">,</span> <span class=\"n\">covered_aids_list</span> <span class=\"o\">=</span> <span class=\"n\">group_daids_by_cached_nnindexer</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">min_reindex_thresh</span><span class=\"p\">,</span> <span class=\"n\">max_covers</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result1</span> <span class=\"o\">=</span> <span class=\"n\">uncovered_aids</span><span class=\"p\">,</span> <span class=\"n\">covered_aids_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">result1</span><span class=\"p\">,</span> <span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[]),</span> <span class=\"s1\">&#39;pre request&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># TEST 2: SHOULD MAKE 123 COVERED</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span> <span class=\"o\">=</span> <span class=\"n\">request_memcached_ibeis_nnindexer</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">uncovered_aids</span><span class=\"p\">,</span> <span class=\"n\">covered_aids_list</span> <span class=\"o\">=</span> <span class=\"n\">group_daids_by_cached_nnindexer</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">min_reindex_thresh</span><span class=\"p\">,</span> <span class=\"n\">max_covers</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result2</span> <span class=\"o\">=</span> <span class=\"n\">uncovered_aids</span><span class=\"p\">,</span> <span class=\"n\">covered_aids_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">result2</span><span class=\"p\">,</span> <span class=\"p\">([],</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]]),</span> <span class=\"s1\">&#39;post request&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.new_neighbor_index\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">new_neighbor_index</code><span class=\"sig-paren\">(</span><em>daid_list</em>, <em>vecs_list</em>, <em>fgws_list</em>, <em>fxs_list</em>, <em>flann_params</em>, <em>cachedir</em>, <em>cfgstr</em>, <em>force_rebuild=False</em>, <em>verbose=True</em>, <em>memtrack=None</em>, <em>prog_hook=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#new_neighbor_index\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.new_neighbor_index\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>constructs neighbor index independent of ibeis</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>daid_list</strong> (<em>list</em>) \u2013 </li>\n<li><strong>vecs_list</strong> (<em>list</em>) \u2013 </li>\n<li><strong>fgws_list</strong> (<em>list</em>) \u2013 </li>\n<li><strong>flann_params</strong> (<em>dict</em>) \u2013 </li>\n<li><strong>flann_cachedir</strong> (<em>None</em>) \u2013 </li>\n<li><strong>nnindex_cfgstr</strong> (<em>str</em>) \u2013 </li>\n<li><strong>use_memcache</strong> (<em>bool</em>) \u2013 </li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\">nnindexer</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index_cache \u2013test-new_neighbor_index</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:species=zebra_plains&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:fgw_thresh=.999&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindex_cfgstr</span> <span class=\"o\">=</span> <span class=\"n\">build_nnindex_cfgstr</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">exec_funckw</span><span class=\"p\">(</span><span class=\"n\">new_neighbor_index</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgstr</span> <span class=\"o\">=</span> <span class=\"n\">nnindex_cfgstr</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cachedir</span>     <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_flann_cachedir</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flann_params</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">flann_params</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get annot descriptors to index</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs_list</span><span class=\"p\">,</span> <span class=\"n\">fgws_list</span><span class=\"p\">,</span> <span class=\"n\">fxs_list</span> <span class=\"o\">=</span> <span class=\"n\">get_support_data</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span> <span class=\"o\">=</span> <span class=\"n\">new_neighbor_index</span><span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">vecs_list</span><span class=\"p\">,</span> <span class=\"n\">fgws_list</span><span class=\"p\">,</span> <span class=\"n\">fxs_list</span><span class=\"p\">,</span> <span class=\"n\">flann_params</span><span class=\"p\">,</span> <span class=\"n\">cachedir</span><span class=\"p\">,</span> <span class=\"n\">cfgstr</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;nnindexer.ax2_aid = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">ax2_aid</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">nnindexer.ax2_aid = [1 2 3 4 5 6]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.print_uuid_cache\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">print_uuid_cache</code><span class=\"sig-paren\">(</span><em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#print_uuid_cache\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.print_uuid_cache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index_cache \u2013test-print_uuid_cache</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_Master0&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:fg_on=False&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">print_uuid_cache</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">nnindexer</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.request_augmented_ibeis_nnindexer\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">request_augmented_ibeis_nnindexer</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>daid_list</em>, <em>verbose=True</em>, <em>use_memcache=True</em>, <em>force_rebuild=False</em>, <em>memtrack=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#request_augmented_ibeis_nnindexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.request_augmented_ibeis_nnindexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>DO NOT USE. THIS FUNCTION CAN CURRENTLY CAUSE A SEGFAULT</p>\n<p>tries to give you an indexer for the requested daids using the least amount\nof computation possible. By loading and adding to a partially build nnindex\nif possible and if that fails fallbs back to request_memcache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>qreq</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.query_request.QueryRequest\" title=\"ibeis.algo.hots.query_request.QueryRequest\"><em>QueryRequest</em></a>) \u2013 query request object with hyper-parameters</li>\n<li><strong>daid_list</strong> (<em>list</em>) \u2013 </li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">nnindex_cfgstr</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">str</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index_cache \u2013test-request_augmented_ibeis_nnindexer</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># build test data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ZEB_PLAIN</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_SPECIES</span><span class=\"o\">.</span><span class=\"n\">ZEB_PLAIN</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">use_memcache</span><span class=\"p\">,</span> <span class=\"n\">max_covers</span><span class=\"p\">,</span> <span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"o\">=</span><span class=\"n\">ZEB_PLAIN</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">min_reindex_thresh</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">min_reindex_thresh</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">min_reindex_thresh</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># CLEAR CACHE for clean test</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">clear_uuid_cache</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># LOAD 3 AIDS INTO CACHE</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">aid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"o\">=</span><span class=\"n\">ZEB_PLAIN</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Should fallback</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span> <span class=\"o\">=</span> <span class=\"n\">request_augmented_ibeis_nnindexer</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">aid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># assert the fallback</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">uncovered_aids</span><span class=\"p\">,</span> <span class=\"n\">covered_aids_list</span> <span class=\"o\">=</span> <span class=\"n\">group_daids_by_cached_nnindexer</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">min_reindex_thresh</span><span class=\"p\">,</span> <span class=\"n\">max_covers</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result2</span> <span class=\"o\">=</span> <span class=\"n\">uncovered_aids</span><span class=\"p\">,</span> <span class=\"n\">covered_aids_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">result2</span><span class=\"p\">,</span> <span class=\"p\">([</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]]),</span> <span class=\"s1\">&#39;pre augment&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Should augment</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span> <span class=\"o\">=</span> <span class=\"n\">request_augmented_ibeis_nnindexer</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">uncovered_aids</span><span class=\"p\">,</span> <span class=\"n\">covered_aids_list</span> <span class=\"o\">=</span> <span class=\"n\">group_daids_by_cached_nnindexer</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">min_reindex_thresh</span><span class=\"p\">,</span> <span class=\"n\">max_covers</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result3</span> <span class=\"o\">=</span> <span class=\"n\">uncovered_aids</span><span class=\"p\">,</span> <span class=\"n\">covered_aids_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">result3</span><span class=\"p\">,</span> <span class=\"p\">([],</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]]),</span> <span class=\"s1\">&#39;post augment&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Should fallback</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer2</span> <span class=\"o\">=</span> <span class=\"n\">request_augmented_ibeis_nnindexer</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">nnindexer</span> <span class=\"ow\">is</span> <span class=\"n\">nnindexer2</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.request_background_nnindexer\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">request_background_nnindexer</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>daid_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#request_background_nnindexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.request_background_nnindexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FIXME: Duplicate code</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>qreq</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.query_request.QueryRequest\" title=\"ibeis.algo.hots.query_request.QueryRequest\"><em>QueryRequest</em></a>) \u2013 query request object with hyper-parameters</li>\n<li><strong>daid_list</strong> (<em>list</em>) \u2013 </li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index_cache \u2013test-request_background_nnindexer</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># build test data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"o\">=</span><span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_SPECIES</span><span class=\"o\">.</span><span class=\"n\">ZEB_PLAIN</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># execute function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">request_background_nnindexer</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># verify results</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.request_diskcached_ibeis_nnindexer\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">request_diskcached_ibeis_nnindexer</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>daid_list</em>, <em>nnindex_cfgstr=None</em>, <em>verbose=True</em>, <em>force_rebuild=False</em>, <em>memtrack=None</em>, <em>prog_hook=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#request_diskcached_ibeis_nnindexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.request_diskcached_ibeis_nnindexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>builds new NeighborIndexer which will try to use a disk cached flann if\navailable</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>qreq</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.query_request.QueryRequest\" title=\"ibeis.algo.hots.query_request.QueryRequest\"><em>QueryRequest</em></a>) \u2013 query request object with hyper-parameters</li>\n<li><strong>daid_list</strong> (<em>list</em>) \u2013 </li>\n<li><strong>nnindex_cfgstr</strong> \u2013 </li>\n<li><strong>verbose</strong> (<em>bool</em>) \u2013 </li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">nnindexer</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">NeighborIndexer</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index_cache \u2013test-request_diskcached_ibeis_nnindexer</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># build test data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"o\">=</span><span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_SPECIES</span><span class=\"o\">.</span><span class=\"n\">ZEB_PLAIN</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindex_cfgstr</span> <span class=\"o\">=</span> <span class=\"n\">build_nnindex_cfgstr</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># execute function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span> <span class=\"o\">=</span> <span class=\"n\">request_diskcached_ibeis_nnindexer</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">nnindex_cfgstr</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># verify results</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">nnindexer</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.request_ibeis_nnindexer\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">request_ibeis_nnindexer</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>verbose=True</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#request_ibeis_nnindexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.request_ibeis_nnindexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>CALLED BY QUERYREQUST::LOAD_INDEXER\nIBEIS interface into neighbor_index_cache</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>qreq</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.query_request.QueryRequest\" title=\"ibeis.algo.hots.query_request.QueryRequest\"><em>QueryRequest</em></a>) \u2013 hyper-parameters</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">nnindexer</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">NeighborIndexer</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index_cache request_ibeis_nnindexer</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">testdata_nnindexer</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span> <span class=\"o\">=</span> <span class=\"n\">request_ibeis_nnindexer</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.request_memcached_ibeis_nnindexer\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">request_memcached_ibeis_nnindexer</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>daid_list</em>, <em>use_memcache=True</em>, <em>verbose=True</em>, <em>veryverbose=False</em>, <em>force_rebuild=False</em>, <em>memtrack=None</em>, <em>prog_hook=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#request_memcached_ibeis_nnindexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.request_memcached_ibeis_nnindexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FOR INTERNAL USE ONLY\ntakes custom daid list. might not be the same as what is in <a href=\"#id13\"><span class=\"problematic\" id=\"id14\">qreq_</span></a></p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.neighbor_index_cache \u2013test-request_memcached_ibeis_nnindexer</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># build test data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">min_reindex_thresh</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ZEB_PLAIN</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">const</span><span class=\"o\">.</span><span class=\"n\">TEST_SPECIES</span><span class=\"o\">.</span><span class=\"n\">ZEB_PLAIN</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">(</span><span class=\"n\">species</span><span class=\"o\">=</span><span class=\"n\">ZEB_PLAIN</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">use_memcache</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># execute function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span> <span class=\"o\">=</span> <span class=\"n\">request_memcached_ibeis_nnindexer</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">use_memcache</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># verify results</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">nnindexer</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.neighbor_index_cache.testdata_nnindexer\">\n<code class=\"descclassname\">ibeis.algo.hots.neighbor_index_cache.</code><code class=\"descname\">testdata_nnindexer</code><span class=\"sig-paren\">(</span><em>dbname='testdb1'</em>, <em>with_indexer=True</em>, <em>use_memcache=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/neighbor_index_cache/#testdata_nnindexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.neighbor_index_cache.testdata_nnindexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>Ignore:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">testdata_nnindexer</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_Master1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cov</span><span class=\"p\">(</span><span class=\"n\">nnindexer</span><span class=\"o\">.</span><span class=\"n\">idx2_vec</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">ensureqt</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index_cache</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnindexer</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">testdata_nnindexer</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.nn_weights\">\n<span id=\"ibeis-algo-hots-nn-weights-module\"></span><h2>ibeis.algo.hots.nn_weights module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.nn_weights\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.all_normalized_weights_test\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">all_normalized_weights_test</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#all_normalized_weights_test\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.all_normalized_weights_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.nn_weights \u2013exec-all_normalized_weights_test</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">all_normalized_weights_test</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.apply_normweight\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">apply_normweight</code><span class=\"sig-paren\">(</span><em>normweight_fn</em>, <em>neighb_normk</em>, <em>neighb_idx</em>, <em>neighb_dist</em>, <em>Knorm</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#apply_normweight\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.apply_normweight\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>helper applies the normalized weight function to one query annotation</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>normweight_fn</strong> (<em>func</em>) \u2013 chosen weight function e.g. lnbnn</li>\n<li><strong>qaid</strong> (<em>int</em>) \u2013 query annotation id</li>\n<li><strong>neighb_idx</strong> (<em>ndarray</em><em>[</em><em>int32_t</em><em>, </em><em>ndims=2</em><em>]</em>) \u2013 mapping from query feature\nindex to db neighbor index</li>\n<li><strong>neighb_dist</strong> (<em>ndarray</em>) \u2013 mapping from query feature index to dist</li>\n<li><strong>Knorm</strong> (<em>int</em>) \u2013 </li>\n<li><strong>qreq</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.query_request.QueryRequest\" title=\"ibeis.algo.hots.query_request.QueryRequest\"><em>QueryRequest</em></a>) \u2013 query request object with hyper-parameters</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">neighb_normweight</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">ndarray</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.nn_weights \u2013test-apply_normweight</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots</span> <span class=\"k\">import</span> <span class=\"n\">nn_weights</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#cfgdict = {&#39;K&#39;:10, &#39;Knorm&#39;: 10, &#39;normalizer_rule&#39;: &#39;name&#39;,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#           &#39;dim_size&#39;: 450, &#39;resize_dim&#39;: &#39;area&#39;}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#tup = plh.testdata_pre_weight_neighbors(cfgdict=cfgdict)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:K=10,Knorm=10,normalizer_rule=name,dim_size=450,resize_dim=area&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Knorm</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">Knorm</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">normweight_fn</span> <span class=\"o\">=</span> <span class=\"n\">lnbnn_fn</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">normalizer_rule</span>  <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">normalizer_rule</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">neighb_idx</span><span class=\"p\">,</span> <span class=\"n\">neighb_dist</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">nns_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">neighb_normk</span> <span class=\"o\">=</span> <span class=\"n\">get_normk</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">neighb_idx</span><span class=\"p\">,</span> <span class=\"n\">Knorm</span><span class=\"p\">,</span> <span class=\"n\">normalizer_rule</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">neighb_normweight</span> <span class=\"o\">=</span> <span class=\"n\">nn_weights</span><span class=\"o\">.</span><span class=\"n\">apply_normweight</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>  <span class=\"n\">normweight_fn</span><span class=\"p\">,</span> <span class=\"n\">neighb_normk</span><span class=\"p\">,</span> <span class=\"n\">neighb_idx</span><span class=\"p\">,</span> <span class=\"n\">neighb_dist</span><span class=\"p\">,</span> <span class=\"n\">Knorm</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_inbounds</span><span class=\"p\">(</span><span class=\"n\">neighb_normweight</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(),</span> <span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">950</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.bar_l2_fn\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">bar_l2_fn</code><span class=\"sig-paren\">(</span><em>vdist</em>, <em>ndist</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#bar_l2_fn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.bar_l2_fn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The feature weight is (1 - the euclidian distance\nbetween the features). The normalizers are unused.</p>\n<p>(not really a normaalized function)</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span> <span class=\"o\">=</span> <span class=\"n\">testdata_vn_dists</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">bar_l2_fn</span><span class=\"p\">(</span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">hz_str</span><span class=\"p\">(</span><span class=\"s1\">&#39;barl2  = &#39;</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">barl2  = np.array([[1.  , 0.6 , 0.41],</span>\n<span class=\"go\">                   [0.83, 0.7 , 0.49],</span>\n<span class=\"go\">                   [0.87, 0.58, 0.27],</span>\n<span class=\"go\">                   [0.88, 0.63, 0.46],</span>\n<span class=\"go\">                   [0.82, 0.53, 0.5 ]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.const_match_weighter\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">const_match_weighter</code><span class=\"sig-paren\">(</span><em>nns_list</em>, <em>nnvalid0_list</em>, <em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#const_match_weighter\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.const_match_weighter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#tup = plh.testdata_pre_weight_neighbors(&#39;PZ_MTEST&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">tup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">constvote_weight_list</span> <span class=\"o\">=</span> <span class=\"n\">const_match_weighter</span><span class=\"p\">(</span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;constvote_weight_list = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">constvote_weight_list</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.fg_match_weighter\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">fg_match_weighter</code><span class=\"sig-paren\">(</span><em>nns_list</em>, <em>nnvalid0_list</em>, <em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#fg_match_weighter\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.fg_match_weighter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>foreground feature match weighting</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.nn_weights \u2013exec-fg_match_weighter</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#tup = plh.testdata_pre_weight_neighbors(&#39;PZ_MTEST&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#ibs, qreq_, nns_list, nnvalid0_list = tup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">,</span> <span class=\"n\">sorted_</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">fg_on</span> <span class=\"o\">==</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bug setting custom params fg_on&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fgvotes_list</span> <span class=\"o\">=</span> <span class=\"n\">fg_match_weighter</span><span class=\"p\">(</span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;fgvotes_list = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">fgvotes_list</span><span class=\"p\">,))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.get_name_normalizers\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">get_name_normalizers</code><span class=\"sig-paren\">(</span><em>qaid</em>, <em>qreq_</em>, <em>Knorm</em>, <em>neighb_idx</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#get_name_normalizers\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.get_name_normalizers\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>helper normalizers for \u2018name\u2019 normalizer_rule</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>qaid</strong> (<em>int</em>) \u2013 query annotation id</li>\n<li><strong>qreq</strong> (<em>ibeis.QueryRequest</em>) \u2013 hyper-parameters</li>\n<li><strong>Knorm</strong> (<em>int</em>) \u2013 </li>\n<li><strong>neighb_idx</strong> (<em>ndarray</em>) \u2013 </li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">neighb_normk</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">ndarray</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots</span> <span class=\"k\">import</span> <span class=\"n\">nn_weights</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#cfgdict = {&#39;K&#39;:10, &#39;Knorm&#39;: 10, &#39;normalizer_rule&#39;: &#39;name&#39;}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#tup = plh.testdata_pre_weight_neighbors(cfgdict=cfgdict)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:K=10,Knorm=10,normalizer_rule=name&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Knorm</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">Knorm</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">neighb_idx</span><span class=\"p\">,</span> <span class=\"n\">neighb_dist</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">nns_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">neighb_normk</span> <span class=\"o\">=</span> <span class=\"n\">get_name_normalizers</span><span class=\"p\">(</span><span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">Knorm</span><span class=\"p\">,</span> <span class=\"n\">neighb_idx</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.get_normk\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">get_normk</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>qaid</em>, <em>neighb_idx</em>, <em>Knorm</em>, <em>normalizer_rule</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#get_normk\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.get_normk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get positions of the LNBNN/ratio tests normalizers</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Knorm&#39;</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">&#39;normalizer_rule&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>           <span class=\"s1\">&#39;dim_size&#39;</span><span class=\"p\">:</span> <span class=\"mi\">450</span><span class=\"p\">,</span> <span class=\"s1\">&#39;resize_dim&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;area&#39;</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#tup = plh.testdata_pre_weight_neighbors(cfgdict=cfgdict)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:K=10,Knorm=10,normalizer_rule=name,dim_size=450,resize_dim=area&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">neighb_idx</span><span class=\"p\">,</span> <span class=\"n\">neighb_dist</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">nns_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">K</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Knorm</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">Knorm</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">neighb_normk1</span> <span class=\"o\">=</span> <span class=\"n\">get_normk</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">neighb_idx</span><span class=\"p\">,</span> <span class=\"n\">Knorm</span><span class=\"p\">,</span> <span class=\"s1\">&#39;last&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">neighb_normk2</span> <span class=\"o\">=</span> <span class=\"n\">get_normk</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">neighb_idx</span><span class=\"p\">,</span> <span class=\"n\">Knorm</span><span class=\"p\">,</span> <span class=\"s1\">&#39;name&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">neighb_normk1</span> <span class=\"o\">==</span> <span class=\"n\">Knorm</span> <span class=\"o\">+</span> <span class=\"n\">K</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">neighb_normk2</span> <span class=\"o\">&lt;=</span> <span class=\"n\">Knorm</span> <span class=\"o\">+</span> <span class=\"n\">K</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">neighb_normk2</span> <span class=\"o\">&gt;</span> <span class=\"n\">K</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.gravity_match_weighter\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">gravity_match_weighter</code><span class=\"sig-paren\">(</span><em>nns_list</em>, <em>nnvalid0_list</em>, <em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#gravity_match_weighter\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.gravity_match_weighter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.lnbnn_fn\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">lnbnn_fn</code><span class=\"sig-paren\">(</span><em>vdist</em>, <em>ndist</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#lnbnn_fn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.lnbnn_fn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Locale Naive Bayes Nearest Neighbor weighting</p>\n<p class=\"rubric\">References</p>\n<p><a class=\"reference external\" href=\"http://www.cs.ubc.ca/~lowe/papers/12mccannCVPR.pdf\">http://www.cs.ubc.ca/~lowe/papers/12mccannCVPR.pdf</a>\n<a class=\"reference external\" href=\"http://www.cs.ubc.ca/~sanchom/local-naive-bayes-nearest-neighbor\">http://www.cs.ubc.ca/~sanchom/local-naive-bayes-nearest-neighbor</a></p>\n<dl class=\"docutils\">\n<dt>Sympy:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">sympy</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#https://github.com/sympy/sympy/pull/10247</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">sympy</span> <span class=\"k\">import</span> <span class=\"n\">log</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">sympy.stats</span> <span class=\"k\">import</span> <span class=\"n\">P</span><span class=\"p\">,</span> <span class=\"n\">E</span><span class=\"p\">,</span> <span class=\"n\">variance</span><span class=\"p\">,</span> <span class=\"n\">Die</span><span class=\"p\">,</span> <span class=\"n\">Normal</span><span class=\"p\">,</span> <span class=\"n\">FiniteRV</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">C</span><span class=\"p\">,</span> <span class=\"n\">Cbar</span> <span class=\"o\">=</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">symbols</span><span class=\"p\">(</span><span class=\"s1\">&#39;C Cbar&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d_i</span> <span class=\"o\">=</span> <span class=\"n\">Die</span><span class=\"p\">(</span><span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">symbols</span><span class=\"p\">(</span><span class=\"s1\">&#39;di&#39;</span><span class=\"p\">),</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">P</span><span class=\"p\">(</span><span class=\"n\">di</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">P</span><span class=\"p\">(</span><span class=\"n\">di</span><span class=\"p\">,</span> <span class=\"n\">Cbar</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">PdiC</span><span class=\"p\">,</span> <span class=\"n\">PdiCbar</span> <span class=\"o\">=</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">symbols</span><span class=\"p\">(</span><span class=\"s1\">&#39;PdiC, PdiCbar&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">oddsC</span> <span class=\"o\">=</span> <span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">PdiC</span> <span class=\"o\">/</span> <span class=\"n\">PdiCbar</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">simplify</span><span class=\"p\">(</span><span class=\"n\">oddsC</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">vtool</span> <span class=\"k\">as</span> <span class=\"nn\">vt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vt</span><span class=\"o\">.</span><span class=\"n\">check_expr_eq</span><span class=\"p\">(</span><span class=\"n\">oddsC</span><span class=\"p\">,</span> <span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">PdiC</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">PdiCbar</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span> <span class=\"o\">=</span> <span class=\"n\">testdata_vn_dists</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">lnbnn_fn</span><span class=\"p\">(</span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">hz_str</span><span class=\"p\">(</span><span class=\"s1\">&#39;lnbnn  = &#39;</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">lnbnn  = np.array([[0.62, 0.22, 0.03],</span>\n<span class=\"go\">                   [0.35, 0.22, 0.01],</span>\n<span class=\"go\">                   [0.87, 0.58, 0.27],</span>\n<span class=\"go\">                   [0.67, 0.42, 0.25],</span>\n<span class=\"go\">                   [0.59, 0.3 , 0.27]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.loglnbnn_fn\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">loglnbnn_fn</code><span class=\"sig-paren\">(</span><em>vdist</em>, <em>ndist</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#loglnbnn_fn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.loglnbnn_fn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>Ignore:</dt>\n<dd>import vtool as vt\nvt.check_expr_eq(\u2018log(d) - log(n)\u2019, \u2018log(d / n)\u2019)   # True\nvt.check_expr_eq(\u2018log(d) / log(n)\u2019, \u2018log(d - n)\u2019)</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span> <span class=\"o\">=</span> <span class=\"n\">testdata_vn_dists</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">loglnbnn_fn</span><span class=\"p\">(</span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">hz_str</span><span class=\"p\">(</span><span class=\"s1\">&#39;loglnbnn  = &#39;</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">loglnbnn  = np.array([[0.48, 0.2 , 0.03],</span>\n<span class=\"go\">                      [0.3 , 0.2 , 0.01],</span>\n<span class=\"go\">                      [0.63, 0.46, 0.24],</span>\n<span class=\"go\">                      [0.51, 0.35, 0.22],</span>\n<span class=\"go\">                      [0.46, 0.26, 0.24]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.logratio_fn\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">logratio_fn</code><span class=\"sig-paren\">(</span><em>vdist</em>, <em>ndist</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#logratio_fn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.logratio_fn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span> <span class=\"o\">=</span> <span class=\"n\">testdata_vn_dists</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">normonly_fn</span><span class=\"p\">(</span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">np.array([[0.62, 0.62, 0.62],</span>\n<span class=\"go\">          [0.52, 0.52, 0.52],</span>\n<span class=\"go\">          [1.  , 1.  , 1.  ],</span>\n<span class=\"go\">          [0.79, 0.79, 0.79],</span>\n<span class=\"go\">          [0.77, 0.77, 0.77]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.mark_name_valid_normalizers\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">mark_name_valid_normalizers</code><span class=\"sig-paren\">(</span><em>qnid</em>, <em>neighb_topnid</em>, <em>neighb_normnid</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#mark_name_valid_normalizers\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.mark_name_valid_normalizers\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Helper func that allows matches only to the first result for a name</p>\n<p>Each query feature finds its K matches and Kn normalizing matches. These\nare the candidates from which it can choose a set of matches and a single\nnormalizer.</p>\n<p>A normalizer is marked as invalid if it belongs to a name that was also in\nits feature\u2019s candidate matching set.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>neighb_topnid</strong> (<em>ndarray</em>) \u2013 marks the names a feature matches</li>\n<li><strong>neighb_normnid</strong> (<em>ndarray</em>) \u2013 marks the names of the feature normalizers</li>\n<li><strong>qnid</strong> (<em>int</em>) \u2013 query name id</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\">neighb_selnorm - index of the selected normalizer for each query feature</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.nn_weights \u2013exec-mark_name_valid_normalizers</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qnid</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">neighb_topnid</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                        <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                        <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                        <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                        <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                        <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                        <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                        <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int32</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">neighb_normnid</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                         <span class=\"p\">[</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int32</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">neighb_selnorm</span> <span class=\"o\">=</span> <span class=\"n\">mark_name_valid_normalizers</span><span class=\"p\">(</span><span class=\"n\">qnid</span><span class=\"p\">,</span> <span class=\"n\">neighb_topnid</span><span class=\"p\">,</span> <span class=\"n\">neighb_normnid</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">neighb_topnid</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Knorm</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">neighb_normnid</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">neighb_normk_</span> <span class=\"o\">=</span> <span class=\"n\">neighb_selnorm</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">Knorm</span><span class=\"p\">)</span>  <span class=\"c1\"># convert form negative to pos indexes</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">neighb_normk_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">[2 1 2 0 0 0 2 0]</span>\n</pre></div>\n</div>\n<dl class=\"docutils\">\n<dt>Ignore:</dt>\n<dd>print(ut.doctest_repr(neighb_normnid, \u2018neighb_normnid\u2019, verbose=False))\nprint(ut.doctest_repr(neighb_topnid, \u2018neighb_topnid\u2019, verbose=False))</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.nn_normalized_weight\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">nn_normalized_weight</code><span class=\"sig-paren\">(</span><em>normweight_fn</em>, <em>nns_list</em>, <em>nnvalid0_list</em>, <em>qreq_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#nn_normalized_weight\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.nn_normalized_weight\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generic function to weight nearest neighbors</p>\n<p>ratio, lnbnn, and other nearest neighbor based functions use this</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>normweight_fn</strong> (<em>func</em>) \u2013 chosen weight function e.g. lnbnn</li>\n<li><strong>nns_list</strong> (<em>dict</em>) \u2013 query descriptor nearest neighbors and distances.</li>\n<li><strong>nnvalid0_list</strong> (<em>list</em>) \u2013 list of neighbors preflagged as valid</li>\n<li><strong>qreq</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.query_request.QueryRequest\" title=\"ibeis.algo.hots.query_request.QueryRequest\"><em>QueryRequest</em></a>) \u2013 hyper-parameters</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">weights_list</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">list</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.nn_weights nn_normalized_weight \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#tup = plh.testdata_pre_weight_neighbors(&#39;PZ_MTEST&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#ibs, qreq_, nns_list, nnvalid0_list = tup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">normweight_fn</span> <span class=\"o\">=</span> <span class=\"n\">lnbnn_fn</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">weights_list1</span><span class=\"p\">,</span> <span class=\"n\">normk_list1</span> <span class=\"o\">=</span> <span class=\"n\">nn_normalized_weight</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">normweight_fn</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">weights1</span> <span class=\"o\">=</span> <span class=\"n\">weights_list1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nn_normonly_weight</span> <span class=\"o\">=</span> <span class=\"n\">NN_WEIGHT_FUNC_DICT</span><span class=\"p\">[</span><span class=\"s1\">&#39;lnbnn&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">weights_list2</span><span class=\"p\">,</span> <span class=\"n\">normk_list2</span> <span class=\"o\">=</span> <span class=\"n\">nn_normonly_weight</span><span class=\"p\">(</span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">weights2</span> <span class=\"o\">=</span> <span class=\"n\">weights_list2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">weights1</span> <span class=\"o\">==</span> <span class=\"n\">weights2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_inbounds</span><span class=\"p\">(</span><span class=\"n\">weights1</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(),</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">510</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#tup = plh.testdata_pre_weight_neighbors(&#39;PZ_MTEST&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">normweight_fn</span> <span class=\"o\">=</span> <span class=\"n\">ratio_fn</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">weights_list1</span><span class=\"p\">,</span> <span class=\"n\">normk_list1</span> <span class=\"o\">=</span> <span class=\"n\">nn_normalized_weight</span><span class=\"p\">(</span><span class=\"n\">normweight_fn</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">weights1</span> <span class=\"o\">=</span> <span class=\"n\">weights_list1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nn_normonly_weight</span> <span class=\"o\">=</span> <span class=\"n\">NN_WEIGHT_FUNC_DICT</span><span class=\"p\">[</span><span class=\"s1\">&#39;ratio&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">weights_list2</span><span class=\"p\">,</span> <span class=\"n\">normk_list2</span> <span class=\"o\">=</span> <span class=\"n\">nn_normonly_weight</span><span class=\"p\">(</span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">weights2</span> <span class=\"o\">=</span> <span class=\"n\">weights_list2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">weights1</span> <span class=\"o\">==</span> <span class=\"n\">weights2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_inbounds</span><span class=\"p\">(</span><span class=\"n\">weights1</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(),</span> <span class=\"mi\">1500</span><span class=\"p\">,</span> <span class=\"mi\">4500</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.normonly_fn\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">normonly_fn</code><span class=\"sig-paren\">(</span><em>vdist</em>, <em>ndist</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#normonly_fn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.normonly_fn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span> <span class=\"o\">=</span> <span class=\"n\">testdata_vn_dists</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">normonly_fn</span><span class=\"p\">(</span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">np.array([[0.62, 0.62, 0.62],</span>\n<span class=\"go\">          [0.52, 0.52, 0.52],</span>\n<span class=\"go\">          [1.  , 1.  , 1.  ],</span>\n<span class=\"go\">          [0.79, 0.79, 0.79],</span>\n<span class=\"go\">          [0.77, 0.77, 0.77]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.print\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">print</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.print\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FIXME: <a href=\"#id15\"><span class=\"problematic\" id=\"id16\">qfx2_</span></a> no longer applies due to fgw_thresh. Need to change names in this file</p>\n<p>TODO: replace testdata_pre_weight_neighbors with</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:qindex=0:1,dindex=0:5,hackerrors=False&#39;</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:codename=vsmany,bar_l2_on=True,fg_on=False&#39;</span><span class=\"p\">],</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.profile\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">profile</code><span class=\"sig-paren\">(</span><em>func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.profile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FIXME: <a href=\"#id17\"><span class=\"problematic\" id=\"id18\">qfx2_</span></a> no longer applies due to fgw_thresh. Need to change names in this file</p>\n<p>TODO: replace testdata_pre_weight_neighbors with</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:qindex=0:1,dindex=0:5,hackerrors=False&#39;</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:codename=vsmany,bar_l2_on=True,fg_on=False&#39;</span><span class=\"p\">],</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.ratio_fn\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">ratio_fn</code><span class=\"sig-paren\">(</span><em>vdist</em>, <em>ndist</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#ratio_fn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.ratio_fn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>vdist</strong> (<em>ndarray</em>) \u2013 voting array</li>\n<li><strong>ndist</strong> (<em>ndarray</em>) \u2013 normalizing array</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">out</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">ndarray</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>Example1:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span> <span class=\"o\">=</span> <span class=\"n\">testdata_vn_dists</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">ratio_fn</span><span class=\"p\">(</span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">hz_str</span><span class=\"p\">(</span><span class=\"s1\">&#39;ratio = &#39;</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">ratio = np.array([[0.  , 0.65, 0.95],</span>\n<span class=\"go\">                  [0.33, 0.58, 0.98],</span>\n<span class=\"go\">                  [0.13, 0.42, 0.73],</span>\n<span class=\"go\">                  [0.15, 0.47, 0.68],</span>\n<span class=\"go\">                  [0.23, 0.61, 0.65]])</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.rrr\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FIXME: <a href=\"#id19\"><span class=\"problematic\" id=\"id20\">qfx2_</span></a> no longer applies due to fgw_thresh. Need to change names in this file</p>\n<p>TODO: replace testdata_pre_weight_neighbors with</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:qindex=0:1,dindex=0:5,hackerrors=False&#39;</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                               <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:codename=vsmany,bar_l2_on=True,fg_on=False&#39;</span><span class=\"p\">],</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.nn_weights.testdata_vn_dists\">\n<code class=\"descclassname\">ibeis.algo.hots.nn_weights.</code><code class=\"descname\">testdata_vn_dists</code><span class=\"sig-paren\">(</span><em>nfeats=5</em>, <em>K=3</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/nn_weights/#testdata_vn_dists\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.nn_weights.testdata_vn_dists\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Test voting and normalizing distances</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">(vdist, ndist) - test voting distances and normalizer distances</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">tuple</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.nn_weights</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vdist</span><span class=\"p\">,</span> <span class=\"n\">ndist</span> <span class=\"o\">=</span> <span class=\"n\">testdata_vn_dists</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">hz_str</span><span class=\"p\">(</span><span class=\"s1\">&#39;vdist = &#39;</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">vdist</span><span class=\"p\">)))</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">hz_str</span><span class=\"p\">(</span><span class=\"s1\">&#39;ndist = &#39;</span><span class=\"p\">,</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">ndist</span><span class=\"p\">)))</span>\n<span class=\"go\">vdist = np.array([[0.  , 0.4 , 0.59],</span>\n<span class=\"go\">                  [0.17, 0.3 , 0.51],</span>\n<span class=\"go\">                  [0.13, 0.42, 0.73],</span>\n<span class=\"go\">                  [0.12, 0.37, 0.54],</span>\n<span class=\"go\">                  [0.18, 0.47, 0.5 ]])</span>\n<span class=\"go\">ndist = np.array([[0.62],</span>\n<span class=\"go\">                  [0.52],</span>\n<span class=\"go\">                  [1.  ],</span>\n<span class=\"go\">                  [0.79],</span>\n<span class=\"go\">                  [0.77]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.old_chip_match\">\n<span id=\"ibeis-algo-hots-old-chip-match-module\"></span><h2>ibeis.algo.hots.old_chip_match module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.old_chip_match\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.old_chip_match.AlignedListDictProxy\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.old_chip_match.</code><code class=\"descname\">AlignedListDictProxy</code><span class=\"sig-paren\">(</span><em>key2_idx</em>, <em>key_list</em>, <em>val_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/old_chip_match/#AlignedListDictProxy\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.old_chip_match.AlignedListDictProxy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.DictLike_old</span></code></p>\n<p>simulates a dict when using parallel lists the point of this class is that\nwhen there are many instances of this class, then key2_idx can be shared between\nthem. Ideally this class wont be used and will disappear when the parallel\nlists are being used properly.</p>\n<p>DEPCIRATE AlignedListDictProxy\u2019s defaultdict behavior is weird</p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.old_chip_match.AlignedListDictProxy.iteritems\">\n<code class=\"descname\">iteritems</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/old_chip_match/#AlignedListDictProxy.iteritems\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.old_chip_match.AlignedListDictProxy.iteritems\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.old_chip_match.AlignedListDictProxy.iterkeys\">\n<code class=\"descname\">iterkeys</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/old_chip_match/#AlignedListDictProxy.iterkeys\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.old_chip_match.AlignedListDictProxy.iterkeys\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.old_chip_match.AlignedListDictProxy.itervalues\">\n<code class=\"descname\">itervalues</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/old_chip_match/#AlignedListDictProxy.itervalues\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.old_chip_match.AlignedListDictProxy.itervalues\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.old_chip_match.AlignedListDictProxy.pop\">\n<code class=\"descname\">pop</code><span class=\"sig-paren\">(</span><em>key</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/old_chip_match/#AlignedListDictProxy.pop\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.old_chip_match.AlignedListDictProxy.pop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.pipeline\">\n<span id=\"ibeis-algo-hots-pipeline-module\"></span><h2>ibeis.algo.hots.pipeline module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.pipeline\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Hotspotter pipeline module</p>\n<dl class=\"docutils\">\n<dt>Module Notation and Concepts::</dt>\n<dd><p class=\"first\">PREFIXES:\nqaid2_XXX - prefix mapping query chip index to\nqfx2_XXX  - prefix mapping query chip feature index to</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>nns    - a (qfx2_idx, qfx2_dist) tuple</li>\n<li>idx    - the index into the nnindexers descriptors</li>\n<li>qfx    - query feature index wrt the query chip</li>\n<li>dfx    - query feature index wrt the database chip</li>\n<li>dist   - the distance to a corresponding feature</li>\n<li>fm     - a list of feature match pairs / correspondences (qfx, dfx)</li>\n<li>fsv    - a score vector of a corresponding feature</li>\n<li>valid  - a valid bit for a corresponding feature</li>\n</ul>\n</div></blockquote>\n<p>PIPELINE_VARS::\nnns_list - maping from query chip index to nns</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>qfx2_idx   - ranked list of query feature indexes to database feature indexes</li>\n<li>qfx2_dist - ranked list of query feature indexes to database feature indexes</li>\n</ul>\n</div></blockquote>\n<ul class=\"last simple\">\n<li><dl class=\"first docutils\">\n<dt>qaid2_norm_weight - mapping from qaid to (qfx2_normweight, qfx2_selnorm)</dt>\n<dd>= qaid2_nnfiltagg[qaid]</dd>\n</dl>\n</li>\n</ul>\n</dd>\n<dt>CommandLine:</dt>\n<dd><p class=\"first\">To see the ouput of a complete pipeline run use</p>\n<p># Set to whichever database you like\npython main.py \u2013db PZ_MTEST \u2013setdb\npython main.py \u2013db NAUT_test \u2013setdb\npython main.py \u2013db testdb1 \u2013setdb</p>\n<p class=\"last\"># Then run whichever configuration you like\npython main.py \u2013query 1 \u2013yes \u2013noqcache -t default:codename=vsmany\npython main.py \u2013query 1 \u2013yes \u2013noqcache -t default:codename=vsmany_nsum</p>\n</dd>\n</dl>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.pipeline.Neighbors\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">Neighbors</code><span class=\"sig-paren\">(</span><em>qaid</em>, <em>idxs</em>, <em>dists</em>, <em>qfxs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#Neighbors\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.Neighbors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.pipeline.Neighbors.neighb_dists\">\n<code class=\"descname\">neighb_dists</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.Neighbors.neighb_dists\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.pipeline.Neighbors.neighb_idxs\">\n<code class=\"descname\">neighb_idxs</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.Neighbors.neighb_idxs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.pipeline.Neighbors.num_query_feats\">\n<code class=\"descname\">num_query_feats</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.Neighbors.num_query_feats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.pipeline.Neighbors.qaid\">\n<code class=\"descname\">qaid</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.Neighbors.qaid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.pipeline.Neighbors.qfx_list\">\n<code class=\"descname\">qfx_list</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.Neighbors.qfx_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.pipeline.WeightRet_\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">WeightRet_</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.WeightRet_\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>alias of <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ibeis.algo.hots.pipeline.weight_ret</span></code></p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.baseline_neighbor_filter\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">baseline_neighbor_filter</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>nns_list</em>, <em>impossible_daids_list</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#baseline_neighbor_filter\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.baseline_neighbor_filter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Removes matches to self, the same image, or the same name.</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.pipeline \u2013test-baseline_neighbor_filter</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>   <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"s1\">&#39;baseline_neighbor_filter&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">daid_override</span><span class=\"o\">=</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">)),</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:QRH=False,requery=False,can_match_samename=False&#39;</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">baseline_neighbor_filter</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                         <span class=\"n\">impossible_daids_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nnvalid0_list</span><span class=\"p\">),</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">any</span><span class=\"p\">(</span><span class=\"n\">nnvalid0_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][:,</span> <span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>   <span class=\"s1\">&#39;first col should be all invalid because of self match&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">nnvalid0_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][:,</span> <span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>   <span class=\"s1\">&#39;second col should have some good matches&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_inbounds</span><span class=\"p\">(</span><span class=\"n\">nnvalid0_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(),</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.build_chipmatches\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">build_chipmatches</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>nns_list</em>, <em>nnvalid0_list</em>, <em>filtkey_list</em>, <em>filtweights_list</em>, <em>filtvalids_list</em>, <em>filtnormks_list</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#build_chipmatches\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.build_chipmatches\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>pipeline step 4 - builds sparse chipmatches</p>\n<p>Takes the dense feature matches from query feature to (what could be any)\ndatabase features and builds sparse matching pairs for each annotation to\nannotation match.</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis build_chipmatches\npython -m ibeis build_chipmatches:0 \u2013show\npython -m ibeis build_chipmatches:1 \u2013show\npython -m ibeis build_chipmatches:2 \u2013show</dd>\n<dt>Example0:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"s1\">&#39;build_chipmatches&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:codename=vsmany&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">filtkey_list</span><span class=\"p\">,</span> <span class=\"n\">filtweights_list</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">filtvalids_list</span><span class=\"p\">,</span> <span class=\"n\">filtnormks_list</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">build_chipmatches</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># verify results</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">[</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">assert_self</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">cm</span> <span class=\"ow\">in</span> <span class=\"n\">cm_list</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fm</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">fm_list</span><span class=\"p\">[</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">daid2_idx</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">num_matches</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fm</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;vsmany num_matches = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">num_matches</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_inbounds</span><span class=\"p\">(</span><span class=\"n\">num_matches</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">2000</span><span class=\"p\">,</span> <span class=\"s1\">&#39;vsmany nmatches out of bounds&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_annot_csum</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ishow_single_annotmatch</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example1:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Test to make sure filtering by feature weights works</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"s1\">&#39;build_chipmatches&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:codename=vsmany,fgw_thresh=.9&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">filtkey_list</span><span class=\"p\">,</span> <span class=\"n\">filtweights_list</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span> <span class=\"n\">filtvalids_list</span><span class=\"p\">,</span> <span class=\"n\">filtnormks_list</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">build_chipmatches</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># verify results</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">[</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">assert_self</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">cm</span> <span class=\"ow\">in</span> <span class=\"n\">cm_list</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fm</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">fm_list</span><span class=\"p\">[</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">daid2_idx</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">num_matches</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fm</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;num_matches = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">num_matches</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_inbounds</span><span class=\"p\">(</span><span class=\"n\">num_matches</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">401</span><span class=\"p\">,</span> <span class=\"s1\">&#39;vsmany nmatches out of bounds&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_annot_csum</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ishow_single_annotmatch</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example2:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"s1\">&#39;build_chipmatches&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:requery=True&#39;</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">filtkey_list</span><span class=\"p\">,</span> <span class=\"n\">filtweights_list</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">filtvalids_list</span><span class=\"p\">,</span> <span class=\"n\">filtnormks_list</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">build_chipmatches</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># verify results</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">[</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">assert_self</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">cm</span> <span class=\"ow\">in</span> <span class=\"n\">cm_list</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scoring</span><span class=\"o\">.</span><span class=\"n\">score_chipmatch_list</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span><span class=\"p\">,</span> <span class=\"s1\">&#39;csum&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">cm</span> <span class=\"ow\">in</span> <span class=\"n\">cm_list</span><span class=\"p\">:</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"c1\"># should be positive for LNBNN</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_list</span><span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">isfinite</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_list</span><span class=\"p\">)]</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.build_impossible_daids_list\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">build_impossible_daids_list</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#build_impossible_daids_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.build_impossible_daids_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>qreq</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.query_request.QueryRequest\" title=\"ibeis.algo.hots.query_request.QueryRequest\"><em>QueryRequest</em></a>) \u2013 query request object with hyper-parameters</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.pipeline \u2013test-build_impossible_daids_list</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:species=zebra_plains,qhackerrors=True&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:use_k_padding=True,can_match_sameimg=False,can_match_samename=False&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">impossible_daids_list</span><span class=\"p\">,</span> <span class=\"n\">Kpad_list</span> <span class=\"o\">=</span> <span class=\"n\">build_impossible_daids_list</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">impossible_daids_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">impossible_daids_list</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_subset</span><span class=\"p\">(</span><span class=\"nb\">locals</span><span class=\"p\">(),</span> <span class=\"p\">[</span><span class=\"s1\">&#39;impossible_daids_list&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Kpad_list&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">vals</span><span class=\"p\">,</span> <span class=\"n\">nl</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">explicit</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nobr</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">strvals</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>\n<span class=\"go\">impossible_daids_list=[[1], [4], [5, 6], [5, 6]],</span>\n<span class=\"go\">Kpad_list=[1, 1, 2, 2],</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.cachemiss_nn_compute_fn\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">cachemiss_nn_compute_fn</code><span class=\"sig-paren\">(</span><em>flags_list</em>, <em>qreq_</em>, <em>Kpad_list</em>, <em>impossible_daids_list</em>, <em>K</em>, <em>Knorm</em>, <em>requery</em>, <em>verbose</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#cachemiss_nn_compute_fn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.cachemiss_nn_compute_fn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Logic for computing neighbors if there is a cache miss</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flags_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Kpad_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">flags_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.compute_matching_dlen_extent\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">compute_matching_dlen_extent</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>fm_list</em>, <em>kpts_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#compute_matching_dlen_extent\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.compute_matching_dlen_extent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>helper for spatial verification, computes the squared diagonal length of\nmatching chips</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.pipeline \u2013test-compute_matching_dlen_extent</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre_sver</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">set_cannonical_annot_score</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">get_num_matches_list</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">sortself</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fm_list</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">fm_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kpts_list</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_qreq_dannot_kpts</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">daid_list</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">topx2_dlen_sqrd</span> <span class=\"o\">=</span> <span class=\"n\">compute_matching_dlen_extent</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">fm_list</span><span class=\"p\">,</span> <span class=\"n\">kpts_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_inbounds</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">topx2_dlen_sqrd</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">1500</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.get_sparse_matchinfo_nonagg\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">get_sparse_matchinfo_nonagg</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>nns</em>, <em>neighb_valid0</em>, <em>neighb_score_list</em>, <em>neighb_valid_list</em>, <em>neighb_normk_list</em>, <em>Knorm</em>, <em>fsv_col_lbls</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#get_sparse_matchinfo_nonagg\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.get_sparse_matchinfo_nonagg\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>builds sparse iterator that generates feature match pairs, scores, and ranks</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><dl class=\"docutils\">\n<dt>vmt a tuple of corresponding lists. Each item in the</dt>\n<dd>list corresponds to a daid, dfx, scorevec, rank, norm_aid, norm_fx\u2026</dd>\n</dl>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><a href=\"#id21\"><span class=\"problematic\" id=\"id22\">ValidMatchTup_</span></a></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><p class=\"first\">python -m ibeis.algo.hots.pipeline \u2013test-get_sparse_matchinfo_nonagg \u2013show\npython -m ibeis.algo.hots.pipeline \u2013test-get_sparse_matchinfo_nonagg:1 \u2013show</p>\n<p class=\"last\">utprof.py -m ibeis.algo.hots.pipeline \u2013test-get_sparse_matchinfo_nonagg</p>\n</dd>\n<dt>Example0:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">daid</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_sparse_matchinfo_nonagg</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:Knorm=3,normalizer_rule=name,const_on=True,ratio_thresh=.2,sqrd_dist_on=True&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns</span><span class=\"p\">,</span> <span class=\"n\">neighb_valid0</span><span class=\"p\">,</span> <span class=\"n\">neighb_score_list</span><span class=\"p\">,</span> <span class=\"n\">neighb_valid_list</span><span class=\"p\">,</span> <span class=\"n\">neighb_normk_list</span><span class=\"p\">,</span> <span class=\"n\">Knorm</span><span class=\"p\">,</span> <span class=\"n\">fsv_col_lbls</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">get_sparse_matchinfo_nonagg</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qannot</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">annots</span><span class=\"p\">([</span><span class=\"n\">qaid</span><span class=\"p\">],</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dannot</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">annots</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">assert_self</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_annot_csum</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">show_single_annotmatch</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.nearest_neighbor_cacheid2\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">nearest_neighbor_cacheid2</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>Kpad_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#nearest_neighbor_cacheid2\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.nearest_neighbor_cacheid2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a hacky cacheid for neighbor configs.\nDEPRICATE: This will be replaced by dtool caching</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>qreq</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.query_request.QueryRequest\" title=\"ibeis.algo.hots.query_request.QueryRequest\"><em>QueryRequest</em></a>) \u2013 query request object with hyper-parameters</li>\n<li><strong>Kpad_list</strong> (<em>list</em>) \u2013 </li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">(nn_mid_cacheid_list, nn_cachedir)</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">tuple</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.pipeline \u2013exec-nearest_neighbor_cacheid2\npython -m ibeis.algo.hots.pipeline \u2013exec-nearest_neighbor_cacheid2 \u2013superstrict</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">K</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">Knorm</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">checks</span><span class=\"o\">=</span><span class=\"mi\">800</span><span class=\"p\">,</span> <span class=\"n\">use_k_padding</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># test 1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_cfg_lbl</span><span class=\"p\">(</span><span class=\"n\">cfgdict</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">],</span> <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">daid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nearest_neighbors&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">locals_</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Kpad_list&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"n\">nearest_neighbor_cacheid2</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">Kpad_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">nn_cachedir</span><span class=\"p\">,</span> <span class=\"n\">nn_mid_cacheid_list</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">tup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result1</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;nn_mid_cacheid_list1 = &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">nn_mid_cacheid_list</span><span class=\"p\">,</span> <span class=\"n\">nl</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># test 2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict2</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">K</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">Knorm</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">use_k_padding</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default&#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_cfg_lbl</span><span class=\"p\">(</span><span class=\"n\">cfgdict</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">p2</span><span class=\"p\">],</span> <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">daid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nearest_neighbors&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span><span class=\"n\">locals_</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Kpad_list&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"n\">nearest_neighbor_cacheid2</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">Kpad_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">nn_cachedir</span><span class=\"p\">,</span> <span class=\"n\">nn_mid_cacheid_list</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">tup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result2</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;nn_mid_cacheid_list2 = &#39;</span> <span class=\"o\">+</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">nn_mid_cacheid_list</span><span class=\"p\">,</span> <span class=\"n\">nl</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">result1</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">+</span> <span class=\"n\">result2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">nn_mid_cacheid_list1 = [</span>\n<span class=\"go\">    &#39;nnobj_8687dcb6-1f1f-fdd3-8b72-8f36f9f41905_DVUUIDS((5)oavtblnlrtocnrpm)_NN(single,cks800)_Chip(sz700,maxwh)_Feat(hesaff+sift)_FLANN(8_kdtrees)_truek6&#39;,</span>\n<span class=\"go\">    &#39;nnobj_a2aef668-20c1-1897-d8f3-09a47a73f26a_DVUUIDS((5)oavtblnlrtocnrpm)_NN(single,cks800)_Chip(sz700,maxwh)_Feat(hesaff+sift)_FLANN(8_kdtrees)_truek6&#39;,</span>\n<span class=\"go\">]</span>\n<span class=\"go\">nn_mid_cacheid_list2 = [</span>\n<span class=\"go\">    &#39;nnobj_8687dcb6-1f1f-fdd3-8b72-8f36f9f41905_DVUUIDS((5)oavtblnlrtocnrpm)_NN(single,cks800)_Chip(sz700,maxwh)_Feat(hesaff+sift)_FLANN(8_kdtrees)_truek6&#39;,</span>\n<span class=\"go\">    &#39;nnobj_a2aef668-20c1-1897-d8f3-09a47a73f26a_DVUUIDS((5)oavtblnlrtocnrpm)_NN(single,cks800)_Chip(sz700,maxwh)_Feat(hesaff+sift)_FLANN(8_kdtrees)_truek6&#39;,</span>\n<span class=\"go\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.nearest_neighbors\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">nearest_neighbors</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>Kpad_list</em>, <em>impossible_daids_list=None</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#nearest_neighbors\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.nearest_neighbors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Plain Nearest Neighbors\nTries to load nearest neighbors from a cache instead of recomputing them.</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.pipeline \u2013test-nearest_neighbors\npython -m ibeis.algo.hots.pipeline \u2013test-nearest_neighbors \u2013db PZ_MTEST \u2013qaids=1:100\nutprof.py -m ibeis.algo.hots.pipeline \u2013test-nearest_neighbors \u2013db PZ_MTEST \u2013qaids=1:100</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nearest_neighbors&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">locals_</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Kpad_list&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;impossible_daids_list&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span> <span class=\"o\">=</span> <span class=\"n\">nearest_neighbors</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                             <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">internal_qaids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nn</span> <span class=\"o\">=</span> <span class=\"n\">nns_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">nn</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">num_neighbors</span> <span class=\"o\">=</span> <span class=\"n\">Kpad_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">K</span> <span class=\"o\">+</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">Knorm</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Assert nns tuple is valid</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">num_neighbors</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_inbounds</span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mi\">3000</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nearest_neighbors&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">locals_</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Kpad_list&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;impossible_daids_list&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span> <span class=\"o\">=</span> <span class=\"n\">nearest_neighbors</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                             <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">internal_qaids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nn</span> <span class=\"o\">=</span> <span class=\"n\">nns_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">nn</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">num_neighbors</span> <span class=\"o\">=</span> <span class=\"n\">Kpad_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">K</span> <span class=\"o\">+</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">Knorm</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Assert nns tuple is valid</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">num_neighbors</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_inbounds</span><span class=\"p\">(</span><span class=\"n\">qfx2_idx</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mi\">3000</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">custom_nid_lookup</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">a</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">)}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq1_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:K=2,requery=True,can_match_samename=False&#39;</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">daid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">custom_nid_lookup</span><span class=\"o\">=</span><span class=\"n\">custom_nid_lookup</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq1_</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nearest_neighbors&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"n\">locals_</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Kpad_list&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;impossible_daids_list&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list1</span> <span class=\"o\">=</span> <span class=\"n\">nearest_neighbors</span><span class=\"p\">(</span><span class=\"n\">qreq1_</span><span class=\"p\">,</span> <span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                              <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nn1</span> <span class=\"o\">=</span> <span class=\"n\">nns_list1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnvalid0_list1</span> <span class=\"o\">=</span> <span class=\"n\">baseline_neighbor_filter</span><span class=\"p\">(</span><span class=\"n\">qreq1_</span><span class=\"p\">,</span> <span class=\"n\">nns_list1</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                          <span class=\"n\">impossible_daids_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">nnvalid0_list1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span> <span class=\"s1\">&#39;requery should never produce impossible results&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Compare versus not using requery</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq2_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:K=2,requery=False&#39;</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">daid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq2_</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nearest_neighbors&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"n\">locals_</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Kpad_list&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;impossible_daids_list&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list2</span> <span class=\"o\">=</span> <span class=\"n\">nearest_neighbors</span><span class=\"p\">(</span><span class=\"n\">qreq2_</span><span class=\"p\">,</span> <span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                              <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nn2</span> <span class=\"o\">=</span> <span class=\"n\">nns_list2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nn1</span><span class=\"o\">.</span><span class=\"n\">neighb_dists</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nn2</span><span class=\"o\">.</span><span class=\"n\">neighb_dists</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq1_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:K=5,requery=True,can_match_samename=False&#39;</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">daid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">locals_</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testrun_pipeline_upto</span><span class=\"p\">(</span><span class=\"n\">qreq1_</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nearest_neighbors&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">dict_take</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"n\">locals_</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Kpad_list&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;impossible_daids_list&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list1</span> <span class=\"o\">=</span> <span class=\"n\">nearest_neighbors</span><span class=\"p\">(</span><span class=\"n\">qreq1_</span><span class=\"p\">,</span> <span class=\"n\">Kpad_list</span><span class=\"p\">,</span> <span class=\"n\">impossible_daids_list</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                              <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nn1</span> <span class=\"o\">=</span> <span class=\"n\">nns_list1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nnvalid0_list1</span> <span class=\"o\">=</span> <span class=\"n\">baseline_neighbor_filter</span><span class=\"p\">(</span><span class=\"n\">qreq1_</span><span class=\"p\">,</span> <span class=\"n\">nns_list1</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                          <span class=\"n\">impossible_daids_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">nnvalid0_list1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"s1\">&#39;should always be valid&#39;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.request_ibeis_query_L0\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">request_ibeis_query_L0</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>qreq_</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#request_ibeis_query_L0\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.request_ibeis_query_L0\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Driver logic of query pipeline</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Make sure _pipeline_helpres.testrun_pipeline_upto reflects what happens\nin this function.</p>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>ibs</strong> (<em>ibeis.IBEISController</em>) \u2013 IBEIS database object to be queried.\ntechnically this object already lives inside of <a href=\"#id23\"><span class=\"problematic\" id=\"id24\">qreq_</span></a>.</li>\n<li><strong>qreq</strong> (<em>ibeis.QueryRequest</em>) \u2013 hyper-parameters. use\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ibs.new_query_request</span></code> to create one</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">cm_list containing <code class=\"docutils literal notranslate\"><span class=\"pre\">ibeis.ChipMatch</span></code> objects</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">list</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><p class=\"first\">python -m ibeis.algo.hots.pipeline \u2013test-request_ibeis_query_L0:0 \u2013show\npython -m ibeis.algo.hots.pipeline \u2013test-request_ibeis_query_L0:1 \u2013show</p>\n<p>python -m ibeis.algo.hots.pipeline \u2013test-request_ibeis_query_L0:0 \u2013db testdb1 \u2013qaid 325\npython -m ibeis.algo.hots.pipeline \u2013test-request_ibeis_query_L0:0 \u2013db testdb3 \u2013qaid 325\n# background match\npython -m ibeis.algo.hots.pipeline \u2013test-request_ibeis_query_L0:0 \u2013db NNP_Master3 \u2013qaid 12838</p>\n<p class=\"last\">python -m ibeis.algo.hots.pipeline \u2013test-request_ibeis_query_L0:0\npython -m ibeis.algo.hots.pipeline \u2013test-request_ibeis_query_L0:0 \u2013db PZ_MTEST -a timectrl:qindex=0:256\npython    -m ibeis.algo.hots.pipeline \u2013test-request_ibeis_query_L0:0 \u2013db PZ_Master1 -a timectrl:qindex=0:256\nutprof.py -m ibeis.algo.hots.pipeline \u2013test-request_ibeis_query_L0:0 \u2013db PZ_Master1 -a timectrl:qindex=0:256</p>\n</dd>\n<dt>Example1:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"o\">.</span><span class=\"n\">main_helpers</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:qindex=0:2,dindex=0:10&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">query_cfgstr</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">request_ibeis_query_L0</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">ishow_analysis</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">fnum</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">make_figtitle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.spatial_verification\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">spatial_verification</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>cm_list_FILT</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#spatial_verification\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.spatial_verification\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>pipeline step 5 - spatially verify feature matches</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">cm_listSVER - new list of spatially verified chipmatches</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">list</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.pipeline \u2013test-spatial_verification \u2013show\npython -m ibeis.algo.hots.pipeline \u2013test-spatial_verification \u2013show \u2013qaid 1\npython -m ibeis.algo.hots.pipeline \u2013test-spatial_verification:0</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre_sver</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scoring</span><span class=\"o\">.</span><span class=\"n\">score_chipmatch_list</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">prescore_method</span><span class=\"p\">)</span>  <span class=\"c1\"># HACK</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">top_nids</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">get_top_nids</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list_SVER</span> <span class=\"o\">=</span> <span class=\"n\">spatial_verification</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Test Results</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cmSV</span> <span class=\"o\">=</span> <span class=\"n\">cm_list_SVER</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scoring</span><span class=\"o\">.</span><span class=\"n\">score_chipmatch_list</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list_SVER</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">score_method</span><span class=\"p\">)</span>  <span class=\"c1\"># HACK</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">top_nids_SV</span> <span class=\"o\">=</span> <span class=\"n\">cmSV</span><span class=\"o\">.</span><span class=\"n\">get_top_nids</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">print_csv</span><span class=\"p\">(</span><span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cmSV</span><span class=\"o\">.</span><span class=\"n\">print_csv</span><span class=\"p\">(</span><span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt_daids</span>  <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">intersect1d</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">get_groundtruth_daids</span><span class=\"p\">(),</span> <span class=\"n\">cmSV</span><span class=\"o\">.</span><span class=\"n\">get_groundtruth_daids</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fm_list</span>   <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">get_annot_fm</span><span class=\"p\">(</span><span class=\"n\">gt_daids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fmSV_list</span> <span class=\"o\">=</span> <span class=\"n\">cmSV</span><span class=\"o\">.</span><span class=\"n\">get_annot_fm</span><span class=\"p\">(</span><span class=\"n\">gt_daids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">maplen</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">list_</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"n\">list_</span><span class=\"p\">)))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">gt_daids</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ground truth did not survive&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_lessthan</span><span class=\"p\">(</span><span class=\"n\">maplen</span><span class=\"p\">(</span><span class=\"n\">fmSV_list</span><span class=\"p\">),</span> <span class=\"n\">maplen</span><span class=\"p\">(</span><span class=\"n\">fm_list</span><span class=\"p\">)),</span> <span class=\"s1\">&#39;feature matches were not filtered&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cmSV</span><span class=\"o\">.</span><span class=\"n\">show_daids_matches</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">gt_daids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#homog_tup = (refined_inliers, H)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#aff_tup = (aff_inliers, Aff)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#pt.draw_sv.show_sv(rchip1, rchip2, kpts1, kpts2, fm, aff_tup=aff_tup, homog_tup=homog_tup, refine_method=refine_method)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.sver_single_chipmatch\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">sver_single_chipmatch</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>cm</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#sver_single_chipmatch\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.sver_single_chipmatch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spatially verifies a shortlist of a single chipmatch</p>\n<p>TODO: move to chip match?</p>\n<p>loops over a shortlist of results for a specific query annotation</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>qreq</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.query_request.QueryRequest\" title=\"ibeis.algo.hots.query_request.QueryRequest\"><em>QueryRequest</em></a>) \u2013 query request object with hyper-parameters</li>\n<li><strong>cm</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.chip_match.ChipMatch\" title=\"ibeis.algo.hots.chip_match.ChipMatch\"><em>ChipMatch</em></a>) \u2013 </li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\">cmSV</p>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\">ibeis.ChipMatch</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><dl class=\"first docutils\">\n<dt>python -m ibeis draw_rank_cmc \u2013db PZ_Master1 \u2013show </dt>\n<dd>-t best:refine_method=[homog,affine,cv2-homog,cv2-ransac-homog,cv2-lmeds-homog] -a timectrlhard \u2014acfginfo \u2013veryverbtd</dd>\n<dt>python -m ibeis draw_rank_cmc \u2013db PZ_Master1 \u2013show </dt>\n<dd>-t best:refine_method=[homog,cv2-lmeds-homog],full_homog_checks=[True,False] -a timectrlhard \u2014acfginfo \u2013veryverbtd</dd>\n<dt>python -m ibeis sver_single_chipmatch \u2013show </dt>\n<dd>-t default:full_homog_checks=True -a default \u2013qaid 18</dd>\n<dt>python -m ibeis sver_single_chipmatch \u2013show </dt>\n<dd>-t default:refine_method=affine -a default \u2013qaid 18</dd>\n<dt>python -m ibeis sver_single_chipmatch \u2013show </dt>\n<dd>-t default:refine_method=cv2-homog -a default \u2013qaid 18</dd>\n<dt>python -m ibeis sver_single_chipmatch \u2013show </dt>\n<dd>-t default:refine_method=cv2-homog,full_homog_checks=True -a default \u2013qaid 18</dd>\n<dt>python -m ibeis sver_single_chipmatch \u2013show </dt>\n<dd>-t default:refine_method=cv2-homog,full_homog_checks=False -a default \u2013qaid 18</dd>\n<dt>python -m ibeis sver_single_chipmatch \u2013show </dt>\n<dd>-t default:refine_method=cv2-lmeds-homog,full_homog_checks=False -a default \u2013qaid 18</dd>\n<dt>python -m ibeis sver_single_chipmatch \u2013show </dt>\n<dd>-t default:refine_method=cv2-ransac-homog,full_homog_checks=False -a default \u2013qaid 18</dd>\n<dt>python -m ibeis sver_single_chipmatch \u2013show </dt>\n<dd>-t default:full_homog_checks=False -a default \u2013qaid 18</dd>\n</dl>\n<p class=\"last\">python -m ibeis sver_single_chipmatch \u2013show \u2013qaid=18 \u2013y=0\npython -m ibeis sver_single_chipmatch \u2013show \u2013qaid=18 \u2013y=1</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Visualization</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span><span class=\"s1\">&#39;spatial_verification&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>  <span class=\"c1\">#, qaid_list=[18])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">cm_list_FILT</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scoring</span><span class=\"o\">.</span><span class=\"n\">score_chipmatch_list</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">prescore_method</span><span class=\"p\">)</span>  <span class=\"c1\"># HACK</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#locals_ = ut.exec_func_src(sver_single_chipmatch, key_list=[&#39;svtup_list&#39;], sentinal=&#39;# &lt;SENTINAL&gt;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#svtup_list1, = locals_</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_func_sourcecode</span><span class=\"p\">(</span><span class=\"n\">sver_single_chipmatch</span><span class=\"p\">,</span> <span class=\"n\">stripdef</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">strip_docstr</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">replace_between_tags</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;# &lt;SENTINAL&gt;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;# &lt;/SENTINAL&gt;&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">globals_</span> <span class=\"o\">=</span> <span class=\"nb\">globals</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">exec</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">globals_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">svtup_list</span> <span class=\"o\">=</span> <span class=\"n\">globals_</span><span class=\"p\">[</span><span class=\"s1\">&#39;svtup_list&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt_daids</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">get_groundtruth_daids</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argval</span><span class=\"p\">(</span><span class=\"s1\">&#39;--y&#39;</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#print(&#39;x = %r&#39; % (x,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#daid = daids[x % len(daids)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">notnone_list</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">not_list</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">flag_None_items</span><span class=\"p\">(</span><span class=\"n\">svtup_list</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">valid_idxs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">notnone_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">valid_daids</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">daid_list</span><span class=\"p\">[</span><span class=\"n\">valid_idxs</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">valid_daids</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cannot spatially verify&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">valid_gt_daids</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">intersect1d</span><span class=\"p\">(</span><span class=\"n\">gt_daids</span><span class=\"p\">,</span> <span class=\"n\">valid_daids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#assert len(valid_gt_daids) == 0, &#39;no sver groundtruth&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid</span> <span class=\"o\">=</span> <span class=\"n\">valid_gt_daids</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">valid_gt_daids</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"n\">valid_daids</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">idx</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">daid2_idx</span><span class=\"p\">[</span><span class=\"n\">daid</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">svtup</span> <span class=\"o\">=</span> <span class=\"n\">svtup_list</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">svtup</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">&#39;SV TUP IS NONE&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">refined_inliers</span><span class=\"p\">,</span> <span class=\"n\">refined_errors</span><span class=\"p\">,</span> <span class=\"n\">H</span> <span class=\"o\">=</span> <span class=\"n\">svtup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">aff_inliers</span><span class=\"p\">,</span> <span class=\"n\">aff_errors</span><span class=\"p\">,</span> <span class=\"n\">Aff</span> <span class=\"o\">=</span> <span class=\"n\">svtup</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">homog_tup</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">refined_inliers</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">aff_tup</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">aff_inliers</span><span class=\"p\">,</span> <span class=\"n\">Aff</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fm</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">fm_list</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">aid1</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">qaid</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">aid2</span> <span class=\"o\">=</span> <span class=\"n\">daid</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rchip1</span><span class=\"p\">,</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chips</span><span class=\"p\">([</span><span class=\"n\">aid1</span><span class=\"p\">],</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">extern_query_config2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kpts1</span><span class=\"p\">,</span>  <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_kpts</span><span class=\"p\">([</span><span class=\"n\">aid1</span><span class=\"p\">],</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">extern_query_config2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rchip2</span><span class=\"p\">,</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chips</span><span class=\"p\">([</span><span class=\"n\">aid2</span><span class=\"p\">],</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">extern_data_config2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kpts2</span><span class=\"p\">,</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_kpts</span><span class=\"p\">([</span><span class=\"n\">aid2</span><span class=\"p\">],</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">extern_data_config2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span> <span class=\"k\">as</span> <span class=\"nn\">mpl</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.scripts.thesis</span> <span class=\"k\">import</span> <span class=\"n\">TMP_RC</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">rcParams</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">TMP_RC</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">show_aff</span> <span class=\"o\">=</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--noaff&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">refine_method</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">refine_method</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_argflag</span><span class=\"p\">(</span><span class=\"s1\">&#39;--norefinelbl&#39;</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"s1\">&#39;&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pt</span><span class=\"o\">.</span><span class=\"n\">draw_sv</span><span class=\"o\">.</span><span class=\"n\">show_sv</span><span class=\"p\">(</span><span class=\"n\">rchip1</span><span class=\"p\">,</span> <span class=\"n\">rchip2</span><span class=\"p\">,</span> <span class=\"n\">kpts1</span><span class=\"p\">,</span> <span class=\"n\">kpts2</span><span class=\"p\">,</span> <span class=\"n\">fm</span><span class=\"p\">,</span> <span class=\"n\">aff_tup</span><span class=\"o\">=</span><span class=\"n\">aff_tup</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                   <span class=\"n\">homog_tup</span><span class=\"o\">=</span><span class=\"n\">homog_tup</span><span class=\"p\">,</span> <span class=\"n\">show_aff</span><span class=\"o\">=</span><span class=\"n\">show_aff</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                   <span class=\"n\">refine_method</span><span class=\"o\">=</span><span class=\"n\">refine_method</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.pipeline.weight_neighbors\">\n<code class=\"descclassname\">ibeis.algo.hots.pipeline.</code><code class=\"descname\">weight_neighbors</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>nns_list</em>, <em>nnvalid0_list</em>, <em>verbose=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/pipeline/#weight_neighbors\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.pipeline.weight_neighbors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>pipeline step 3 -\nassigns weights to feature matches based on the active filter list</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd><p class=\"first\">python -m ibeis.algo.hots.pipeline \u2013test-weight_neighbors\npython -m ibeis.algo.hots.pipeline \u2013test-weight_neighbors:0 \u2013verbose \u2013verbtd \u2013ainfo \u2013nocache \u2013veryverbose\npython -m ibeis.algo.hots.pipeline \u2013test-weight_neighbors:0 \u2013show\npython -m ibeis.algo.hots.pipeline \u2013test-weight_neighbors:1 \u2013show</p>\n<p class=\"last\">python -m ibeis.algo.hots.pipeline \u2013test-weight_neighbors:0 \u2013show -t default:lnbnn_normer=lnbnn_fg_0.9__featscore,lnbnn_norm_thresh=.9</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:qindex=0:3,dindex=0:5,hackerrors=False&#39;</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:codename=vsmany,bar_l2_on=True,fg_on=False&#39;</span><span class=\"p\">],</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">weight_ret</span> <span class=\"o\">=</span> <span class=\"n\">weight_neighbors</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">filtkey_list</span><span class=\"p\">,</span> <span class=\"n\">filtweights_list</span><span class=\"p\">,</span> <span class=\"n\">filtvalids_list</span><span class=\"p\">,</span> <span class=\"n\">filtnormks_list</span> <span class=\"o\">=</span> <span class=\"n\">weight_ret</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">build_chipmatches</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">filtkey_list</span><span class=\"p\">,</span> <span class=\"n\">filtweights_list</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">filtvalids_list</span><span class=\"p\">,</span> <span class=\"n\">filtnormks_list</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_name_nsum</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">ishow_analysis</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.pipeline</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"s1\">&#39;weight_neighbors&#39;</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:qindex=0:3,dindex=0:5,hackerrors=False&#39;</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;default:codename=vsmany,bar_l2_on=True,fg_on=False&#39;</span><span class=\"p\">],</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">weight_ret</span> <span class=\"o\">=</span> <span class=\"n\">weight_neighbors</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">filtkey_list</span><span class=\"p\">,</span> <span class=\"n\">filtweights_list</span><span class=\"p\">,</span> <span class=\"n\">filtvalids_list</span><span class=\"p\">,</span> <span class=\"n\">filtnormks_list</span> <span class=\"o\">=</span> <span class=\"n\">weight_ret</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nInternAids</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_internal_qaids</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nFiltKeys</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">filtkey_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">filtweight_depth</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">depth_profile</span><span class=\"p\">(</span><span class=\"n\">filtweights_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">filtvalid_depth</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">depth_profile</span><span class=\"p\">(</span><span class=\"n\">filtvalids_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">nInternAids</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">filtweights_list</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">nInternAids</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">filtvalids_list</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">get_list_column</span><span class=\"p\">(</span><span class=\"n\">filtweight_depth</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"n\">nFiltKeys</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">nInternAids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">filtvalid_depth</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">nInternAids</span><span class=\"p\">,</span> <span class=\"n\">nFiltKeys</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">filtvalids_list</span><span class=\"p\">,</span> <span class=\"p\">[[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"n\">filtkey_list</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">hstypes</span><span class=\"o\">.</span><span class=\"n\">FiltKeys</span><span class=\"o\">.</span><span class=\"n\">LNBNN</span><span class=\"p\">,</span> <span class=\"n\">hstypes</span><span class=\"o\">.</span><span class=\"n\">FiltKeys</span><span class=\"o\">.</span><span class=\"n\">BARL2</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">plottool</span> <span class=\"k\">as</span> <span class=\"nn\">pt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">build_chipmatches</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">nns_list</span><span class=\"p\">,</span> <span class=\"n\">nnvalid0_list</span><span class=\"p\">,</span> <span class=\"n\">filtkey_list</span><span class=\"p\">,</span> <span class=\"n\">filtweights_list</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">filtvalids_list</span><span class=\"p\">,</span> <span class=\"n\">filtnormks_list</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_name_nsum</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">ishow_analysis</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.query_params\">\n<span id=\"ibeis-algo-hots-query-params-module\"></span><h2>ibeis.algo.hots.query_params module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.query_params\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.query_params.QueryParams\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.query_params.</code><code class=\"descname\">QueryParams</code><span class=\"sig-paren\">(</span><em>query_cfg=None</em>, <em>cfgdict=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_params/#QueryParams\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_params.QueryParams\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">collections.abc.Mapping</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_params.QueryParams.copy\">\n<code class=\"descname\">copy</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_params/#QueryParams.copy\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_params.QueryParams.copy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_params.QueryParams.get\">\n<code class=\"descname\">get</code><span class=\"sig-paren\">(</span><em>key</em>, <em>*d</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_params/#QueryParams.get\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_params.QueryParams.get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>get a paramater value by string</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_params.QueryParams.get_postsver_filtkey_list\">\n<code class=\"descname\">get_postsver_filtkey_list</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_params/#QueryParams.get_postsver_filtkey_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_params.QueryParams.get_postsver_filtkey_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>HACK: gets columns of fsv post spatial verification.  This will\neventually be incorporated into cmtup_old instead and will not be\ndependant on specifically where you are in the pipeline</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_params.QueryParams.hack_lnbnn_config_trail\">\n<code class=\"descname\">hack_lnbnn_config_trail</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_params/#QueryParams.hack_lnbnn_config_trail\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_params.QueryParams.hack_lnbnn_config_trail\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.query_request\">\n<span id=\"ibeis-algo-hots-query-request-module\"></span><h2>ibeis.algo.hots.query_request module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.query_request\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.query_request.</code><code class=\"descname\">QueryRequest</code><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<p>Request object for pipline parameter run</p>\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.daids\">\n<code class=\"descname\">daids</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.daids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>These are the users daids in vsone mode</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.dannots\">\n<code class=\"descname\">dannots</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.dannots\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>external query annotation objects</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.dnids\">\n<code class=\"descname\">dnids</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.dnids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>save dnids in <a href=\"#id25\"><span class=\"problematic\" id=\"id26\">qreq_</span></a> state</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Type:</th><td class=\"field-body\">TODO</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.ensure_chips\">\n<code class=\"descname\">ensure_chips</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>num_retries=1</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.ensure_chips\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.ensure_chips\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>ensure chips are computed (used in expt, not used in pipeline)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>verbose</strong> (<em>bool</em>) \u2013 verbosity flag(default = True)</li>\n<li><strong>num_retries</strong> (<em>int</em>) \u2013 (default = 0)</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.query_request \u2013test-ensure_chips</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Delete chips (accidentally), then try to run a query</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">qaids</span><span class=\"p\">,</span> <span class=\"n\">daids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">num_retries</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qchip_fpaths</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chip_fpath</span><span class=\"p\">(</span><span class=\"n\">qaids</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">extern_query_config2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dchip_fpaths</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chip_fpath</span><span class=\"p\">(</span><span class=\"n\">daids</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">extern_data_config2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">remove_file_list</span><span class=\"p\">(</span><span class=\"n\">qchip_fpaths</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">remove_file_list</span><span class=\"p\">(</span><span class=\"n\">dchip_fpaths</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ensure_chips</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"p\">,</span> <span class=\"n\">num_retries</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.ensure_features\">\n<code class=\"descname\">ensure_features</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>prog_hook=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.ensure_features\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.ensure_features\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>ensure features are computed\n:param verbose: verbosity flag(default = True)\n:type verbose: bool</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.query_request \u2013test-ensure_features</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_valid_aids</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">qaids</span><span class=\"p\">,</span> <span class=\"n\">daids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">delete_annot_feats</span><span class=\"p\">(</span><span class=\"n\">qaids</span><span class=\"p\">,</span>  <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">extern_query_config2</span><span class=\"p\">)</span>  <span class=\"c1\"># Remove the chips</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">remove_file_list</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_chip_fpath</span><span class=\"p\">(</span><span class=\"n\">qaids</span><span class=\"p\">,</span> <span class=\"n\">config2_</span><span class=\"o\">=</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">extern_query_config2</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ensure_features</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.ensure_featweights\">\n<code class=\"descname\">ensure_featweights</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.ensure_featweights\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.ensure_featweights\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>ensure feature weights are computed</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.execute\">\n<code class=\"descname\">execute</code><span class=\"sig-paren\">(</span><em>qaids=None</em>, <em>prog_hook=None</em>, <em>use_cache=None</em>, <em>invalidate_supercache=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.execute\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.execute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Runs the hotspotter pipeline and returns chip match objects.</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.query_request execute \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># SLOW_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># xdoctest: +SKIP</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">ishow_analysis</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.extern_data_config2\">\n<code class=\"descname\">extern_data_config2</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.extern_data_config2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.extern_query_config2\">\n<code class=\"descname\">extern_query_config2</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.extern_query_config2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_big_cacher\">\n<code class=\"descname\">get_big_cacher</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_big_cacher\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_big_cacher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_bigcache_info\">\n<code class=\"descname\">get_bigcache_info</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_bigcache_info\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_bigcache_info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_cfgstr\">\n<code class=\"descname\">get_cfgstr</code><span class=\"sig-paren\">(</span><em>with_input=False</em>, <em>with_data=True</em>, <em>with_pipe=True</em>, <em>hash_pipe=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_cfgstr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_cfgstr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>main cfgstring used to identify the \u2018querytype\u2019\nFIXME: name params + data</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>with_input</strong> (<em>bool</em>) \u2013 (default = False)</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">cfgstr</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">str</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.query_request \u2013exec-get_cfgstr</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                             <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:fgw_thresh=.3&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                             <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:species=zebra_plains&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">with_input</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgstr</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_cfgstr</span><span class=\"p\">(</span><span class=\"n\">with_input</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;cfgstr = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">cfgstr</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_chipmatch_fpaths\">\n<code class=\"descname\">get_chipmatch_fpaths</code><span class=\"sig-paren\">(</span><em>qaid_list</em>, <em>super_qres_cache=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_chipmatch_fpaths\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_chipmatch_fpaths\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generates chipmatch paths for input query annotation rowids</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_data_hashid\">\n<code class=\"descname\">get_data_hashid</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_data_hashid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_data_hashid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.query_request \u2013exec-QueryRequest.get_query_hashid \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_hashid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_data_hashid</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;data_hashid = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">data_hashid</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_external_query_groundtruth\">\n<code class=\"descname\">get_external_query_groundtruth</code><span class=\"sig-paren\">(</span><em>qaids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_external_query_groundtruth\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_external_query_groundtruth\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>gets groundtruth that are accessible via this query</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_full_cfgstr\">\n<code class=\"descname\">get_full_cfgstr</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_full_cfgstr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_full_cfgstr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>main cfgstring used to identify the \u2018querytype\u2019\nFIXME: name\nparams + data + query</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_infostr\">\n<code class=\"descname\">get_infostr</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_infostr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_infostr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_internal_daids\">\n<code class=\"descname\">get_internal_daids</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_internal_daids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_internal_daids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_internal_data_config2\">\n<code class=\"descname\">get_internal_data_config2</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_internal_data_config2\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_internal_data_config2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_internal_qaids\">\n<code class=\"descname\">get_internal_qaids</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_internal_qaids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_internal_qaids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_internal_query_config2\">\n<code class=\"descname\">get_internal_query_config2</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_internal_query_config2\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_internal_query_config2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_pipe_cfgstr\">\n<code class=\"descname\">get_pipe_cfgstr</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_pipe_cfgstr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_pipe_cfgstr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FIXME: name\nparams only</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_pipe_hashid\">\n<code class=\"descname\">get_pipe_hashid</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_pipe_hashid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_pipe_hashid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_qreq_annot_nids\">\n<code class=\"descname\">get_qreq_annot_nids</code><span class=\"sig-paren\">(</span><em>aids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_qreq_annot_nids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_qreq_annot_nids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_qreq_annot_visual_uuids\">\n<code class=\"descname\">get_qreq_annot_visual_uuids</code><span class=\"sig-paren\">(</span><em>aids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_qreq_annot_visual_uuids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_qreq_annot_visual_uuids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_qreq_dannot_fgweights\">\n<code class=\"descname\">get_qreq_dannot_fgweights</code><span class=\"sig-paren\">(</span><em>daids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_qreq_dannot_fgweights\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_qreq_dannot_fgweights\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_qreq_dannot_kpts\">\n<code class=\"descname\">get_qreq_dannot_kpts</code><span class=\"sig-paren\">(</span><em>daids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_qreq_dannot_kpts\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_qreq_dannot_kpts\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_qreq_pcc_hashes\">\n<code class=\"descname\">get_qreq_pcc_hashes</code><span class=\"sig-paren\">(</span><em>aids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_qreq_pcc_hashes\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_qreq_pcc_hashes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>aids = [1, 2, 3]</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_qreq_pcc_hashid\">\n<code class=\"descname\">get_qreq_pcc_hashid</code><span class=\"sig-paren\">(</span><em>aids</em>, <em>prefix=''</em>, <em>with_nids=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_qreq_pcc_hashid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_qreq_pcc_hashid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets a combined hash of a group of aids. Each aid hash represents\nitself in the context of the query database.</p>\n<p>only considers grouping of database names</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.query_request \u2013test-get_qreq_pcc_hashid:0</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;default:K=2,nameknn=True&#39;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">defaultdb</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;testdb1&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Test that UUIDS change when you change the name lookup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">new_</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">,</span> <span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"n\">defaultdb</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                  <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># All diff names</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq1</span> <span class=\"o\">=</span> <span class=\"n\">new_</span><span class=\"p\">(</span><span class=\"n\">daid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>             <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>             <span class=\"n\">custom_nid_lookup</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">a</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">)})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># All same names</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq2</span> <span class=\"o\">=</span> <span class=\"n\">new_</span><span class=\"p\">(</span><span class=\"n\">daid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>             <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>             <span class=\"n\">custom_nid_lookup</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">)})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Change the PCC, removing a query (data should NOT change)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># because the thing being queried against is the same</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq3</span> <span class=\"o\">=</span> <span class=\"n\">new_</span><span class=\"p\">(</span><span class=\"n\">daid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>             <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>             <span class=\"n\">custom_nid_lookup</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">)})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Now remove a database object (query SHOULD change)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># because the results are different depending on</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># nameing of database (maybe they shouldnt change...)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq4</span> <span class=\"o\">=</span> <span class=\"n\">new_</span><span class=\"p\">(</span><span class=\"n\">daid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>             <span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>             <span class=\"n\">custom_nid_lookup</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">)})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qreq1</span><span class=\"o\">.</span><span class=\"n\">get_cfgstr</span><span class=\"p\">(</span><span class=\"n\">with_input</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">with_pipe</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qreq2</span><span class=\"o\">.</span><span class=\"n\">get_cfgstr</span><span class=\"p\">(</span><span class=\"n\">with_input</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">with_pipe</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qreq3</span><span class=\"o\">.</span><span class=\"n\">get_cfgstr</span><span class=\"p\">(</span><span class=\"n\">with_input</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">with_pipe</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qreq4</span><span class=\"o\">.</span><span class=\"n\">get_cfgstr</span><span class=\"p\">(</span><span class=\"n\">with_input</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">with_pipe</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qreq3</span><span class=\"o\">.</span><span class=\"n\">get_data_hashid</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">qreq2</span><span class=\"o\">.</span><span class=\"n\">get_data_hashid</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qreq1</span><span class=\"o\">.</span><span class=\"n\">get_data_hashid</span><span class=\"p\">()</span> <span class=\"o\">!=</span> <span class=\"n\">qreq2</span><span class=\"o\">.</span><span class=\"n\">get_data_hashid</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_qreq_pcc_uuids\">\n<code class=\"descname\">get_qreq_pcc_uuids</code><span class=\"sig-paren\">(</span><em>aids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_qreq_pcc_uuids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_qreq_pcc_uuids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>TODO. dont use uuids anymore. they are slow</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_qreq_qannot_fgweights\">\n<code class=\"descname\">get_qreq_qannot_fgweights</code><span class=\"sig-paren\">(</span><em>qaids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_qreq_qannot_fgweights\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_qreq_qannot_fgweights\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_qreq_qannot_kpts\">\n<code class=\"descname\">get_qreq_qannot_kpts</code><span class=\"sig-paren\">(</span><em>qaids</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_qreq_qannot_kpts\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_qreq_qannot_kpts\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_qresdir\">\n<code class=\"descname\">get_qresdir</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_qresdir\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_qresdir\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_query_hashid\">\n<code class=\"descname\">get_query_hashid</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_query_hashid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_query_hashid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.query_request \u2013exec-QueryRequest.get_query_hashid \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># DISABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">query_hashid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_query_hashid</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;query_hashid = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">repr2</span><span class=\"p\">(</span><span class=\"n\">query_hashid</span><span class=\"p\">),))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_shortinfo_cfgstr\">\n<code class=\"descname\">get_shortinfo_cfgstr</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_shortinfo_cfgstr\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_shortinfo_cfgstr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_shortinfo_parts\">\n<code class=\"descname\">get_shortinfo_parts</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_shortinfo_parts\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_shortinfo_parts\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Rename to get_nice_parts</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.get_unique_species\">\n<code class=\"descname\">get_unique_species</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.get_unique_species\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.get_unique_species\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.internal_dannots\">\n<code class=\"descname\">internal_dannots</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.internal_dannots\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.internal_qannots\">\n<code class=\"descname\">internal_qannots</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.internal_qannots\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.lazy_load\">\n<code class=\"descname\">lazy_load</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.lazy_load\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.lazy_load\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs preloading of all data needed for a batch of queries</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.lazy_preload\">\n<code class=\"descname\">lazy_preload</code><span class=\"sig-paren\">(</span><em>prog_hook=None</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.lazy_preload\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.lazy_preload\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>feature weights and normalizers should be loaded before vsone queries\nare issued. They do not depened only on qparams</p>\n<p>Load non-query specific normalizers / weights</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.load_indexer\">\n<code class=\"descname\">load_indexer</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>force=False</em>, <em>prog_hook=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.load_indexer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.load_indexer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.new_query_request\">\n<em class=\"property\">classmethod </em><code class=\"descname\">new_query_request</code><span class=\"sig-paren\">(</span><em>qaid_list</em>, <em>daid_list</em>, <em>qparams</em>, <em>qresdir</em>, <em>ibs</em>, <em>query_config2_</em>, <em>data_config2_</em>, <em>_indexer_request_params</em>, <em>custom_nid_lookup=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.new_query_request\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.new_query_request\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>old way of calling new</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>qaid_list</strong> (<em>list</em>) \u2013 </li>\n<li><strong>daid_list</strong> (<em>list</em>) \u2013 </li>\n<li><strong>qparams</strong> (<a class=\"reference internal\" href=\"#ibeis.algo.hots.query_params.QueryParams\" title=\"ibeis.algo.hots.query_params.QueryParams\"><em>QueryParams</em></a>) \u2013 query hyper-parameters</li>\n<li><strong>qresdir</strong> (<em>str</em>) \u2013 </li>\n<li><strong>ibs</strong> (<em>ibeis.IBEISController</em>) \u2013 image analysis api</li>\n<li><strong>_indexer_request_params</strong> (<em>dict</em>) \u2013 </li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\">ibeis.QueryRequest</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.qaids\">\n<code class=\"descname\">qaids</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.qaids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>These are the users qaids in vsone mode</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.qannots\">\n<code class=\"descname\">qannots</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.qannots\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>internal query annotation objects</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.qnids\">\n<code class=\"descname\">qnids</code><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.qnids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>save qnids in <a href=\"#id27\"><span class=\"problematic\" id=\"id28\">qreq_</span></a> state</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Type:</th><td class=\"field-body\">TODO</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.rrr\">\n<code class=\"descname\">rrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em>, <em>reload_module=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.rrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>special class reloading function\nThis function is often injected as rrr of classes</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.set_external_daids\">\n<code class=\"descname\">set_external_daids</code><span class=\"sig-paren\">(</span><em>daid_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.set_external_daids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.set_external_daids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.set_external_qaid_mask\">\n<code class=\"descname\">set_external_qaid_mask</code><span class=\"sig-paren\">(</span><em>masked_qaid_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.set_external_qaid_mask\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.set_external_qaid_mask\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>qaid_list</strong> (<em>list</em>) \u2013 </td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.query_request \u2013test-set_external_qaid_mask</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">opendb</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">new_query_request</span><span class=\"p\">(</span><span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">masked_qaid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">set_external_qaid_mask</span><span class=\"p\">(</span><span class=\"n\">masked_qaid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array_str</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">[1 3]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.set_external_qaids\">\n<code class=\"descname\">set_external_qaids</code><span class=\"sig-paren\">(</span><em>qaid_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.set_external_qaids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.set_external_qaids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.set_internal_masked_daids\">\n<code class=\"descname\">set_internal_masked_daids</code><span class=\"sig-paren\">(</span><em>masked_daid_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.set_internal_masked_daids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.set_internal_masked_daids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>used by the pipeline to execute a subset of the query request\nwithout modifying important state</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.set_internal_masked_qaids\">\n<code class=\"descname\">set_internal_masked_qaids</code><span class=\"sig-paren\">(</span><em>masked_qaid_list</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.set_internal_masked_qaids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.set_internal_masked_qaids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>used by the pipeline to execute a subset of the query request\nwithout modifying important state</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">utool</span> <span class=\"k\">as</span> <span class=\"nn\">ut</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">qaid_override</span><span class=\"o\">=</span><span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_override</span><span class=\"o\">=</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"s1\">&#39;default:sv_on=True&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaids</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_internal_qaids</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_lists_eq</span><span class=\"p\">(</span><span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">qaids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">masked_qaid_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">set_internal_masked_qaids</span><span class=\"p\">(</span><span class=\"n\">masked_qaid_list</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">new_internal_aids</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_internal_qaids</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_lists_eq</span><span class=\"p\">(</span><span class=\"n\">new_internal_aids</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.query_request.QueryRequest.shallowcopy\">\n<code class=\"descname\">shallowcopy</code><span class=\"sig-paren\">(</span><em>qaids=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#QueryRequest.shallowcopy\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.QueryRequest.shallowcopy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a copy of qreq with the same qparams object and a subset of the\nqx and dx objects.  used to generate chunks of vsmany queries</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.query_request QueryRequest.shallowcopy</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">default_qaids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq2_</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">shallowcopy</span><span class=\"p\">(</span><span class=\"n\">qaids</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">daids</span> <span class=\"ow\">is</span> <span class=\"n\">qreq2_</span><span class=\"o\">.</span><span class=\"n\">daids</span><span class=\"p\">,</span> <span class=\"s1\">&#39;should be the same&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">qreq2_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">),</span> <span class=\"s1\">&#39;should be diff&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#assert qreq_.metadata is not qreq2_.metadata</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.query_request.apply_species_with_detector_hack\">\n<code class=\"descclassname\">ibeis.algo.hots.query_request.</code><code class=\"descname\">apply_species_with_detector_hack</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>cfgdict</em>, <em>qaids</em>, <em>daids</em>, <em>verbose=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#apply_species_with_detector_hack\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.apply_species_with_detector_hack\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>HACK turns of featweights if they cannot be applied</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.query_request.cfg_deepcopy_test\">\n<code class=\"descclassname\">ibeis.algo.hots.query_request.</code><code class=\"descname\">cfg_deepcopy_test</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#cfg_deepcopy_test\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.cfg_deepcopy_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>TESTING FUNCTION</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">cfg_deepcopy_test</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.query_request.new_ibeis_query_request\">\n<code class=\"descclassname\">ibeis.algo.hots.query_request.</code><code class=\"descname\">new_ibeis_query_request</code><span class=\"sig-paren\">(</span><em>ibs</em>, <em>qaid_list</em>, <em>daid_list</em>, <em>cfgdict=None</em>, <em>verbose=None</em>, <em>unique_species=None</em>, <em>use_memcache=True</em>, <em>query_cfg=None</em>, <em>custom_nid_lookup=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#new_ibeis_query_request\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.new_ibeis_query_request\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>ibeis entry point to create a new query request object</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>ibs</strong> (<em>ibeis.IBEISController</em>) \u2013 image analysis api</li>\n<li><strong>qaid_list</strong> (<em>list</em>) \u2013 query ids</li>\n<li><strong>daid_list</strong> (<em>list</em>) \u2013 database ids</li>\n<li><strong>cfgdict</strong> (<em>dict</em>) \u2013 pipeline dictionary config</li>\n<li><strong>query_cfg</strong> (<em>dtool.Config</em>) \u2013 Pipeline Config Object</li>\n<li><strong>unique_species</strong> (<em>None</em>) \u2013 (default = None)</li>\n<li><strong>use_memcache</strong> (<em>bool</em>) \u2013 (default = True)</li>\n<li><strong>verbose</strong> (<em>bool</em>) \u2013 verbosity flag(default = True)</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\">ibeis.QueryRequest</p>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.query_request \u2013test-new_ibeis_query_request:0\npython -m ibeis.algo.hots.query_request \u2013test-new_ibeis_query_request:1</dd>\n<dt>Example0:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">testdata_newqreq</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">unique_species</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">NOT_QUIET</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;sv_on&#39;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fg_on&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>  <span class=\"c1\"># &#39;fw_detector&#39;: &#39;rf&#39;}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">new_ibeis_query_request</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">cfgdict</span><span class=\"o\">=</span><span class=\"n\">cfgdict</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_cfgstr</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">sv_on</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;qreq_.qparams.sv_on = </span><span class=\"si\">%r</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">sv_on</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_dbname</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_data_hashid</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">PZ_MTEST_DPCC_UUIDS-a5-n2-vpkyggtpzbqbecuq</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example1:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">testdata_newqreq</span><span class=\"p\">(</span><span class=\"s1\">&#39;NAUT_test&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">unique_species</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">NOT_QUIET</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;sv_on&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fg_on&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">new_ibeis_query_request</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">cfgdict</span><span class=\"o\">=</span><span class=\"n\">cfgdict</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">query_config2_</span><span class=\"o\">.</span><span class=\"n\">featweight_enabled</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Featweight should be off because there is no Naut detector</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">query_cfgstr</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">sv_on</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;qreq_.qparams.sv_on = </span><span class=\"si\">%r</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">sv_on</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_dbname</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_data_hashid</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">NAUT_test_DPCC_UUIDS-a5-n3-rtuyggvzpczvmjcw</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example2:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.query_request</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span> <span class=\"o\">=</span> <span class=\"n\">testdata_newqreq</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">unique_species</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">NOT_QUIET</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cfgdict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;sv_on&#39;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;query_rotation_heuristic&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">new_ibeis_query_request</span><span class=\"p\">(</span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"p\">,</span> <span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">cfgdict</span><span class=\"o\">=</span><span class=\"n\">cfgdict</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Featweight should be off because there is no Naut detector</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">query_cfgstr</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">sv_on</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">&#39;qreq_.qparams.sv_on = </span><span class=\"si\">%r</span><span class=\"s1\"> &#39;</span> <span class=\"o\">%</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">sv_on</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_dbname</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">get_data_hashid</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">PZ_MTEST_DPCC_UUIDS-a5-n2-vpkyggtpzbqbecuq</span>\n</pre></div>\n</div>\n</dd>\n<dt>Ignore:</dt>\n<dd><p class=\"first\"># This is supposed to be the beginings of the code to transition the\n# pipeline configuration into the new minimal dict based structure that\n# supports different configs for query and database annotations.\ndcfg = <a href=\"#id29\"><span class=\"problematic\" id=\"id30\">qreq_</span></a>.extern_data_config2\nqcfg = <a href=\"#id31\"><span class=\"problematic\" id=\"id32\">qreq_</span></a>.extern_query_config2\nut.dict_intersection(qcfg.__dict__, dcfg.__dict__)\nfrom ibeis.expt import cfghelpers\ncfg_list = [qcfg.__dict__, dcfg.__dict__]\nnonvaried_cfg, varied_cfg_list = ut.partition_varied_cfg_list(</p>\n<blockquote>\n<div>cfg_list, recursive=True)</div></blockquote>\n<p class=\"last\">qvaried, dvaried = varied_cfg_list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.query_request.testdata_newqreq\">\n<code class=\"descclassname\">ibeis.algo.hots.query_request.</code><code class=\"descname\">testdata_newqreq</code><span class=\"sig-paren\">(</span><em>defaultdb='testdb1'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/query_request/#testdata_newqreq\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.query_request.testdata_newqreq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">(ibeis.IBEISController, list, list)</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.requery_knn\">\n<span id=\"ibeis-algo-hots-requery-knn-module\"></span><h2>ibeis.algo.hots.requery_knn module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.requery_knn\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.requery_knn.FinalResults\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.requery_knn.</code><code class=\"descname\">FinalResults</code><span class=\"sig-paren\">(</span><em>shape</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/requery_knn/#FinalResults\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.requery_knn.FinalResults\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.requery_knn.FinalResults.assign\">\n<code class=\"descname\">assign</code><span class=\"sig-paren\">(</span><em>index</em>, <em>idxs</em>, <em>dists</em>, <em>trueks</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/requery_knn/#FinalResults.assign\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.requery_knn.FinalResults.assign\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.requery_knn.TempQuery\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.requery_knn.</code><code class=\"descname\">TempQuery</code><span class=\"sig-paren\">(</span><em>vecs</em>, <em>invalid_axs</em>, <em>get_neighbors</em>, <em>get_axs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/requery_knn/#TempQuery\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.requery_knn.TempQuery\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<p>queries that are incomplete</p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.requery_knn.TempQuery.compress_inplace\">\n<code class=\"descname\">compress_inplace</code><span class=\"sig-paren\">(</span><em>flags</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/requery_knn/#TempQuery.compress_inplace\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.requery_knn.TempQuery.compress_inplace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.requery_knn.TempQuery.neighbors\">\n<code class=\"descname\">neighbors</code><span class=\"sig-paren\">(</span><em>temp_K</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/requery_knn/#TempQuery.neighbors\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.requery_knn.TempQuery.neighbors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"ibeis.algo.hots.requery_knn.TempResults\">\n<em class=\"property\">class </em><code class=\"descclassname\">ibeis.algo.hots.requery_knn.</code><code class=\"descname\">TempResults</code><span class=\"sig-paren\">(</span><em>index</em>, <em>idxs</em>, <em>dists</em>, <em>validflags</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/requery_knn/#TempResults\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.requery_knn.TempResults\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">utool.util_dev.NiceRepr</span></code></p>\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.requery_knn.TempResults.compress\">\n<code class=\"descname\">compress</code><span class=\"sig-paren\">(</span><em>flags</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/requery_knn/#TempResults.compress\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.requery_knn.TempResults.compress\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.requery_knn.TempResults.done_flags\">\n<code class=\"descname\">done_flags</code><span class=\"sig-paren\">(</span><em>num_neighbs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/requery_knn/#TempResults.done_flags\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.requery_knn.TempResults.done_flags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"ibeis.algo.hots.requery_knn.TempResults.done_part\">\n<code class=\"descname\">done_part</code><span class=\"sig-paren\">(</span><em>num_neighbs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/requery_knn/#TempResults.done_part\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.requery_knn.TempResults.done_part\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.requery_knn.in1d_shape\">\n<code class=\"descclassname\">ibeis.algo.hots.requery_knn.</code><code class=\"descname\">in1d_shape</code><span class=\"sig-paren\">(</span><em>arr1</em>, <em>arr2</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/requery_knn/#in1d_shape\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.requery_knn.in1d_shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.requery_knn.requery_knn\">\n<code class=\"descclassname\">ibeis.algo.hots.requery_knn.</code><code class=\"descname\">requery_knn</code><span class=\"sig-paren\">(</span><em>get_neighbors</em>, <em>get_axs</em>, <em>qfx2_vec</em>, <em>num_neighbs</em>, <em>invalid_axs=[]</em>, <em>pad=2</em>, <em>limit=4</em>, <em>recover=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/requery_knn/#requery_knn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.requery_knn.requery_knn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Searches for <cite>num_neighbs</cite>, while ignoring certain matches.  K is\nincreassed until enough valid neighbors are found or a limit is reached.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ibeis</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span> <span class=\"o\">=</span> <span class=\"n\">ibeis</span><span class=\"o\">.</span><span class=\"n\">testdata_qreq_</span><span class=\"p\">(</span><span class=\"n\">defaultdb</span><span class=\"o\">=</span><span class=\"s1\">&#39;testdb1&#39;</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">load_indexer</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indexer</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">indexer</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qannot</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">internal_qannots</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_vec</span> <span class=\"o\">=</span> <span class=\"n\">qannot</span><span class=\"o\">.</span><span class=\"n\">vecs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">ibs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid</span> <span class=\"o\">=</span> <span class=\"n\">qannot</span><span class=\"o\">.</span><span class=\"n\">aid</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">impossible_aids</span> <span class=\"o\">=</span> <span class=\"n\">ibs</span><span class=\"o\">.</span><span class=\"n\">get_annot_groundtruth</span><span class=\"p\">(</span><span class=\"n\">qaid</span><span class=\"p\">,</span> <span class=\"n\">noself</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">invalid_axs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">aid2_ax</span><span class=\"p\">,</span> <span class=\"n\">impossible_aids</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pad</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">limit</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">num_neighbs</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">get_neighbors</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">temp_K</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"k\">return</span> <span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">flann</span><span class=\"o\">.</span><span class=\"n\">nn_index</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">temp_K</span><span class=\"p\">,</span> <span class=\"n\">checks</span><span class=\"o\">=</span><span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">checks</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                                  <span class=\"n\">cores</span><span class=\"o\">=</span><span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">cores</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_axs</span> <span class=\"o\">=</span> <span class=\"n\">indexer</span><span class=\"o\">.</span><span class=\"n\">get_nn_axs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">requery_knn</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">get_neighbors</span><span class=\"p\">,</span> <span class=\"n\">get_axs</span><span class=\"p\">,</span> <span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">num_neighbs</span><span class=\"p\">,</span> <span class=\"n\">invalid_axs</span><span class=\"p\">,</span> <span class=\"n\">pad</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">limit</span><span class=\"p\">,</span> <span class=\"n\">recover</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_idx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span> <span class=\"o\">=</span> <span class=\"n\">res</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diff</span><span class=\"p\">(</span><span class=\"n\">qfx2_dist</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"docutils\">\n<dt>Ignore:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.neighbor_index</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.requery_knn</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">max_k</span> <span class=\"o\">=</span> <span class=\"mi\">9</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">n_pts</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">num_neighbs</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">temp_K</span> <span class=\"o\">=</span> <span class=\"n\">num_neighbs</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Create dummy data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rng</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">RandomState</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tx2_idx_full</span> <span class=\"o\">=</span> <span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">n_pts</span><span class=\"p\">,</span> <span class=\"n\">max_k</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tx2_idx_full</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tx2_dist_full</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">max_k</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">n_pts</span><span class=\"p\">))[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">10</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tx2_dist_full</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">n_pts</span><span class=\"p\">,</span> <span class=\"n\">max_k</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">100</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_vec</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">n_pts</span><span class=\"p\">)[:,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">qfx2_vec</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pad</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">limit</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">recover</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">invalid_axs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_axs</span> <span class=\"o\">=</span> <span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">identity</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">get_neighbors</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">temp_K</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"c1\"># simulates finding k nearest neighbors</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">idxs</span> <span class=\"o\">=</span> <span class=\"n\">tx2_idx_full</span><span class=\"p\">[</span><span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(),</span> <span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"n\">temp_K</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">dists</span> <span class=\"o\">=</span> <span class=\"n\">tx2_dist_full</span><span class=\"p\">[</span><span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(),</span> <span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"n\">temp_K</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"k\">return</span> <span class=\"n\">idxs</span><span class=\"p\">,</span> <span class=\"n\">dists</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">requery_knn</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">get_neighbors</span><span class=\"p\">,</span> <span class=\"n\">get_axs</span><span class=\"p\">,</span> <span class=\"n\">qfx2_vec</span><span class=\"p\">,</span> <span class=\"n\">num_neighbs</span><span class=\"p\">,</span> <span class=\"n\">invalid_axs</span><span class=\"p\">,</span> <span class=\"n\">pad</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">limit</span><span class=\"p\">,</span> <span class=\"n\">recover</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qfx2_idx</span><span class=\"p\">,</span> <span class=\"n\">qfx2_dist</span> <span class=\"o\">=</span> <span class=\"n\">res</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.scoring\">\n<span id=\"ibeis-algo-hots-scoring-module\"></span><h2>ibeis.algo.hots.scoring module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.scoring\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.scoring.get_name_shortlist_aids\">\n<code class=\"descclassname\">ibeis.algo.hots.scoring.</code><code class=\"descname\">get_name_shortlist_aids</code><span class=\"sig-paren\">(</span><em>daid_list</em>, <em>dnid_list</em>, <em>annot_score_list</em>, <em>name_score_list</em>, <em>nid2_nidx</em>, <em>nNameShortList</em>, <em>nAnnotPerName</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/scoring/#get_name_shortlist_aids\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.scoring.get_name_shortlist_aids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.scoring \u2013test-get_name_shortlist_aids</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.scoring</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">daid_list</span>        <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dnid_list</span>        <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">annot_score_list</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mi\">6</span><span class=\"p\">,</span>  <span class=\"mi\">2</span><span class=\"p\">,</span>  <span class=\"mi\">3</span><span class=\"p\">,</span>  <span class=\"mi\">5</span><span class=\"p\">,</span>  <span class=\"mi\">6</span><span class=\"p\">,</span>  <span class=\"mi\">3</span><span class=\"p\">,</span>  <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">name_score_list</span>  <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mi\">8</span><span class=\"p\">,</span>  <span class=\"mi\">9</span><span class=\"p\">,</span>  <span class=\"mi\">5</span><span class=\"p\">,</span>  <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nid2_nidx</span>        <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nNameShortList</span><span class=\"p\">,</span> <span class=\"n\">nAnnotPerName</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">daid_list</span><span class=\"p\">,</span> <span class=\"n\">dnid_list</span><span class=\"p\">,</span> <span class=\"n\">annot_score_list</span><span class=\"p\">,</span> <span class=\"n\">name_score_list</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>        <span class=\"n\">nid2_nidx</span><span class=\"p\">,</span> <span class=\"n\">nNameShortList</span><span class=\"p\">,</span> <span class=\"n\">nAnnotPerName</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">top_daids</span> <span class=\"o\">=</span> <span class=\"n\">get_name_shortlist_aids</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">top_daids</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">[15, 14, 11, 13, 16]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.scoring.make_chipmatch_shortlists\">\n<code class=\"descclassname\">ibeis.algo.hots.scoring.</code><code class=\"descname\">make_chipmatch_shortlists</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>cm_list</em>, <em>nNameShortList</em>, <em>nAnnotPerName</em>, <em>score_method='nsum'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/scoring/#make_chipmatch_shortlists\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.scoring.make_chipmatch_shortlists\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Makes shortlists for reranking</p>\n<dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.scoring \u2013test-make_chipmatch_shortlists \u2013show</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># ENABLE_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.scoring</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre_sver</span><span class=\"p\">(</span><span class=\"s1\">&#39;PZ_MTEST&#39;</span><span class=\"p\">,</span> <span class=\"n\">qaid_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score_method</span>    <span class=\"o\">=</span> <span class=\"s1\">&#39;nsum&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nNameShortList</span>  <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nAnnotPerName</span>   <span class=\"o\">=</span> <span class=\"mi\">6</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># apply scores</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score_chipmatch_list</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span><span class=\"p\">,</span> <span class=\"n\">score_method</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_input</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\">#assert cm_input.dnid_list.take(cm_input.argsort())[0] == cm_input.qnid</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_shortlist</span> <span class=\"o\">=</span> <span class=\"n\">make_chipmatch_shortlists</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span><span class=\"p\">,</span> <span class=\"n\">nNameShortList</span><span class=\"p\">,</span> <span class=\"n\">nAnnotPerName</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm_input</span><span class=\"o\">.</span><span class=\"n\">print_rawinfostr</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_shortlist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">print_rawinfostr</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># should be sorted already from the shortlist take</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">top_nid_list</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">dnid_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">top_aid_list</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">daid_list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qnid</span> <span class=\"o\">=</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">qnid</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;top_aid_list = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">top_aid_list</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;top_nid_list = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">top_nid_list</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;qnid = </span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">qnid</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rankx</span> <span class=\"o\">=</span> <span class=\"n\">top_nid_list</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">qnid</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">rankx</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;qnid=</span><span class=\"si\">%r</span><span class=\"s1\"> should be first rank, not rankx=</span><span class=\"si\">%r</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">qnid</span><span class=\"p\">,</span> <span class=\"n\">rankx</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">max_num_rerank</span> <span class=\"o\">=</span> <span class=\"n\">nNameShortList</span> <span class=\"o\">*</span> <span class=\"n\">nAnnotPerName</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">min_num_rerank</span> <span class=\"o\">=</span> <span class=\"n\">nNameShortList</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">assert_inbounds</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">top_nid_list</span><span class=\"p\">),</span> <span class=\"n\">min_num_rerank</span><span class=\"p\">,</span> <span class=\"n\">max_num_rerank</span><span class=\"p\">,</span> <span class=\"s1\">&#39;incorrect number in shortlist&#39;</span><span class=\"p\">,</span> <span class=\"n\">eq</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">show_single_annotmatch</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">daid</span><span class=\"o\">=</span><span class=\"n\">top_aid_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.scoring.score_chipmatch_list\">\n<code class=\"descclassname\">ibeis.algo.hots.scoring.</code><code class=\"descname\">score_chipmatch_list</code><span class=\"sig-paren\">(</span><em>qreq_</em>, <em>cm_list</em>, <em>score_method</em>, <em>progkw=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/scoring/#score_chipmatch_list\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.scoring.score_chipmatch_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>CommandLine:</dt>\n<dd>python -m ibeis.algo.hots.scoring \u2013test-score_chipmatch_list\npython -m ibeis.algo.hots.scoring \u2013test-score_chipmatch_list:1\npython -m ibeis.algo.hots.scoring \u2013test-score_chipmatch_list:0 \u2013show</dd>\n<dt>Example0:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># SLOW_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># xdoctest: +SKIP</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># (IMPORTANT)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.scoring</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_pre_sver</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score_method</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">prescore_method</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score_chipmatch_list</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span><span class=\"p\">,</span> <span class=\"n\">score_method</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_list</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">show_single_annotmatch</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example1:</dt>\n<dd><div class=\"first last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># SLOW_DOCTEST</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># (IMPORTANT)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ibeis.algo.hots.scoring</span> <span class=\"k\">import</span> <span class=\"o\">*</span>  <span class=\"c1\"># NOQA</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ibs</span><span class=\"p\">,</span> <span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span> <span class=\"o\">=</span> <span class=\"n\">plh</span><span class=\"o\">.</span><span class=\"n\">testdata_post_sver</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qaid</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qaids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span> <span class=\"o\">=</span> <span class=\"n\">cm_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score_method</span> <span class=\"o\">=</span> <span class=\"n\">qreq_</span><span class=\"o\">.</span><span class=\"n\">qparams</span><span class=\"o\">.</span><span class=\"n\">score_method</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score_chipmatch_list</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">,</span> <span class=\"n\">cm_list</span><span class=\"p\">,</span> <span class=\"n\">score_method</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">assert</span> <span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">score_list</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">quit_if_noshow</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">show_single_annotmatch</span><span class=\"p\">(</span><span class=\"n\">qreq_</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">show_if_requested</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots.toy_nan_rf\">\n<span id=\"ibeis-algo-hots-toy-nan-rf-module\"></span><h2>ibeis.algo.hots.toy_nan_rf module<a class=\"headerlink\" href=\"#module-ibeis.algo.hots.toy_nan_rf\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.toy_nan_rf.get_toydata\">\n<code class=\"descclassname\">ibeis.algo.hots.toy_nan_rf.</code><code class=\"descname\">get_toydata</code><span class=\"sig-paren\">(</span><em>rng</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/toy_nan_rf/#get_toydata\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.toy_nan_rf.get_toydata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.toy_nan_rf.main\">\n<code class=\"descclassname\">ibeis.algo.hots.toy_nan_rf.</code><code class=\"descname\">main</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/toy_nan_rf/#main\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.toy_nan_rf.main\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>SeeAlso:</dt>\n<dd>python -m sklearn.ensemble.tests.test_forest test_multioutput</dd>\n<dt>CommandLine:</dt>\n<dd>python -m ibeis toy_classify_nans\npython -m ibeis toy_classify_nans \u2013toy1 \u2013save \u201crf_nan_toy1.jpg\u201d \u2013figsize=10,10\npython -m ibeis toy_classify_nans \u2013toy2 \u2013save \u201crf_nan_toy2.jpg\u201d \u2013figsize=10,10\npython -m ibeis toy_classify_nans \u2013toy2 \u2013save \u201crf_nan_toy3.jpg\u201d \u2013figsize=10,10 \u2013extra\npython -m ibeis toy_classify_nans \u2013toy2 \u2013save \u201crf_nan_toy4.jpg\u201d \u2013figsize=10,10 \u2013extra \u2013nanrate=0\npython -m ibeis toy_classify_nans \u2013toy2 \u2013save \u201crf_nan_toy5.jpg\u201d \u2013figsize=10,10 \u2013nanrate=0</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">toy_classify_nans</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.toy_nan_rf.show_nan_decision_function_2d\">\n<code class=\"descclassname\">ibeis.algo.hots.toy_nan_rf.</code><code class=\"descname\">show_nan_decision_function_2d</code><span class=\"sig-paren\">(</span><em>X</em>, <em>y</em>, <em>X_true</em>, <em>clf</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/toy_nan_rf/#show_nan_decision_function_2d\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.toy_nan_rf.show_nan_decision_function_2d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.toy_nan_rf.toydata1\">\n<code class=\"descclassname\">ibeis.algo.hots.toy_nan_rf.</code><code class=\"descname\">toydata1</code><span class=\"sig-paren\">(</span><em>rng</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/toy_nan_rf/#toydata1\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.toy_nan_rf.toydata1\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><strong>Description of Plot</strong></p>\n<p>You\u2019ll notice that there are 4 plots. This is necessary to visualize a grid\nwith nans. Each plot shows points in the 2-dimensional grid with corners at\n(0, 0) and (40, 40). The top left plot has these coordinates labeled. The\nother 3 plots correspond to the top left grid, but in these plots at least\none of the dimensions has been \u201cnanned\u201d. In the top right the x-dimension\nis \u201cnanned\u201d. In the bottom left the y-dimension is \u201cnanned\u201d, and in the\nbottom right both dimensions are \u201cnanned\u201d. Even though all plots are drawn\nas a 2d-surface only the topleft plot is truly a surface with 2 degrees of\nfreedom. The top right and bottom left plots are really lines with 1 degree\nof freedom, and the bottom right plot is actually just a single point with\n0 degrees of freedom.</p>\n<p>In this example I create 10 Gaussian blobs where the first 9 have their\nmeans laid out in a 3x3 grid and the last one has its mean in the center,\nbut I gave it a high standard deviation. I\u2019ll refer to the high std cluster\nas 9, and label the other clusters at the grid means (to agree with the\ndemo code) like this:</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">`</span>\n<span class=\"pre\">6</span>&#160;&#160; <span class=\"pre\">7</span>&#160;&#160; <span class=\"pre\">8</span>\n<span class=\"pre\">3</span>&#160;&#160; <span class=\"pre\">4</span>&#160;&#160; <span class=\"pre\">5</span>\n<span class=\"pre\">0</span>&#160;&#160; <span class=\"pre\">1</span>&#160;&#160; <span class=\"pre\">2</span>\n<span class=\"pre\">`</span></code></p>\n<p>Looking at the top left plot you can see clusters 0, 1, 2, 4, 6, and 8. The\nreason the other cluster do not appear in this grid is because I\u2019ve set at\nleast one of their dimensions to be nan.  Specifically, cluster 3 had its y\ndimension set to nan; cluster 5 and 7 had their x dimension set to nan; and\ncluster 9 had both x and y dimensions set to nan.</p>\n<p>For clusters 3, 5, and 7, I plot \u201cnanned\u201d points as lines along the nanned\ndimension to show that only the non-nan dimensions can be used to\ndistinguish these points. I also plot the original position before I\n\u201cnanned\u201d it for visualization purposes, but the learning algorithm never\nsees this. For cluster 9, I only plot the original positions because all of\nthis data collapses to a single point [nan, nan].</p>\n<p>Red points are of class 0, and blue points are of class 1. Points in each\nplot represent the training data. The colored background of each plot\nrepresents the classification surface.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.toy_nan_rf.toydata2\">\n<code class=\"descclassname\">ibeis.algo.hots.toy_nan_rf.</code><code class=\"descname\">toydata2</code><span class=\"sig-paren\">(</span><em>rng</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/toy_nan_rf/#toydata2\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.toy_nan_rf.toydata2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"module-ibeis.algo.hots\">\n<span id=\"module-contents\"></span><h2>Module contents<a class=\"headerlink\" href=\"#module-ibeis.algo.hots\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"ibeis.algo.hots.IMPORT_TUPLES\">\n<code class=\"descclassname\">ibeis.algo.hots.</code><code class=\"descname\">IMPORT_TUPLES</code><em class=\"property\"> = [('_pipeline_helpers', None), ('chip_match', None), ('exceptions', None), ('hstypes', None), ('match_chips4', None), ('name_scoring', None), ('neighbor_index', None), ('neighbor_index_cache', None), ('nn_weights', None), ('old_chip_match', None), ('pipeline', None), ('query_params', None), ('query_request', None), ('scoring', None)]</em><a class=\"headerlink\" href=\"#ibeis.algo.hots.IMPORT_TUPLES\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>cd /home/joncrall/code/ibeis/ibeis/algo/hots\nmakeinit.py \u2013modname=ibeis.algo.hots</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Type:</th><td class=\"field-body\">Regen Command</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.reassign_submodule_attributes\">\n<code class=\"descclassname\">ibeis.algo.hots.</code><code class=\"descname\">reassign_submodule_attributes</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/#reassign_submodule_attributes\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.reassign_submodule_attributes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>why reloading all the modules doesnt do this I don\u2019t know</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.reload_subs\">\n<code class=\"descclassname\">ibeis.algo.hots.</code><code class=\"descname\">reload_subs</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/ibeis/algo/hots/#reload_subs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#ibeis.algo.hots.reload_subs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reloads ibeis.algo.hots and submodules</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"ibeis.algo.hots.rrrr\">\n<code class=\"descclassname\">ibeis.algo.hots.</code><code class=\"descname\">rrrr</code><span class=\"sig-paren\">(</span><em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#ibeis.algo.hots.rrrr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reloads ibeis.algo.hots and submodules</p>\n</dd></dl>\n\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ibeis.algo.preproc", "ibeis.algo.preproc package", "N", "next"], ["ibeis.algo.graph.tests", "ibeis.algo.graph.tests package", "P", "previous"]], "sourcename": "ibeis.algo.hots.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">ibeis.algo.hots package</a><ul>\n<li><a class=\"reference internal\" href=\"#submodules\">Submodules</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots._pipeline_helpers\">ibeis.algo.hots._pipeline_helpers module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.chip_match\">ibeis.algo.hots.chip_match module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.exceptions\">ibeis.algo.hots.exceptions module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.hstypes\">ibeis.algo.hots.hstypes module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.match_chips4\">ibeis.algo.hots.match_chips4 module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.name_scoring\">ibeis.algo.hots.name_scoring module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.neighbor_index\">ibeis.algo.hots.neighbor_index module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.neighbor_index_cache\">ibeis.algo.hots.neighbor_index_cache module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.nn_weights\">ibeis.algo.hots.nn_weights module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.old_chip_match\">ibeis.algo.hots.old_chip_match module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.pipeline\">ibeis.algo.hots.pipeline module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.query_params\">ibeis.algo.hots.query_params module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.query_request\">ibeis.algo.hots.query_request module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.requery_knn\">ibeis.algo.hots.requery_knn module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.scoring\">ibeis.algo.hots.scoring module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots.toy_nan_rf\">ibeis.algo.hots.toy_nan_rf module</a></li>\n<li><a class=\"reference internal\" href=\"#module-ibeis.algo.hots\">Module contents</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "ibeis.algo.hots", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}